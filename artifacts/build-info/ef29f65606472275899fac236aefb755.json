{
	"id": "ef29f65606472275899fac236aefb755",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"event.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.5.0 < 0.9.0 ;\r\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\r\n\r\ncontract Event_Org{\r\naddress manager;\r\n    constructor(){\r\n manager = msg.sender;        \r\n    }\r\n\r\n    struct Event{\r\nstring name;\r\nuint date;\r\nuint price;\r\n\r\n    }\r\nuint id;\r\n   mapping (uint=>Event) noname;\r\n\r\nfunction CreateEvent(string memory name , uint date , uint price) public {\r\nrequire(manager == msg.sender);\r\nnoname[id] = Event(name , date ,price);\r\nid++;\r\n\r\n}\r\n\r\nfunction Checkevent(uint id_) public view returns (string memory , uint){\r\n\r\nreturn( noname[id_].name , noname[id_].price);\r\n\r\n}\r\n\r\nfunction BuyTicket(uint id , uint cash) public view returns (string memory) {\r\n// require(noname[id].price == cash, \"ticket price is\" , noname[id].price);\r\nif(cash < noname[id].price || cash > noname[id].price){\r\n    return string.concat(\"Ticket price is \",Strings.toString(noname[id].price));\r\n}\r\n\r\n\r\n}\r\n}\r\n\r\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ab6a269a65f5803da06b288908b4f00629e38397f6d295ec471d84279be2e1d564736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab6a269a65f5803da06b288908b4f00629e38397f6d295ec471d84279be2e1d564736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB PUSH11 0x269A65F5803DA06B288908 0xB4 CREATE MOD 0x29 0xE3 DUP4 SWAP8 0xF6 0xD2 SWAP6 0xEC SELFBALANCE SAR DUP5 0x27 SWAP12 0xE2 0xE1 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "220:2559:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab6a269a65f5803da06b288908b4f00629e38397f6d295ec471d84279be2e1d564736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB PUSH11 0x269A65F5803DA06B288908 0xB4 CREATE MOD 0x29 0xE3 DUP4 SWAP8 0xF6 0xD2 SWAP6 0xEC SELFBALANCE SAR DUP5 0x27 SWAP12 0xE2 0xE1 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "220:2559:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ab6a269a65f5803da06b288908b4f00629e38397f6d295ec471d84279be2e1d564736f6c63430008120033",
									".code": [
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"event.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209150934ab0c91ee4f9e04d862390c6531c91524dc4cebd8ff4df5e5c5f78cf9a64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209150934ab0c91ee4f9e04d862390c6531c91524dc4cebd8ff4df5e5c5f78cf9a64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 POP SWAP4 0x4A 0xB0 0xC9 0x1E 0xE4 0xF9 0xE0 0x4D DUP7 0x23 SWAP1 0xC6 MSTORE8 SHR SWAP2 MSTORE 0x4D 0xC4 0xCE 0xBD DUP16 DELEGATECALL 0xDF 0x5E 0x5C 0x5F PUSH25 0xCF9A64736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "202:12582:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209150934ab0c91ee4f9e04d862390c6531c91524dc4cebd8ff4df5e5c5f78cf9a64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 POP SWAP4 0x4A 0xB0 0xC9 0x1E 0xE4 0xF9 0xE0 0x4D DUP7 0x23 SWAP1 0xC6 MSTORE8 SHR SWAP2 MSTORE 0x4D 0xC4 0xCE 0xBD DUP16 DELEGATECALL 0xDF 0x5E 0x5C 0x5F PUSH25 0xCF9A64736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "202:12582:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209150934ab0c91ee4f9e04d862390c6531c91524dc4cebd8ff4df5e5c5f78cf9a64736f6c63430008120033",
									".code": [
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"event.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d721ecf1dbea5e9bc0132744e6031bb93b88801904ab98161f4e012e5110763064736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d721ecf1dbea5e9bc0132744e6031bb93b88801904ab98161f4e012e5110763064736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0x21 0xEC CALL 0xDB 0xEA 0x5E SWAP12 0xC0 SGT 0x27 PREVRANDAO 0xE6 SUB SHL 0xB9 EXTCODESIZE DUP9 DUP1 NOT DIV 0xAB SWAP9 AND 0x1F 0x4E ADD 0x2E MLOAD LT PUSH23 0x3064736F6C634300081200330000000000000000000000 ",
							"sourceMap": "215:1047:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d721ecf1dbea5e9bc0132744e6031bb93b88801904ab98161f4e012e5110763064736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0x21 0xEC CALL 0xDB 0xEA 0x5E SWAP12 0xC0 SGT 0x27 PREVRANDAO 0xE6 SUB SHL 0xB9 EXTCODESIZE DUP9 DUP1 NOT DIV 0xAB SWAP9 AND 0x1F 0x4E ADD 0x2E MLOAD LT PUSH23 0x3064736F6C634300081200330000000000000000000000 ",
							"sourceMap": "215:1047:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d721ecf1dbea5e9bc0132744e6031bb93b88801904ab98161f4e012e5110763064736f6c63430008120033",
									".code": [
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"event.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"event.sol": {
				"Event_Org": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "cash",
									"type": "uint256"
								}
							],
							"name": "BuyTicket",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id_",
									"type": "uint256"
								}
							],
							"name": "Checkevent",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "date",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "CreateEvent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"event.sol\":127:942  contract Event_Org{... */\n  mstore(0x40, 0x80)\n    /* \"event.sol\":170:223  constructor(){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"event.sol\":197:207  msg.sender */\n  caller\n    /* \"event.sol\":187:194  manager */\n  0x00\n  dup1\n    /* \"event.sol\":187:207  manager = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"event.sol\":127:942  contract Event_Org{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"event.sol\":127:942  contract Event_Org{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x163f41af\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa8445a1e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xdc8903a8\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"event.sol\":340:500  function CreateEvent(string memory name , uint date , uint price) public {... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      stop\n        /* \"event.sol\":636:939  function BuyTicket(uint id , uint cash) public view returns (string memory) {... */\n    tag_4:\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      tag_13\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"event.sol\":504:632  function Checkevent(uint id_) public view returns (string memory , uint){... */\n    tag_5:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_20\n      swap3\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"event.sol\":340:500  function CreateEvent(string memory name , uint date , uint price) public {... */\n    tag_9:\n        /* \"event.sol\":435:445  msg.sender */\n      caller\n        /* \"event.sol\":424:445  manager == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"event.sol\":424:431  manager */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"event.sol\":424:445  manager == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"event.sol\":416:446  require(manager == msg.sender) */\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n        /* \"event.sol\":462:487  Event(name , date ,price) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"event.sol\":468:472  name */\n      dup5\n        /* \"event.sol\":462:487  Event(name , date ,price) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"event.sol\":475:479  date */\n      dup4\n        /* \"event.sol\":462:487  Event(name , date ,price) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"event.sol\":481:486  price */\n      dup3\n        /* \"event.sol\":462:487  Event(name , date ,price) */\n      dup2\n      mstore\n      pop\n        /* \"event.sol\":449:455  noname */\n      0x02\n        /* \"event.sol\":449:459  noname[id] */\n      0x00\n        /* \"event.sol\":456:458  id */\n      sload(0x01)\n        /* \"event.sol\":449:459  noname[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"event.sol\":449:487  noname[id] = Event(name , date ,price) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      swap1\n      dup2\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"event.sol\":490:492  id */\n      0x01\n      0x00\n        /* \"event.sol\":490:494  id++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_26\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"event.sol\":340:500  function CreateEvent(string memory name , uint date , uint price) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"event.sol\":636:939  function BuyTicket(uint id , uint cash) public view returns (string memory) {... */\n    tag_13:\n        /* \"event.sol\":697:710  string memory */\n      0x60\n        /* \"event.sol\":802:808  noname */\n      0x02\n        /* \"event.sol\":802:812  noname[id] */\n      0x00\n        /* \"event.sol\":809:811  id */\n      dup5\n        /* \"event.sol\":802:812  noname[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"event.sol\":802:818  noname[id].price */\n      0x02\n      add\n      sload\n        /* \"event.sol\":795:799  cash */\n      dup3\n        /* \"event.sol\":795:818  cash < noname[id].price */\n      lt\n        /* \"event.sol\":795:845  cash < noname[id].price || cash > noname[id].price */\n      dup1\n      tag_29\n      jumpi\n      pop\n        /* \"event.sol\":829:835  noname */\n      0x02\n        /* \"event.sol\":829:839  noname[id] */\n      0x00\n        /* \"event.sol\":836:838  id */\n      dup5\n        /* \"event.sol\":829:839  noname[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"event.sol\":829:845  noname[id].price */\n      0x02\n      add\n      sload\n        /* \"event.sol\":822:826  cash */\n      dup3\n        /* \"event.sol\":822:845  cash > noname[id].price */\n      gt\n        /* \"event.sol\":795:845  cash < noname[id].price || cash > noname[id].price */\n    tag_29:\n        /* \"event.sol\":792:932  if(cash < noname[id].price || cash > noname[id].price){... */\n      iszero\n      tag_30\n      jumpi\n        /* \"event.sol\":893:927  Strings.toString(noname[id].price) */\n      tag_31\n        /* \"event.sol\":910:916  noname */\n      0x02\n        /* \"event.sol\":910:920  noname[id] */\n      0x00\n        /* \"event.sol\":917:919  id */\n      dup6\n        /* \"event.sol\":910:920  noname[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"event.sol\":910:926  noname[id].price */\n      0x02\n      add\n      sload\n        /* \"event.sol\":893:909  Strings.toString */\n      tag_32\n        /* \"event.sol\":893:927  Strings.toString(noname[id].price) */\n      jump\t// in\n    tag_31:\n        /* \"event.sol\":860:928  string.concat(\"Ticket price is \",Strings.toString(noname[id].price)) */\n      add(0x20, mload(0x40))\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"event.sol\":853:928  return string.concat(\"Ticket price is \",Strings.toString(noname[id].price)) */\n      swap1\n      pop\n      jump(tag_28)\n        /* \"event.sol\":792:932  if(cash < noname[id].price || cash > noname[id].price){... */\n    tag_30:\n        /* \"event.sol\":636:939  function BuyTicket(uint id , uint cash) public view returns (string memory) {... */\n    tag_28:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"event.sol\":504:632  function Checkevent(uint id_) public view returns (string memory , uint){... */\n    tag_19:\n        /* \"event.sol\":555:568  string memory */\n      0x60\n        /* \"event.sol\":571:575  uint */\n      0x00\n        /* \"event.sol\":589:595  noname */\n      0x02\n        /* \"event.sol\":589:600  noname[id_] */\n      0x00\n        /* \"event.sol\":596:599  id_ */\n      dup5\n        /* \"event.sol\":589:600  noname[id_] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"event.sol\":589:605  noname[id_].name */\n      0x00\n      add\n        /* \"event.sol\":608:614  noname */\n      0x02\n        /* \"event.sol\":608:619  noname[id_] */\n      0x00\n        /* \"event.sol\":615:618  id_ */\n      dup6\n        /* \"event.sol\":608:619  noname[id_] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"event.sol\":608:625  noname[id_].price */\n      0x02\n      add\n      sload\n        /* \"event.sol\":581:626  return( noname[id_].name , noname[id_].price) */\n      dup2\n      dup1\n      sload\n      tag_36\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_38\n      swap1\n      tag_37\n      jump\t// in\n    tag_38:\n      dup1\n      iszero\n      tag_39\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_40\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_39)\n    tag_40:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_41:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_41\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_39:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      swap2\n      pop\n      swap2\n      pop\n        /* \"event.sol\":504:632  function Checkevent(uint id_) public view returns (string memory , uint){... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":447:1143  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":503:516  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":552:566  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":589:590  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":569:586  Math.log10(value) */\n      tag_43\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":580:585  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":569:579  Math.log10 */\n      tag_44\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":569:586  Math.log10(value) */\n      jump\t// in\n    tag_43:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":569:590  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":552:590  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":604:624  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":638:644  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":627:645  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_45\n      jumpi\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n    tag_45:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_48\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_48:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":604:645  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":659:670  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":785:791  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":781:783  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":777:792  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":769:775  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":765:793  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":758:793  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":827:831  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n      iszero\n      tag_50\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":851:856  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":990:998  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":985:987  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":978:983  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":974:988  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":969:999  byte(mod(value, 10), _SYMBOLS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":964:967  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":956:1000  mstore8(ptr, byte(mod(value, 10), _SYMBOLS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1044:1046  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1035:1046  value /= 10 */\n      dup6\n      dup2\n      tag_51\n      jumpi\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n    tag_51:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1077:1078  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1068:1073  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1068:1078  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n      tag_49\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1064:1085  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1120:1126  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1113:1126  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":447:1143  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10139:11055  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10192:10199  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10211:10225  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10228:10229  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10211:10229  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10276:10284  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10267:10272  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10267:10284  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10263:10366  if (value >= 10 ** 64) {... */\n      tag_56\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10313:10321  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10304:10321  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_57\n      jumpi\n      tag_58\n      tag_53\n      jump\t// in\n    tag_58:\n    tag_57:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10349:10351  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10339:10351  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10263:10366  if (value >= 10 ** 64) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10392:10400  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10383:10388  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10383:10400  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10379:10482  if (value >= 10 ** 32) {... */\n      tag_59\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10429:10437  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10420:10437  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_60\n      jumpi\n      tag_61\n      tag_53\n      jump\t// in\n    tag_61:\n    tag_60:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10465:10467  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10455:10467  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10379:10482  if (value >= 10 ** 32) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10508:10516  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10499:10504  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10499:10516  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10495:10598  if (value >= 10 ** 16) {... */\n      tag_62\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10545:10553  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10536:10553  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_63\n      jumpi\n      tag_64\n      tag_53\n      jump\t// in\n    tag_64:\n    tag_63:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10581:10583  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10571:10583  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10495:10598  if (value >= 10 ** 16) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10624:10631  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10615:10620  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10615:10631  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10611:10711  if (value >= 10 ** 8) {... */\n      tag_65\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10660:10667  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10651:10667  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_66\n      jumpi\n      tag_67\n      tag_53\n      jump\t// in\n    tag_67:\n    tag_66:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10695:10696  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10685:10696  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10611:10711  if (value >= 10 ** 8) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10737:10744  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10728:10733  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10728:10744  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10724:10824  if (value >= 10 ** 4) {... */\n      tag_68\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10773:10780  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10764:10780  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_69\n      jumpi\n      tag_70\n      tag_53\n      jump\t// in\n    tag_70:\n    tag_69:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10808:10809  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10798:10809  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10724:10824  if (value >= 10 ** 4) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10850:10857  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10841:10846  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10841:10857  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10837:10937  if (value >= 10 ** 2) {... */\n      tag_71\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10886:10893  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10877:10893  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_72\n      jumpi\n      tag_73\n      tag_53\n      jump\t// in\n    tag_73:\n    tag_72:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10921:10922  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10911:10922  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10837:10937  if (value >= 10 ** 2) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10963:10970  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10954:10959  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10954:10970  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10950:11016  if (value >= 10 ** 1) {... */\n      tag_74\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":11000:11001  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10990:11001  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10950:11016  if (value >= 10 ** 1) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":11042:11048  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":11035:11048  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10139:11055  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_75:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_76:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_77:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:451   */\n    tag_78:\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      dup1\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":457:574   */\n    tag_79:\n        /* \"#utility.yul\":566:567   */\n      0x00\n        /* \"#utility.yul\":563:564   */\n      dup1\n        /* \"#utility.yul\":556:568   */\n      revert\n        /* \"#utility.yul\":580:682   */\n    tag_80:\n        /* \"#utility.yul\":621:627   */\n      0x00\n        /* \"#utility.yul\":672:674   */\n      0x1f\n        /* \"#utility.yul\":668:675   */\n      not\n        /* \"#utility.yul\":663:665   */\n      0x1f\n        /* \"#utility.yul\":656:661   */\n      dup4\n        /* \"#utility.yul\":652:666   */\n      add\n        /* \"#utility.yul\":648:676   */\n      and\n        /* \"#utility.yul\":638:676   */\n      swap1\n      pop\n        /* \"#utility.yul\":580:682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":688:868   */\n    tag_47:\n        /* \"#utility.yul\":736:813   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":733:734   */\n      0x00\n        /* \"#utility.yul\":726:814   */\n      mstore\n        /* \"#utility.yul\":833:837   */\n      0x41\n        /* \"#utility.yul\":830:831   */\n      0x04\n        /* \"#utility.yul\":823:838   */\n      mstore\n        /* \"#utility.yul\":857:861   */\n      0x24\n        /* \"#utility.yul\":854:855   */\n      0x00\n        /* \"#utility.yul\":847:862   */\n      revert\n        /* \"#utility.yul\":874:1155   */\n    tag_81:\n        /* \"#utility.yul\":957:984   */\n      tag_124\n        /* \"#utility.yul\":979:983   */\n      dup3\n        /* \"#utility.yul\":957:984   */\n      tag_80\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":949:955   */\n      dup2\n        /* \"#utility.yul\":945:985   */\n      add\n        /* \"#utility.yul\":1087:1093   */\n      dup2\n        /* \"#utility.yul\":1075:1085   */\n      dup2\n        /* \"#utility.yul\":1072:1094   */\n      lt\n        /* \"#utility.yul\":1051:1069   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1039:1049   */\n      dup3\n        /* \"#utility.yul\":1036:1070   */\n      gt\n        /* \"#utility.yul\":1033:1095   */\n      or\n        /* \"#utility.yul\":1030:1118   */\n      iszero\n      tag_125\n      jumpi\n        /* \"#utility.yul\":1098:1116   */\n      tag_126\n      tag_47\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":1030:1118   */\n    tag_125:\n        /* \"#utility.yul\":1138:1148   */\n      dup1\n        /* \"#utility.yul\":1134:1136   */\n      0x40\n        /* \"#utility.yul\":1127:1149   */\n      mstore\n        /* \"#utility.yul\":917:1155   */\n      pop\n        /* \"#utility.yul\":874:1155   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1161:1290   */\n    tag_82:\n        /* \"#utility.yul\":1195:1201   */\n      0x00\n        /* \"#utility.yul\":1222:1242   */\n      tag_128\n      tag_75\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":1212:1242   */\n      swap1\n      pop\n        /* \"#utility.yul\":1251:1284   */\n      tag_129\n        /* \"#utility.yul\":1279:1283   */\n      dup3\n        /* \"#utility.yul\":1271:1277   */\n      dup3\n        /* \"#utility.yul\":1251:1284   */\n      tag_81\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":1161:1290   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1296:1604   */\n    tag_83:\n        /* \"#utility.yul\":1358:1362   */\n      0x00\n        /* \"#utility.yul\":1448:1466   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1440:1446   */\n      dup3\n        /* \"#utility.yul\":1437:1467   */\n      gt\n        /* \"#utility.yul\":1434:1490   */\n      iszero\n      tag_131\n      jumpi\n        /* \"#utility.yul\":1470:1488   */\n      tag_132\n      tag_47\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":1434:1490   */\n    tag_131:\n        /* \"#utility.yul\":1508:1537   */\n      tag_133\n        /* \"#utility.yul\":1530:1536   */\n      dup3\n        /* \"#utility.yul\":1508:1537   */\n      tag_80\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":1500:1537   */\n      swap1\n      pop\n        /* \"#utility.yul\":1592:1596   */\n      0x20\n        /* \"#utility.yul\":1586:1590   */\n      dup2\n        /* \"#utility.yul\":1582:1597   */\n      add\n        /* \"#utility.yul\":1574:1597   */\n      swap1\n      pop\n        /* \"#utility.yul\":1296:1604   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1610:1756   */\n    tag_84:\n        /* \"#utility.yul\":1707:1713   */\n      dup3\n        /* \"#utility.yul\":1702:1705   */\n      dup2\n        /* \"#utility.yul\":1697:1700   */\n      dup4\n        /* \"#utility.yul\":1684:1714   */\n      calldatacopy\n        /* \"#utility.yul\":1748:1749   */\n      0x00\n        /* \"#utility.yul\":1739:1745   */\n      dup4\n        /* \"#utility.yul\":1734:1737   */\n      dup4\n        /* \"#utility.yul\":1730:1746   */\n      add\n        /* \"#utility.yul\":1723:1750   */\n      mstore\n        /* \"#utility.yul\":1610:1756   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1762:2187   */\n    tag_85:\n        /* \"#utility.yul\":1840:1845   */\n      0x00\n        /* \"#utility.yul\":1865:1931   */\n      tag_136\n        /* \"#utility.yul\":1881:1930   */\n      tag_137\n        /* \"#utility.yul\":1923:1929   */\n      dup5\n        /* \"#utility.yul\":1881:1930   */\n      tag_83\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":1865:1931   */\n      tag_82\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":1856:1931   */\n      swap1\n      pop\n        /* \"#utility.yul\":1954:1960   */\n      dup3\n        /* \"#utility.yul\":1947:1952   */\n      dup2\n        /* \"#utility.yul\":1940:1961   */\n      mstore\n        /* \"#utility.yul\":1992:1996   */\n      0x20\n        /* \"#utility.yul\":1985:1990   */\n      dup2\n        /* \"#utility.yul\":1981:1997   */\n      add\n        /* \"#utility.yul\":2030:2033   */\n      dup5\n        /* \"#utility.yul\":2021:2027   */\n      dup5\n        /* \"#utility.yul\":2016:2019   */\n      dup5\n        /* \"#utility.yul\":2012:2028   */\n      add\n        /* \"#utility.yul\":2009:2034   */\n      gt\n        /* \"#utility.yul\":2006:2118   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":2037:2116   */\n      tag_139\n      tag_79\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":2006:2118   */\n    tag_138:\n        /* \"#utility.yul\":2127:2181   */\n      tag_140\n        /* \"#utility.yul\":2174:2180   */\n      dup5\n        /* \"#utility.yul\":2169:2172   */\n      dup3\n        /* \"#utility.yul\":2164:2167   */\n      dup6\n        /* \"#utility.yul\":2127:2181   */\n      tag_84\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":1846:2187   */\n      pop\n        /* \"#utility.yul\":1762:2187   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2207:2547   */\n    tag_86:\n        /* \"#utility.yul\":2263:2268   */\n      0x00\n        /* \"#utility.yul\":2312:2315   */\n      dup3\n        /* \"#utility.yul\":2305:2309   */\n      0x1f\n        /* \"#utility.yul\":2297:2303   */\n      dup4\n        /* \"#utility.yul\":2293:2310   */\n      add\n        /* \"#utility.yul\":2289:2316   */\n      slt\n        /* \"#utility.yul\":2279:2401   */\n      tag_142\n      jumpi\n        /* \"#utility.yul\":2320:2399   */\n      tag_143\n      tag_78\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":2279:2401   */\n    tag_142:\n        /* \"#utility.yul\":2437:2443   */\n      dup2\n        /* \"#utility.yul\":2424:2444   */\n      calldataload\n        /* \"#utility.yul\":2462:2541   */\n      tag_144\n        /* \"#utility.yul\":2537:2540   */\n      dup5\n        /* \"#utility.yul\":2529:2535   */\n      dup3\n        /* \"#utility.yul\":2522:2526   */\n      0x20\n        /* \"#utility.yul\":2514:2520   */\n      dup7\n        /* \"#utility.yul\":2510:2527   */\n      add\n        /* \"#utility.yul\":2462:2541   */\n      tag_85\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":2453:2541   */\n      swap2\n      pop\n        /* \"#utility.yul\":2269:2547   */\n      pop\n        /* \"#utility.yul\":2207:2547   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2553:2630   */\n    tag_87:\n        /* \"#utility.yul\":2590:2597   */\n      0x00\n        /* \"#utility.yul\":2619:2624   */\n      dup2\n        /* \"#utility.yul\":2608:2624   */\n      swap1\n      pop\n        /* \"#utility.yul\":2553:2630   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2636:2758   */\n    tag_88:\n        /* \"#utility.yul\":2709:2733   */\n      tag_147\n        /* \"#utility.yul\":2727:2732   */\n      dup2\n        /* \"#utility.yul\":2709:2733   */\n      tag_87\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":2702:2707   */\n      dup2\n        /* \"#utility.yul\":2699:2734   */\n      eq\n        /* \"#utility.yul\":2689:2752   */\n      tag_148\n      jumpi\n        /* \"#utility.yul\":2748:2749   */\n      0x00\n        /* \"#utility.yul\":2745:2746   */\n      dup1\n        /* \"#utility.yul\":2738:2750   */\n      revert\n        /* \"#utility.yul\":2689:2752   */\n    tag_148:\n        /* \"#utility.yul\":2636:2758   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2764:2903   */\n    tag_89:\n        /* \"#utility.yul\":2810:2815   */\n      0x00\n        /* \"#utility.yul\":2848:2854   */\n      dup2\n        /* \"#utility.yul\":2835:2855   */\n      calldataload\n        /* \"#utility.yul\":2826:2855   */\n      swap1\n      pop\n        /* \"#utility.yul\":2864:2897   */\n      tag_150\n        /* \"#utility.yul\":2891:2896   */\n      dup2\n        /* \"#utility.yul\":2864:2897   */\n      tag_88\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":2764:2903   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2909:3708   */\n    tag_8:\n        /* \"#utility.yul\":2996:3002   */\n      0x00\n        /* \"#utility.yul\":3004:3010   */\n      dup1\n        /* \"#utility.yul\":3012:3018   */\n      0x00\n        /* \"#utility.yul\":3061:3063   */\n      0x60\n        /* \"#utility.yul\":3049:3058   */\n      dup5\n        /* \"#utility.yul\":3040:3047   */\n      dup7\n        /* \"#utility.yul\":3036:3059   */\n      sub\n        /* \"#utility.yul\":3032:3064   */\n      slt\n        /* \"#utility.yul\":3029:3148   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":3067:3146   */\n      tag_153\n      tag_76\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":3029:3148   */\n    tag_152:\n        /* \"#utility.yul\":3215:3216   */\n      0x00\n        /* \"#utility.yul\":3204:3213   */\n      dup5\n        /* \"#utility.yul\":3200:3217   */\n      add\n        /* \"#utility.yul\":3187:3218   */\n      calldataload\n        /* \"#utility.yul\":3245:3263   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3237:3243   */\n      dup2\n        /* \"#utility.yul\":3234:3264   */\n      gt\n        /* \"#utility.yul\":3231:3348   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":3267:3346   */\n      tag_155\n      tag_77\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":3231:3348   */\n    tag_154:\n        /* \"#utility.yul\":3372:3435   */\n      tag_156\n        /* \"#utility.yul\":3427:3434   */\n      dup7\n        /* \"#utility.yul\":3418:3424   */\n      dup3\n        /* \"#utility.yul\":3407:3416   */\n      dup8\n        /* \"#utility.yul\":3403:3425   */\n      add\n        /* \"#utility.yul\":3372:3435   */\n      tag_86\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":3362:3435   */\n      swap4\n      pop\n        /* \"#utility.yul\":3158:3445   */\n      pop\n        /* \"#utility.yul\":3484:3486   */\n      0x20\n        /* \"#utility.yul\":3510:3563   */\n      tag_157\n        /* \"#utility.yul\":3555:3562   */\n      dup7\n        /* \"#utility.yul\":3546:3552   */\n      dup3\n        /* \"#utility.yul\":3535:3544   */\n      dup8\n        /* \"#utility.yul\":3531:3553   */\n      add\n        /* \"#utility.yul\":3510:3563   */\n      tag_89\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":3500:3563   */\n      swap3\n      pop\n        /* \"#utility.yul\":3455:3573   */\n      pop\n        /* \"#utility.yul\":3612:3614   */\n      0x40\n        /* \"#utility.yul\":3638:3691   */\n      tag_158\n        /* \"#utility.yul\":3683:3690   */\n      dup7\n        /* \"#utility.yul\":3674:3680   */\n      dup3\n        /* \"#utility.yul\":3663:3672   */\n      dup8\n        /* \"#utility.yul\":3659:3681   */\n      add\n        /* \"#utility.yul\":3638:3691   */\n      tag_89\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":3628:3691   */\n      swap2\n      pop\n        /* \"#utility.yul\":3583:3701   */\n      pop\n        /* \"#utility.yul\":2909:3708   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3714:4188   */\n    tag_12:\n        /* \"#utility.yul\":3782:3788   */\n      0x00\n        /* \"#utility.yul\":3790:3796   */\n      dup1\n        /* \"#utility.yul\":3839:3841   */\n      0x40\n        /* \"#utility.yul\":3827:3836   */\n      dup4\n        /* \"#utility.yul\":3818:3825   */\n      dup6\n        /* \"#utility.yul\":3814:3837   */\n      sub\n        /* \"#utility.yul\":3810:3842   */\n      slt\n        /* \"#utility.yul\":3807:3926   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":3845:3924   */\n      tag_161\n      tag_76\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":3807:3926   */\n    tag_160:\n        /* \"#utility.yul\":3965:3966   */\n      0x00\n        /* \"#utility.yul\":3990:4043   */\n      tag_162\n        /* \"#utility.yul\":4035:4042   */\n      dup6\n        /* \"#utility.yul\":4026:4032   */\n      dup3\n        /* \"#utility.yul\":4015:4024   */\n      dup7\n        /* \"#utility.yul\":4011:4033   */\n      add\n        /* \"#utility.yul\":3990:4043   */\n      tag_89\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":3980:4043   */\n      swap3\n      pop\n        /* \"#utility.yul\":3936:4053   */\n      pop\n        /* \"#utility.yul\":4092:4094   */\n      0x20\n        /* \"#utility.yul\":4118:4171   */\n      tag_163\n        /* \"#utility.yul\":4163:4170   */\n      dup6\n        /* \"#utility.yul\":4154:4160   */\n      dup3\n        /* \"#utility.yul\":4143:4152   */\n      dup7\n        /* \"#utility.yul\":4139:4161   */\n      add\n        /* \"#utility.yul\":4118:4171   */\n      tag_89\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":4108:4171   */\n      swap2\n      pop\n        /* \"#utility.yul\":4063:4181   */\n      pop\n        /* \"#utility.yul\":3714:4188   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4194:4293   */\n    tag_90:\n        /* \"#utility.yul\":4246:4252   */\n      0x00\n        /* \"#utility.yul\":4280:4285   */\n      dup2\n        /* \"#utility.yul\":4274:4286   */\n      mload\n        /* \"#utility.yul\":4264:4286   */\n      swap1\n      pop\n        /* \"#utility.yul\":4194:4293   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4299:4468   */\n    tag_91:\n        /* \"#utility.yul\":4383:4394   */\n      0x00\n        /* \"#utility.yul\":4417:4423   */\n      dup3\n        /* \"#utility.yul\":4412:4415   */\n      dup3\n        /* \"#utility.yul\":4405:4424   */\n      mstore\n        /* \"#utility.yul\":4457:4461   */\n      0x20\n        /* \"#utility.yul\":4452:4455   */\n      dup3\n        /* \"#utility.yul\":4448:4462   */\n      add\n        /* \"#utility.yul\":4433:4462   */\n      swap1\n      pop\n        /* \"#utility.yul\":4299:4468   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4474:4720   */\n    tag_92:\n        /* \"#utility.yul\":4555:4556   */\n      0x00\n        /* \"#utility.yul\":4565:4678   */\n    tag_167:\n        /* \"#utility.yul\":4579:4585   */\n      dup4\n        /* \"#utility.yul\":4576:4577   */\n      dup2\n        /* \"#utility.yul\":4573:4586   */\n      lt\n        /* \"#utility.yul\":4565:4678   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":4664:4665   */\n      dup1\n        /* \"#utility.yul\":4659:4662   */\n      dup3\n        /* \"#utility.yul\":4655:4666   */\n      add\n        /* \"#utility.yul\":4649:4667   */\n      mload\n        /* \"#utility.yul\":4645:4646   */\n      dup2\n        /* \"#utility.yul\":4640:4643   */\n      dup5\n        /* \"#utility.yul\":4636:4647   */\n      add\n        /* \"#utility.yul\":4629:4668   */\n      mstore\n        /* \"#utility.yul\":4601:4603   */\n      0x20\n        /* \"#utility.yul\":4598:4599   */\n      dup2\n        /* \"#utility.yul\":4594:4604   */\n      add\n        /* \"#utility.yul\":4589:4604   */\n      swap1\n      pop\n        /* \"#utility.yul\":4565:4678   */\n      jump(tag_167)\n    tag_169:\n        /* \"#utility.yul\":4712:4713   */\n      0x00\n        /* \"#utility.yul\":4703:4709   */\n      dup5\n        /* \"#utility.yul\":4698:4701   */\n      dup5\n        /* \"#utility.yul\":4694:4710   */\n      add\n        /* \"#utility.yul\":4687:4714   */\n      mstore\n        /* \"#utility.yul\":4536:4720   */\n      pop\n        /* \"#utility.yul\":4474:4720   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4726:5103   */\n    tag_93:\n        /* \"#utility.yul\":4814:4817   */\n      0x00\n        /* \"#utility.yul\":4842:4881   */\n      tag_171\n        /* \"#utility.yul\":4875:4880   */\n      dup3\n        /* \"#utility.yul\":4842:4881   */\n      tag_90\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":4897:4968   */\n      tag_172\n        /* \"#utility.yul\":4961:4967   */\n      dup2\n        /* \"#utility.yul\":4956:4959   */\n      dup6\n        /* \"#utility.yul\":4897:4968   */\n      tag_91\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":4890:4968   */\n      swap4\n      pop\n        /* \"#utility.yul\":4977:5042   */\n      tag_173\n        /* \"#utility.yul\":5035:5041   */\n      dup2\n        /* \"#utility.yul\":5030:5033   */\n      dup6\n        /* \"#utility.yul\":5023:5027   */\n      0x20\n        /* \"#utility.yul\":5016:5021   */\n      dup7\n        /* \"#utility.yul\":5012:5028   */\n      add\n        /* \"#utility.yul\":4977:5042   */\n      tag_92\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":5067:5096   */\n      tag_174\n        /* \"#utility.yul\":5089:5095   */\n      dup2\n        /* \"#utility.yul\":5067:5096   */\n      tag_80\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":5062:5065   */\n      dup5\n        /* \"#utility.yul\":5058:5097   */\n      add\n        /* \"#utility.yul\":5051:5097   */\n      swap2\n      pop\n        /* \"#utility.yul\":4818:5103   */\n      pop\n        /* \"#utility.yul\":4726:5103   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5109:5422   */\n    tag_15:\n        /* \"#utility.yul\":5222:5226   */\n      0x00\n        /* \"#utility.yul\":5260:5262   */\n      0x20\n        /* \"#utility.yul\":5249:5258   */\n      dup3\n        /* \"#utility.yul\":5245:5263   */\n      add\n        /* \"#utility.yul\":5237:5263   */\n      swap1\n      pop\n        /* \"#utility.yul\":5309:5318   */\n      dup2\n        /* \"#utility.yul\":5303:5307   */\n      dup2\n        /* \"#utility.yul\":5299:5319   */\n      sub\n        /* \"#utility.yul\":5295:5296   */\n      0x00\n        /* \"#utility.yul\":5284:5293   */\n      dup4\n        /* \"#utility.yul\":5280:5297   */\n      add\n        /* \"#utility.yul\":5273:5320   */\n      mstore\n        /* \"#utility.yul\":5337:5415   */\n      tag_176\n        /* \"#utility.yul\":5410:5414   */\n      dup2\n        /* \"#utility.yul\":5401:5407   */\n      dup5\n        /* \"#utility.yul\":5337:5415   */\n      tag_93\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":5329:5415   */\n      swap1\n      pop\n        /* \"#utility.yul\":5109:5422   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5428:5757   */\n    tag_18:\n        /* \"#utility.yul\":5487:5493   */\n      0x00\n        /* \"#utility.yul\":5536:5538   */\n      0x20\n        /* \"#utility.yul\":5524:5533   */\n      dup3\n        /* \"#utility.yul\":5515:5522   */\n      dup5\n        /* \"#utility.yul\":5511:5534   */\n      sub\n        /* \"#utility.yul\":5507:5539   */\n      slt\n        /* \"#utility.yul\":5504:5623   */\n      iszero\n      tag_178\n      jumpi\n        /* \"#utility.yul\":5542:5621   */\n      tag_179\n      tag_76\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":5504:5623   */\n    tag_178:\n        /* \"#utility.yul\":5662:5663   */\n      0x00\n        /* \"#utility.yul\":5687:5740   */\n      tag_180\n        /* \"#utility.yul\":5732:5739   */\n      dup5\n        /* \"#utility.yul\":5723:5729   */\n      dup3\n        /* \"#utility.yul\":5712:5721   */\n      dup6\n        /* \"#utility.yul\":5708:5730   */\n      add\n        /* \"#utility.yul\":5687:5740   */\n      tag_89\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":5677:5740   */\n      swap2\n      pop\n        /* \"#utility.yul\":5633:5750   */\n      pop\n        /* \"#utility.yul\":5428:5757   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5763:5881   */\n    tag_94:\n        /* \"#utility.yul\":5850:5874   */\n      tag_182\n        /* \"#utility.yul\":5868:5873   */\n      dup2\n        /* \"#utility.yul\":5850:5874   */\n      tag_87\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":5845:5848   */\n      dup3\n        /* \"#utility.yul\":5838:5875   */\n      mstore\n        /* \"#utility.yul\":5763:5881   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5887:6310   */\n    tag_21:\n        /* \"#utility.yul\":6028:6032   */\n      0x00\n        /* \"#utility.yul\":6066:6068   */\n      0x40\n        /* \"#utility.yul\":6055:6064   */\n      dup3\n        /* \"#utility.yul\":6051:6069   */\n      add\n        /* \"#utility.yul\":6043:6069   */\n      swap1\n      pop\n        /* \"#utility.yul\":6115:6124   */\n      dup2\n        /* \"#utility.yul\":6109:6113   */\n      dup2\n        /* \"#utility.yul\":6105:6125   */\n      sub\n        /* \"#utility.yul\":6101:6102   */\n      0x00\n        /* \"#utility.yul\":6090:6099   */\n      dup4\n        /* \"#utility.yul\":6086:6103   */\n      add\n        /* \"#utility.yul\":6079:6126   */\n      mstore\n        /* \"#utility.yul\":6143:6221   */\n      tag_184\n        /* \"#utility.yul\":6216:6220   */\n      dup2\n        /* \"#utility.yul\":6207:6213   */\n      dup6\n        /* \"#utility.yul\":6143:6221   */\n      tag_93\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":6135:6221   */\n      swap1\n      pop\n        /* \"#utility.yul\":6231:6303   */\n      tag_185\n        /* \"#utility.yul\":6299:6301   */\n      0x20\n        /* \"#utility.yul\":6288:6297   */\n      dup4\n        /* \"#utility.yul\":6284:6302   */\n      add\n        /* \"#utility.yul\":6275:6281   */\n      dup5\n        /* \"#utility.yul\":6231:6303   */\n      tag_94\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":5887:6310   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6316:6496   */\n    tag_95:\n        /* \"#utility.yul\":6364:6441   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6361:6362   */\n      0x00\n        /* \"#utility.yul\":6354:6442   */\n      mstore\n        /* \"#utility.yul\":6461:6465   */\n      0x22\n        /* \"#utility.yul\":6458:6459   */\n      0x04\n        /* \"#utility.yul\":6451:6466   */\n      mstore\n        /* \"#utility.yul\":6485:6489   */\n      0x24\n        /* \"#utility.yul\":6482:6483   */\n      0x00\n        /* \"#utility.yul\":6475:6490   */\n      revert\n        /* \"#utility.yul\":6502:6822   */\n    tag_37:\n        /* \"#utility.yul\":6546:6552   */\n      0x00\n        /* \"#utility.yul\":6583:6584   */\n      0x02\n        /* \"#utility.yul\":6577:6581   */\n      dup3\n        /* \"#utility.yul\":6573:6585   */\n      div\n        /* \"#utility.yul\":6563:6585   */\n      swap1\n      pop\n        /* \"#utility.yul\":6630:6631   */\n      0x01\n        /* \"#utility.yul\":6624:6628   */\n      dup3\n        /* \"#utility.yul\":6620:6632   */\n      and\n        /* \"#utility.yul\":6651:6669   */\n      dup1\n        /* \"#utility.yul\":6641:6722   */\n      tag_188\n      jumpi\n        /* \"#utility.yul\":6707:6711   */\n      0x7f\n        /* \"#utility.yul\":6699:6705   */\n      dup3\n        /* \"#utility.yul\":6695:6712   */\n      and\n        /* \"#utility.yul\":6685:6712   */\n      swap2\n      pop\n        /* \"#utility.yul\":6641:6722   */\n    tag_188:\n        /* \"#utility.yul\":6769:6771   */\n      0x20\n        /* \"#utility.yul\":6761:6767   */\n      dup3\n        /* \"#utility.yul\":6758:6772   */\n      lt\n        /* \"#utility.yul\":6738:6756   */\n      dup2\n        /* \"#utility.yul\":6735:6773   */\n      sub\n        /* \"#utility.yul\":6732:6816   */\n      tag_189\n      jumpi\n        /* \"#utility.yul\":6788:6806   */\n      tag_190\n      tag_95\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":6732:6816   */\n    tag_189:\n        /* \"#utility.yul\":6553:6822   */\n      pop\n        /* \"#utility.yul\":6502:6822   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6828:6969   */\n    tag_96:\n        /* \"#utility.yul\":6877:6881   */\n      0x00\n        /* \"#utility.yul\":6900:6903   */\n      dup2\n        /* \"#utility.yul\":6892:6903   */\n      swap1\n      pop\n        /* \"#utility.yul\":6923:6926   */\n      dup2\n        /* \"#utility.yul\":6920:6921   */\n      0x00\n        /* \"#utility.yul\":6913:6927   */\n      mstore\n        /* \"#utility.yul\":6957:6961   */\n      0x20\n        /* \"#utility.yul\":6954:6955   */\n      0x00\n        /* \"#utility.yul\":6944:6962   */\n      keccak256\n        /* \"#utility.yul\":6936:6962   */\n      swap1\n      pop\n        /* \"#utility.yul\":6828:6969   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6975:7068   */\n    tag_97:\n        /* \"#utility.yul\":7012:7018   */\n      0x00\n        /* \"#utility.yul\":7059:7061   */\n      0x20\n        /* \"#utility.yul\":7054:7056   */\n      0x1f\n        /* \"#utility.yul\":7047:7052   */\n      dup4\n        /* \"#utility.yul\":7043:7057   */\n      add\n        /* \"#utility.yul\":7039:7062   */\n      div\n        /* \"#utility.yul\":7029:7062   */\n      swap1\n      pop\n        /* \"#utility.yul\":6975:7068   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7074:7181   */\n    tag_98:\n        /* \"#utility.yul\":7118:7126   */\n      0x00\n        /* \"#utility.yul\":7168:7173   */\n      dup3\n        /* \"#utility.yul\":7162:7166   */\n      dup3\n        /* \"#utility.yul\":7158:7174   */\n      shl\n        /* \"#utility.yul\":7137:7174   */\n      swap1\n      pop\n        /* \"#utility.yul\":7074:7181   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7187:7580   */\n    tag_99:\n        /* \"#utility.yul\":7256:7262   */\n      0x00\n        /* \"#utility.yul\":7306:7307   */\n      0x08\n        /* \"#utility.yul\":7294:7304   */\n      dup4\n        /* \"#utility.yul\":7290:7308   */\n      mul\n        /* \"#utility.yul\":7329:7426   */\n      tag_195\n        /* \"#utility.yul\":7359:7425   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7348:7357   */\n      dup3\n        /* \"#utility.yul\":7329:7426   */\n      tag_98\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":7447:7486   */\n      tag_196\n        /* \"#utility.yul\":7477:7485   */\n      dup7\n        /* \"#utility.yul\":7466:7475   */\n      dup4\n        /* \"#utility.yul\":7447:7486   */\n      tag_98\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":7435:7486   */\n      swap6\n      pop\n        /* \"#utility.yul\":7519:7523   */\n      dup1\n        /* \"#utility.yul\":7515:7524   */\n      not\n        /* \"#utility.yul\":7508:7513   */\n      dup5\n        /* \"#utility.yul\":7504:7525   */\n      and\n        /* \"#utility.yul\":7495:7525   */\n      swap4\n      pop\n        /* \"#utility.yul\":7568:7572   */\n      dup1\n        /* \"#utility.yul\":7558:7566   */\n      dup7\n        /* \"#utility.yul\":7554:7573   */\n      and\n        /* \"#utility.yul\":7547:7552   */\n      dup5\n        /* \"#utility.yul\":7544:7574   */\n      or\n        /* \"#utility.yul\":7534:7574   */\n      swap3\n      pop\n        /* \"#utility.yul\":7263:7580   */\n      pop\n      pop\n        /* \"#utility.yul\":7187:7580   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7586:7646   */\n    tag_100:\n        /* \"#utility.yul\":7614:7617   */\n      0x00\n        /* \"#utility.yul\":7635:7640   */\n      dup2\n        /* \"#utility.yul\":7628:7640   */\n      swap1\n      pop\n        /* \"#utility.yul\":7586:7646   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7652:7794   */\n    tag_101:\n        /* \"#utility.yul\":7702:7711   */\n      0x00\n        /* \"#utility.yul\":7735:7788   */\n      tag_199\n        /* \"#utility.yul\":7753:7787   */\n      tag_200\n        /* \"#utility.yul\":7762:7786   */\n      tag_201\n        /* \"#utility.yul\":7780:7785   */\n      dup5\n        /* \"#utility.yul\":7762:7786   */\n      tag_87\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":7753:7787   */\n      tag_100\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":7735:7788   */\n      tag_87\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":7722:7788   */\n      swap1\n      pop\n        /* \"#utility.yul\":7652:7794   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7800:7875   */\n    tag_102:\n        /* \"#utility.yul\":7843:7846   */\n      0x00\n        /* \"#utility.yul\":7864:7869   */\n      dup2\n        /* \"#utility.yul\":7857:7869   */\n      swap1\n      pop\n        /* \"#utility.yul\":7800:7875   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7881:8150   */\n    tag_103:\n        /* \"#utility.yul\":7991:8030   */\n      tag_204\n        /* \"#utility.yul\":8022:8029   */\n      dup4\n        /* \"#utility.yul\":7991:8030   */\n      tag_101\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":8052:8143   */\n      tag_205\n        /* \"#utility.yul\":8101:8142   */\n      tag_206\n        /* \"#utility.yul\":8125:8141   */\n      dup3\n        /* \"#utility.yul\":8101:8142   */\n      tag_102\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":8093:8099   */\n      dup5\n        /* \"#utility.yul\":8086:8090   */\n      dup5\n        /* \"#utility.yul\":8080:8091   */\n      sload\n        /* \"#utility.yul\":8052:8143   */\n      tag_99\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":8046:8050   */\n      dup3\n        /* \"#utility.yul\":8039:8144   */\n      sstore\n        /* \"#utility.yul\":7957:8150   */\n      pop\n        /* \"#utility.yul\":7881:8150   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8156:8229   */\n    tag_104:\n        /* \"#utility.yul\":8201:8204   */\n      0x00\n        /* \"#utility.yul\":8156:8229   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":8235:8424   */\n    tag_105:\n        /* \"#utility.yul\":8312:8344   */\n      tag_209\n      tag_104\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":8353:8418   */\n      tag_210\n        /* \"#utility.yul\":8411:8417   */\n      dup2\n        /* \"#utility.yul\":8403:8409   */\n      dup5\n        /* \"#utility.yul\":8397:8401   */\n      dup5\n        /* \"#utility.yul\":8353:8418   */\n      tag_103\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":8288:8424   */\n      pop\n        /* \"#utility.yul\":8235:8424   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8430:8616   */\n    tag_106:\n        /* \"#utility.yul\":8490:8610   */\n    tag_212:\n        /* \"#utility.yul\":8507:8510   */\n      dup2\n        /* \"#utility.yul\":8500:8505   */\n      dup2\n        /* \"#utility.yul\":8497:8511   */\n      lt\n        /* \"#utility.yul\":8490:8610   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":8561:8600   */\n      tag_215\n        /* \"#utility.yul\":8598:8599   */\n      0x00\n        /* \"#utility.yul\":8591:8596   */\n      dup3\n        /* \"#utility.yul\":8561:8600   */\n      tag_105\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":8534:8535   */\n      0x01\n        /* \"#utility.yul\":8527:8532   */\n      dup2\n        /* \"#utility.yul\":8523:8536   */\n      add\n        /* \"#utility.yul\":8514:8536   */\n      swap1\n      pop\n        /* \"#utility.yul\":8490:8610   */\n      jump(tag_212)\n    tag_214:\n        /* \"#utility.yul\":8430:8616   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8622:9165   */\n    tag_107:\n        /* \"#utility.yul\":8723:8725   */\n      0x1f\n        /* \"#utility.yul\":8718:8721   */\n      dup3\n        /* \"#utility.yul\":8715:8726   */\n      gt\n        /* \"#utility.yul\":8712:9158   */\n      iszero\n      tag_217\n      jumpi\n        /* \"#utility.yul\":8757:8795   */\n      tag_218\n        /* \"#utility.yul\":8789:8794   */\n      dup2\n        /* \"#utility.yul\":8757:8795   */\n      tag_96\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":8841:8870   */\n      tag_219\n        /* \"#utility.yul\":8859:8869   */\n      dup5\n        /* \"#utility.yul\":8841:8870   */\n      tag_97\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":8831:8839   */\n      dup2\n        /* \"#utility.yul\":8827:8871   */\n      add\n        /* \"#utility.yul\":9024:9026   */\n      0x20\n        /* \"#utility.yul\":9012:9022   */\n      dup6\n        /* \"#utility.yul\":9009:9027   */\n      lt\n        /* \"#utility.yul\":9006:9055   */\n      iszero\n      tag_220\n      jumpi\n        /* \"#utility.yul\":9045:9053   */\n      dup2\n        /* \"#utility.yul\":9030:9053   */\n      swap1\n      pop\n        /* \"#utility.yul\":9006:9055   */\n    tag_220:\n        /* \"#utility.yul\":9068:9148   */\n      tag_221\n        /* \"#utility.yul\":9124:9146   */\n      tag_222\n        /* \"#utility.yul\":9142:9145   */\n      dup6\n        /* \"#utility.yul\":9124:9146   */\n      tag_97\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":9114:9122   */\n      dup4\n        /* \"#utility.yul\":9110:9147   */\n      add\n        /* \"#utility.yul\":9097:9108   */\n      dup3\n        /* \"#utility.yul\":9068:9148   */\n      tag_106\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":8727:9158   */\n      pop\n      pop\n        /* \"#utility.yul\":8712:9158   */\n    tag_217:\n        /* \"#utility.yul\":8622:9165   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9171:9288   */\n    tag_108:\n        /* \"#utility.yul\":9225:9233   */\n      0x00\n        /* \"#utility.yul\":9275:9280   */\n      dup3\n        /* \"#utility.yul\":9269:9273   */\n      dup3\n        /* \"#utility.yul\":9265:9281   */\n      shr\n        /* \"#utility.yul\":9244:9281   */\n      swap1\n      pop\n        /* \"#utility.yul\":9171:9288   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9294:9463   */\n    tag_109:\n        /* \"#utility.yul\":9338:9344   */\n      0x00\n        /* \"#utility.yul\":9371:9422   */\n      tag_225\n        /* \"#utility.yul\":9419:9420   */\n      0x00\n        /* \"#utility.yul\":9415:9421   */\n      not\n        /* \"#utility.yul\":9407:9412   */\n      dup5\n        /* \"#utility.yul\":9404:9405   */\n      0x08\n        /* \"#utility.yul\":9400:9413   */\n      mul\n        /* \"#utility.yul\":9371:9422   */\n      tag_108\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":9367:9423   */\n      not\n        /* \"#utility.yul\":9452:9456   */\n      dup1\n        /* \"#utility.yul\":9446:9450   */\n      dup4\n        /* \"#utility.yul\":9442:9457   */\n      and\n        /* \"#utility.yul\":9432:9457   */\n      swap2\n      pop\n        /* \"#utility.yul\":9345:9463   */\n      pop\n        /* \"#utility.yul\":9294:9463   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9468:9763   */\n    tag_110:\n        /* \"#utility.yul\":9544:9548   */\n      0x00\n        /* \"#utility.yul\":9690:9719   */\n      tag_227\n        /* \"#utility.yul\":9715:9718   */\n      dup4\n        /* \"#utility.yul\":9709:9713   */\n      dup4\n        /* \"#utility.yul\":9690:9719   */\n      tag_109\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":9682:9719   */\n      swap2\n      pop\n        /* \"#utility.yul\":9752:9755   */\n      dup3\n        /* \"#utility.yul\":9749:9750   */\n      0x02\n        /* \"#utility.yul\":9745:9756   */\n      mul\n        /* \"#utility.yul\":9739:9743   */\n      dup3\n        /* \"#utility.yul\":9736:9757   */\n      or\n        /* \"#utility.yul\":9728:9757   */\n      swap1\n      pop\n        /* \"#utility.yul\":9468:9763   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9768:11163   */\n    tag_25:\n        /* \"#utility.yul\":9885:9922   */\n      tag_229\n        /* \"#utility.yul\":9918:9921   */\n      dup3\n        /* \"#utility.yul\":9885:9922   */\n      tag_90\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":9987:10005   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9979:9985   */\n      dup2\n        /* \"#utility.yul\":9976:10006   */\n      gt\n        /* \"#utility.yul\":9973:10029   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":10009:10027   */\n      tag_231\n      tag_47\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":9973:10029   */\n    tag_230:\n        /* \"#utility.yul\":10053:10091   */\n      tag_232\n        /* \"#utility.yul\":10085:10089   */\n      dup3\n        /* \"#utility.yul\":10079:10090   */\n      sload\n        /* \"#utility.yul\":10053:10091   */\n      tag_37\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":10138:10205   */\n      tag_233\n        /* \"#utility.yul\":10198:10204   */\n      dup3\n        /* \"#utility.yul\":10190:10196   */\n      dup3\n        /* \"#utility.yul\":10184:10188   */\n      dup6\n        /* \"#utility.yul\":10138:10205   */\n      tag_107\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":10232:10233   */\n      0x00\n        /* \"#utility.yul\":10256:10260   */\n      0x20\n        /* \"#utility.yul\":10243:10260   */\n      swap1\n      pop\n        /* \"#utility.yul\":10288:10290   */\n      0x1f\n        /* \"#utility.yul\":10280:10286   */\n      dup4\n        /* \"#utility.yul\":10277:10291   */\n      gt\n        /* \"#utility.yul\":10305:10306   */\n      0x01\n        /* \"#utility.yul\":10300:10918   */\n      dup2\n      eq\n      tag_235\n      jumpi\n        /* \"#utility.yul\":10962:10963   */\n      0x00\n        /* \"#utility.yul\":10979:10985   */\n      dup5\n        /* \"#utility.yul\":10976:11053   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":11028:11037   */\n      dup3\n        /* \"#utility.yul\":11023:11026   */\n      dup8\n        /* \"#utility.yul\":11019:11038   */\n      add\n        /* \"#utility.yul\":11013:11039   */\n      mload\n        /* \"#utility.yul\":11004:11039   */\n      swap1\n      pop\n        /* \"#utility.yul\":10976:11053   */\n    tag_236:\n        /* \"#utility.yul\":11079:11146   */\n      tag_237\n        /* \"#utility.yul\":11139:11145   */\n      dup6\n        /* \"#utility.yul\":11132:11137   */\n      dup3\n        /* \"#utility.yul\":11079:11146   */\n      tag_110\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":11073:11077   */\n      dup7\n        /* \"#utility.yul\":11066:11147   */\n      sstore\n        /* \"#utility.yul\":10935:11157   */\n      pop\n        /* \"#utility.yul\":10270:11157   */\n      jump(tag_234)\n        /* \"#utility.yul\":10300:10918   */\n    tag_235:\n        /* \"#utility.yul\":10352:10356   */\n      0x1f\n        /* \"#utility.yul\":10348:10357   */\n      not\n        /* \"#utility.yul\":10340:10346   */\n      dup5\n        /* \"#utility.yul\":10336:10358   */\n      and\n        /* \"#utility.yul\":10386:10423   */\n      tag_238\n        /* \"#utility.yul\":10418:10422   */\n      dup7\n        /* \"#utility.yul\":10386:10423   */\n      tag_96\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":10445:10446   */\n      0x00\n        /* \"#utility.yul\":10459:10667   */\n    tag_239:\n        /* \"#utility.yul\":10473:10480   */\n      dup3\n        /* \"#utility.yul\":10470:10471   */\n      dup2\n        /* \"#utility.yul\":10467:10481   */\n      lt\n        /* \"#utility.yul\":10459:10667   */\n      iszero\n      tag_241\n      jumpi\n        /* \"#utility.yul\":10552:10561   */\n      dup5\n        /* \"#utility.yul\":10547:10550   */\n      dup10\n        /* \"#utility.yul\":10543:10562   */\n      add\n        /* \"#utility.yul\":10537:10563   */\n      mload\n        /* \"#utility.yul\":10529:10535   */\n      dup3\n        /* \"#utility.yul\":10522:10564   */\n      sstore\n        /* \"#utility.yul\":10603:10604   */\n      0x01\n        /* \"#utility.yul\":10595:10601   */\n      dup3\n        /* \"#utility.yul\":10591:10605   */\n      add\n        /* \"#utility.yul\":10581:10605   */\n      swap2\n      pop\n        /* \"#utility.yul\":10650:10652   */\n      0x20\n        /* \"#utility.yul\":10639:10648   */\n      dup6\n        /* \"#utility.yul\":10635:10653   */\n      add\n        /* \"#utility.yul\":10622:10653   */\n      swap5\n      pop\n        /* \"#utility.yul\":10496:10500   */\n      0x20\n        /* \"#utility.yul\":10493:10494   */\n      dup2\n        /* \"#utility.yul\":10489:10501   */\n      add\n        /* \"#utility.yul\":10484:10501   */\n      swap1\n      pop\n        /* \"#utility.yul\":10459:10667   */\n      jump(tag_239)\n    tag_241:\n        /* \"#utility.yul\":10695:10701   */\n      dup7\n        /* \"#utility.yul\":10686:10693   */\n      dup4\n        /* \"#utility.yul\":10683:10702   */\n      lt\n        /* \"#utility.yul\":10680:10859   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":10753:10762   */\n      dup5\n        /* \"#utility.yul\":10748:10751   */\n      dup10\n        /* \"#utility.yul\":10744:10763   */\n      add\n        /* \"#utility.yul\":10738:10764   */\n      mload\n        /* \"#utility.yul\":10796:10844   */\n      tag_243\n        /* \"#utility.yul\":10838:10842   */\n      0x1f\n        /* \"#utility.yul\":10830:10836   */\n      dup10\n        /* \"#utility.yul\":10826:10843   */\n      and\n        /* \"#utility.yul\":10815:10824   */\n      dup3\n        /* \"#utility.yul\":10796:10844   */\n      tag_109\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":10788:10794   */\n      dup4\n        /* \"#utility.yul\":10781:10845   */\n      sstore\n        /* \"#utility.yul\":10703:10859   */\n      pop\n        /* \"#utility.yul\":10680:10859   */\n    tag_242:\n        /* \"#utility.yul\":10905:10906   */\n      0x01\n        /* \"#utility.yul\":10901:10902   */\n      0x02\n        /* \"#utility.yul\":10893:10899   */\n      dup9\n        /* \"#utility.yul\":10889:10903   */\n      mul\n        /* \"#utility.yul\":10885:10907   */\n      add\n        /* \"#utility.yul\":10879:10883   */\n      dup9\n        /* \"#utility.yul\":10872:10908   */\n      sstore\n        /* \"#utility.yul\":10307:10918   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":10270:11157   */\n    tag_234:\n      pop\n        /* \"#utility.yul\":9860:11163   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":9768:11163   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11169:11349   */\n    tag_111:\n        /* \"#utility.yul\":11217:11294   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11214:11215   */\n      0x00\n        /* \"#utility.yul\":11207:11295   */\n      mstore\n        /* \"#utility.yul\":11314:11318   */\n      0x11\n        /* \"#utility.yul\":11311:11312   */\n      0x04\n        /* \"#utility.yul\":11304:11319   */\n      mstore\n        /* \"#utility.yul\":11338:11342   */\n      0x24\n        /* \"#utility.yul\":11335:11336   */\n      0x00\n        /* \"#utility.yul\":11328:11343   */\n      revert\n        /* \"#utility.yul\":11355:11588   */\n    tag_27:\n        /* \"#utility.yul\":11394:11397   */\n      0x00\n        /* \"#utility.yul\":11417:11441   */\n      tag_246\n        /* \"#utility.yul\":11435:11440   */\n      dup3\n        /* \"#utility.yul\":11417:11441   */\n      tag_87\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":11408:11441   */\n      swap2\n      pop\n        /* \"#utility.yul\":11463:11529   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11456:11461   */\n      dup3\n        /* \"#utility.yul\":11453:11530   */\n      sub\n        /* \"#utility.yul\":11450:11553   */\n      tag_247\n      jumpi\n        /* \"#utility.yul\":11533:11551   */\n      tag_248\n      tag_111\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":11450:11553   */\n    tag_247:\n        /* \"#utility.yul\":11580:11581   */\n      0x01\n        /* \"#utility.yul\":11573:11578   */\n      dup3\n        /* \"#utility.yul\":11569:11582   */\n      add\n        /* \"#utility.yul\":11562:11582   */\n      swap1\n      pop\n        /* \"#utility.yul\":11355:11588   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11594:11788   */\n    tag_112:\n        /* \"#utility.yul\":11763:11781   */\n      0x5469636b65742070726963652069732000000000000000000000000000000000\n        /* \"#utility.yul\":11758:11761   */\n      dup2\n        /* \"#utility.yul\":11751:11782   */\n      mstore\n        /* \"#utility.yul\":11594:11788   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11794:11942   */\n    tag_113:\n        /* \"#utility.yul\":11896:11907   */\n      0x00\n        /* \"#utility.yul\":11933:11936   */\n      dup2\n        /* \"#utility.yul\":11918:11936   */\n      swap1\n      pop\n        /* \"#utility.yul\":11794:11942   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11948:12338   */\n    tag_114:\n        /* \"#utility.yul\":12054:12057   */\n      0x00\n        /* \"#utility.yul\":12082:12121   */\n      tag_252\n        /* \"#utility.yul\":12115:12120   */\n      dup3\n        /* \"#utility.yul\":12082:12121   */\n      tag_90\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":12137:12226   */\n      tag_253\n        /* \"#utility.yul\":12219:12225   */\n      dup2\n        /* \"#utility.yul\":12214:12217   */\n      dup6\n        /* \"#utility.yul\":12137:12226   */\n      tag_113\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":12130:12226   */\n      swap4\n      pop\n        /* \"#utility.yul\":12235:12300   */\n      tag_254\n        /* \"#utility.yul\":12293:12299   */\n      dup2\n        /* \"#utility.yul\":12288:12291   */\n      dup6\n        /* \"#utility.yul\":12281:12285   */\n      0x20\n        /* \"#utility.yul\":12274:12279   */\n      dup7\n        /* \"#utility.yul\":12270:12286   */\n      add\n        /* \"#utility.yul\":12235:12300   */\n      tag_92\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":12325:12331   */\n      dup1\n        /* \"#utility.yul\":12320:12323   */\n      dup5\n        /* \"#utility.yul\":12316:12332   */\n      add\n        /* \"#utility.yul\":12309:12332   */\n      swap2\n      pop\n        /* \"#utility.yul\":12058:12338   */\n      pop\n        /* \"#utility.yul\":11948:12338   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12344:12886   */\n    tag_34:\n        /* \"#utility.yul\":12567:12570   */\n      0x00\n        /* \"#utility.yul\":12582:12720   */\n      tag_256\n        /* \"#utility.yul\":12716:12719   */\n      dup3\n        /* \"#utility.yul\":12582:12720   */\n      tag_112\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":12745:12747   */\n      0x10\n        /* \"#utility.yul\":12740:12743   */\n      dup3\n        /* \"#utility.yul\":12736:12748   */\n      add\n        /* \"#utility.yul\":12729:12748   */\n      swap2\n      pop\n        /* \"#utility.yul\":12765:12860   */\n      tag_257\n        /* \"#utility.yul\":12856:12859   */\n      dup3\n        /* \"#utility.yul\":12847:12853   */\n      dup5\n        /* \"#utility.yul\":12765:12860   */\n      tag_114\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":12758:12860   */\n      swap2\n      pop\n        /* \"#utility.yul\":12877:12880   */\n      dup2\n        /* \"#utility.yul\":12870:12880   */\n      swap1\n      pop\n        /* \"#utility.yul\":12344:12886   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12892:13072   */\n    tag_53:\n        /* \"#utility.yul\":12940:13017   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12937:12938   */\n      0x00\n        /* \"#utility.yul\":12930:13018   */\n      mstore\n        /* \"#utility.yul\":13037:13041   */\n      0x12\n        /* \"#utility.yul\":13034:13035   */\n      0x04\n        /* \"#utility.yul\":13027:13042   */\n      mstore\n        /* \"#utility.yul\":13061:13065   */\n      0x24\n        /* \"#utility.yul\":13058:13059   */\n      0x00\n        /* \"#utility.yul\":13051:13066   */\n      revert\n\n    auxdata: 0xa264697066735822122039344f6800ea4d8b4b0a1d39e40368d1cd141d37ecf4a165a7f536b63740e38e64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1213": {
									"entryPoint": null,
									"id": 1213,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610c96806100606000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063163f41af14610046578063a8445a1e14610062578063dc8903a814610092575b600080fd5b610060600480360381019061005b9190610698565b6100c3565b005b61007c60048036038101906100779190610707565b610195565b60405161008991906107c6565b60405180910390f35b6100ac60048036038101906100a791906107e8565b610221565b6040516100ba929190610824565b60405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461011b57600080fd5b60405180606001604052808481526020018381526020018281525060026000600154815260200190815260200160002060008201518160000190816101609190610a60565b5060208201518160010155604082015181600201559050506001600081548092919061018b90610b61565b9190505550505050565b606060026000848152602001908152602001600020600201548210806101d05750600260008481526020019081526020016000206002015482115b1561021a576101f460026000858152602001908152602001600020600201546102e7565b6040516020016102049190610c0b565b604051602081830303815290604052905061021b565b5b92915050565b6060600060026000848152602001908152602001600020600001600260008581526020019081526020016000206002015481805461025e90610883565b80601f016020809104026020016040519081016040528092919081815260200182805461028a90610883565b80156102d75780601f106102ac576101008083540402835291602001916102d7565b820191906000526020600020905b8154815290600101906020018083116102ba57829003601f168201915b5050505050915091509150915091565b6060600060016102f6846103b5565b01905060008167ffffffffffffffff81111561031557610314610537565b5b6040519080825280601f01601f1916602001820160405280156103475781602001600182028036833780820191505090505b509050600082602001820190505b6001156103aa578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161039e5761039d610c31565b5b04945060008503610355575b819350505050919050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310610413577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161040957610408610c31565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310610450576d04ee2d6d415b85acef8100000000838161044657610445610c31565b5b0492506020810190505b662386f26fc10000831061047f57662386f26fc10000838161047557610474610c31565b5b0492506010810190505b6305f5e10083106104a8576305f5e100838161049e5761049d610c31565b5b0492506008810190505b61271083106104cd5761271083816104c3576104c2610c31565b5b0492506004810190505b606483106104f057606483816104e6576104e5610c31565b5b0492506002810190505b600a83106104ff576001810190505b80915050919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61056f82610526565b810181811067ffffffffffffffff8211171561058e5761058d610537565b5b80604052505050565b60006105a1610508565b90506105ad8282610566565b919050565b600067ffffffffffffffff8211156105cd576105cc610537565b5b6105d682610526565b9050602081019050919050565b82818337600083830152505050565b6000610605610600846105b2565b610597565b90508281526020810184848401111561062157610620610521565b5b61062c8482856105e3565b509392505050565b600082601f8301126106495761064861051c565b5b81356106598482602086016105f2565b91505092915050565b6000819050919050565b61067581610662565b811461068057600080fd5b50565b6000813590506106928161066c565b92915050565b6000806000606084860312156106b1576106b0610512565b5b600084013567ffffffffffffffff8111156106cf576106ce610517565b5b6106db86828701610634565b93505060206106ec86828701610683565b92505060406106fd86828701610683565b9150509250925092565b6000806040838503121561071e5761071d610512565b5b600061072c85828601610683565b925050602061073d85828601610683565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610781578082015181840152602081019050610766565b60008484015250505050565b600061079882610747565b6107a28185610752565b93506107b2818560208601610763565b6107bb81610526565b840191505092915050565b600060208201905081810360008301526107e0818461078d565b905092915050565b6000602082840312156107fe576107fd610512565b5b600061080c84828501610683565b91505092915050565b61081e81610662565b82525050565b6000604082019050818103600083015261083e818561078d565b905061084d6020830184610815565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061089b57607f821691505b6020821081036108ae576108ad610854565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026109167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826108d9565b61092086836108d9565b95508019841693508086168417925050509392505050565b6000819050919050565b600061095d61095861095384610662565b610938565b610662565b9050919050565b6000819050919050565b61097783610942565b61098b61098382610964565b8484546108e6565b825550505050565b600090565b6109a0610993565b6109ab81848461096e565b505050565b5b818110156109cf576109c4600082610998565b6001810190506109b1565b5050565b601f821115610a14576109e5816108b4565b6109ee846108c9565b810160208510156109fd578190505b610a11610a09856108c9565b8301826109b0565b50505b505050565b600082821c905092915050565b6000610a3760001984600802610a19565b1980831691505092915050565b6000610a508383610a26565b9150826002028217905092915050565b610a6982610747565b67ffffffffffffffff811115610a8257610a81610537565b5b610a8c8254610883565b610a978282856109d3565b600060209050601f831160018114610aca5760008415610ab8578287015190505b610ac28582610a44565b865550610b2a565b601f198416610ad8866108b4565b60005b82811015610b0057848901518255600182019150602085019450602081019050610adb565b86831015610b1d5784890151610b19601f891682610a26565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b6c82610662565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610b9e57610b9d610b32565b5b600182019050919050565b7f5469636b65742070726963652069732000000000000000000000000000000000815250565b600081905092915050565b6000610be582610747565b610bef8185610bcf565b9350610bff818560208601610763565b80840191505092915050565b6000610c1682610ba9565b601082019150610c268284610bda565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea264697066735822122039344f6800ea4d8b4b0a1d39e40368d1cd141d37ecf4a165a7f536b63740e38e64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xC96 DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x163F41AF EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xA8445A1E EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xDC8903A8 EQ PUSH2 0x92 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x698 JUMP JUMPDEST PUSH2 0xC3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x77 SWAP2 SWAP1 PUSH2 0x707 JUMP JUMPDEST PUSH2 0x195 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x89 SWAP2 SWAP1 PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA7 SWAP2 SWAP1 PUSH2 0x7E8 JUMP JUMPDEST PUSH2 0x221 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBA SWAP3 SWAP2 SWAP1 PUSH2 0x824 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x160 SWAP2 SWAP1 PUSH2 0xA60 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x18B SWAP1 PUSH2 0xB61 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP3 LT DUP1 PUSH2 0x1D0 JUMPI POP PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP3 GT JUMPDEST ISZERO PUSH2 0x21A JUMPI PUSH2 0x1F4 PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x21B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP2 DUP1 SLOAD PUSH2 0x25E SWAP1 PUSH2 0x883 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x28A SWAP1 PUSH2 0x883 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2AC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x2F6 DUP5 PUSH2 0x3B5 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x314 PUSH2 0x537 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x347 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x3AA JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x39E JUMPI PUSH2 0x39D PUSH2 0xC31 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x355 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x413 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x409 JUMPI PUSH2 0x408 PUSH2 0xC31 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x450 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x446 JUMPI PUSH2 0x445 PUSH2 0xC31 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x47F JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x475 JUMPI PUSH2 0x474 PUSH2 0xC31 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x4A8 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x49E JUMPI PUSH2 0x49D PUSH2 0xC31 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x4CD JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x4C3 JUMPI PUSH2 0x4C2 PUSH2 0xC31 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x4F0 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x4E6 JUMPI PUSH2 0x4E5 PUSH2 0xC31 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x4FF JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x56F DUP3 PUSH2 0x526 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x58E JUMPI PUSH2 0x58D PUSH2 0x537 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A1 PUSH2 0x508 JUMP JUMPDEST SWAP1 POP PUSH2 0x5AD DUP3 DUP3 PUSH2 0x566 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x5CD JUMPI PUSH2 0x5CC PUSH2 0x537 JUMP JUMPDEST JUMPDEST PUSH2 0x5D6 DUP3 PUSH2 0x526 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x605 PUSH2 0x600 DUP5 PUSH2 0x5B2 JUMP JUMPDEST PUSH2 0x597 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x621 JUMPI PUSH2 0x620 PUSH2 0x521 JUMP JUMPDEST JUMPDEST PUSH2 0x62C DUP5 DUP3 DUP6 PUSH2 0x5E3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x649 JUMPI PUSH2 0x648 PUSH2 0x51C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x659 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x5F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x675 DUP2 PUSH2 0x662 JUMP JUMPDEST DUP2 EQ PUSH2 0x680 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x692 DUP2 PUSH2 0x66C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6B1 JUMPI PUSH2 0x6B0 PUSH2 0x512 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6CF JUMPI PUSH2 0x6CE PUSH2 0x517 JUMP JUMPDEST JUMPDEST PUSH2 0x6DB DUP7 DUP3 DUP8 ADD PUSH2 0x634 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x6EC DUP7 DUP3 DUP8 ADD PUSH2 0x683 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x6FD DUP7 DUP3 DUP8 ADD PUSH2 0x683 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x71E JUMPI PUSH2 0x71D PUSH2 0x512 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x72C DUP6 DUP3 DUP7 ADD PUSH2 0x683 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x73D DUP6 DUP3 DUP7 ADD PUSH2 0x683 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x781 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x766 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x798 DUP3 PUSH2 0x747 JUMP JUMPDEST PUSH2 0x7A2 DUP2 DUP6 PUSH2 0x752 JUMP JUMPDEST SWAP4 POP PUSH2 0x7B2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x763 JUMP JUMPDEST PUSH2 0x7BB DUP2 PUSH2 0x526 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7E0 DUP2 DUP5 PUSH2 0x78D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7FE JUMPI PUSH2 0x7FD PUSH2 0x512 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x80C DUP5 DUP3 DUP6 ADD PUSH2 0x683 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x81E DUP2 PUSH2 0x662 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x83E DUP2 DUP6 PUSH2 0x78D JUMP JUMPDEST SWAP1 POP PUSH2 0x84D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x815 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x89B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x8AE JUMPI PUSH2 0x8AD PUSH2 0x854 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x916 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x8D9 JUMP JUMPDEST PUSH2 0x920 DUP7 DUP4 PUSH2 0x8D9 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x95D PUSH2 0x958 PUSH2 0x953 DUP5 PUSH2 0x662 JUMP JUMPDEST PUSH2 0x938 JUMP JUMPDEST PUSH2 0x662 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x977 DUP4 PUSH2 0x942 JUMP JUMPDEST PUSH2 0x98B PUSH2 0x983 DUP3 PUSH2 0x964 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x8E6 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x9A0 PUSH2 0x993 JUMP JUMPDEST PUSH2 0x9AB DUP2 DUP5 DUP5 PUSH2 0x96E JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9CF JUMPI PUSH2 0x9C4 PUSH1 0x0 DUP3 PUSH2 0x998 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x9B1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xA14 JUMPI PUSH2 0x9E5 DUP2 PUSH2 0x8B4 JUMP JUMPDEST PUSH2 0x9EE DUP5 PUSH2 0x8C9 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x9FD JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0xA11 PUSH2 0xA09 DUP6 PUSH2 0x8C9 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x9B0 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA37 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xA19 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA50 DUP4 DUP4 PUSH2 0xA26 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA69 DUP3 PUSH2 0x747 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA82 JUMPI PUSH2 0xA81 PUSH2 0x537 JUMP JUMPDEST JUMPDEST PUSH2 0xA8C DUP3 SLOAD PUSH2 0x883 JUMP JUMPDEST PUSH2 0xA97 DUP3 DUP3 DUP6 PUSH2 0x9D3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xACA JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0xAB8 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xAC2 DUP6 DUP3 PUSH2 0xA44 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xB2A JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xAD8 DUP7 PUSH2 0x8B4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xB00 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xADB JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xB1D JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xB19 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xA26 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB6C DUP3 PUSH2 0x662 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xB9E JUMPI PUSH2 0xB9D PUSH2 0xB32 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5469636B65742070726963652069732000000000000000000000000000000000 DUP2 MSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE5 DUP3 PUSH2 0x747 JUMP JUMPDEST PUSH2 0xBEF DUP2 DUP6 PUSH2 0xBCF JUMP JUMPDEST SWAP4 POP PUSH2 0xBFF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x763 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC16 DUP3 PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0x10 DUP3 ADD SWAP2 POP PUSH2 0xC26 DUP3 DUP5 PUSH2 0xBDA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY CALLVALUE 0x4F PUSH9 0xEA4D8B4B0A1D39E4 SUB PUSH9 0xD1CD141D37ECF4A165 0xA7 CREATE2 CALLDATASIZE 0xB6 CALLDATACOPY BLOCKHASH 0xE3 DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "127:815:3:-:0;;;170:53;;;;;;;;;;197:10;187:7;;:20;;;;;;;;;;;;;;;;;;127:815;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BuyTicket_1315": {
									"entryPoint": 405,
									"id": 1315,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@Checkevent_1277": {
									"entryPoint": 545,
									"id": 1277,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@CreateEvent_1257": {
									"entryPoint": 195,
									"id": 1257,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@log10_931": {
									"entryPoint": 949,
									"id": 931,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toString_58": {
									"entryPoint": 743,
									"id": 58,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 1522,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 1588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256": {
									"entryPoint": 1688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 1799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7b44d63f8640588bdc53652e1f9235a404b86d08f60e9227e7285853fb3c56bb_to_t_bytes16_nonPadded_inplace_fromStack": {
									"entryPoint": 2985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_7b44d63f8640588bdc53652e1f9235a404b86d08f60e9227e7285853fb3c56bb_t_string_memory_ptr__to_t_bytes16_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 2084,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1431,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1288,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2515,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 1634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2656,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 1507,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1891,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2179,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 2913,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2866,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3121,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2132,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1335,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1308,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1313,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1303,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1298,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 2265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2456,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2278,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2414,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1644,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2451,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13075:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:4"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:4"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:4"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:4",
														"type": ""
													}
												],
												"src": "580:102:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:4"
															},
															"nodeType": "YulIf",
															"src": "1030:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:4"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:4",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:4",
														"type": ""
													}
												],
												"src": "874:281:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:4"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:4"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:4"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:4",
														"type": ""
													}
												],
												"src": "1161:129:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:4"
															},
															"nodeType": "YulIf",
															"src": "1434:56:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:4"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:4"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:4",
														"type": ""
													}
												],
												"src": "1296:308:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1674:82:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1697:3:4"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1702:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1707:6:4"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1684:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1684:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1684:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1734:3:4"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1739:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:16:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1748:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1723:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1723:27:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1723:27:4"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1656:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1661:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1666:6:4",
														"type": ""
													}
												],
												"src": "1610:146:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1846:341:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1856:75:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1923:6:4"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1881:41:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1881:49:4"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1865:15:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1865:66:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1856:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1947:5:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1954:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1940:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1940:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1940:21:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1970:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1985:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1992:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1981:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1981:16:4"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1974:3:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2035:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2037:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2037:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2037:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2016:3:4"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2021:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2012:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2012:16:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2030:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2009:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:25:4"
															},
															"nodeType": "YulIf",
															"src": "2006:112:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2164:3:4"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2169:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2174:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2127:36:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2127:54:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2127:54:4"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1819:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1824:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1832:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1840:5:4",
														"type": ""
													}
												],
												"src": "1762:425:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2269:278:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2318:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2320:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2320:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2320:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2297:6:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2305:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2293:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2293:17:4"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2312:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2289:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2289:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2282:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2282:35:4"
															},
															"nodeType": "YulIf",
															"src": "2279:122:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2410:34:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2437:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2424:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2424:20:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2414:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2453:88:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2514:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2522:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2510:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2510:17:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2529:6:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2537:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2462:47:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2462:79:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2453:5:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2247:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2255:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2263:5:4",
														"type": ""
													}
												],
												"src": "2207:340:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2598:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2608:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2619:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2608:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2580:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2590:7:4",
														"type": ""
													}
												],
												"src": "2553:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2679:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2736:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2745:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2748:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2738:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2738:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2738:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2702:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2727:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2709:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2709:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2699:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2699:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2692:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2692:43:4"
															},
															"nodeType": "YulIf",
															"src": "2689:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2672:5:4",
														"type": ""
													}
												],
												"src": "2636:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2816:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2826:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2848:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2835:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2835:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2826:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2891:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2864:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2864:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2864:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2794:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2802:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2810:5:4",
														"type": ""
													}
												],
												"src": "2764:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3019:689:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3065:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3067:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3067:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3067:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3040:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3049:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3036:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3036:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3061:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3032:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3032:32:4"
															},
															"nodeType": "YulIf",
															"src": "3029:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "3158:287:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3173:45:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3204:9:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3215:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3200:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3200:17:4"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3187:12:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3187:31:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3177:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3265:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3267:77:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3267:79:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3267:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3237:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3245:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3234:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3234:30:4"
																	},
																	"nodeType": "YulIf",
																	"src": "3231:117:4"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3362:73:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3407:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3418:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3403:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3403:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3427:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3372:30:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3372:63:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3362:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3455:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3470:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3484:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3474:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3500:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3535:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3546:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3531:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3531:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3555:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3510:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3510:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3500:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3583:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3598:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3612:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3602:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3628:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3663:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3674:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3659:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3659:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3683:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3638:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3638:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3628:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2973:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2984:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2996:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3004:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3012:6:4",
														"type": ""
													}
												],
												"src": "2909:799:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3797:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3843:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3845:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3845:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3845:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3818:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3827:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3814:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3814:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3839:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3810:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3810:32:4"
															},
															"nodeType": "YulIf",
															"src": "3807:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "3936:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3951:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3965:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3955:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3980:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4015:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4026:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4011:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4011:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4035:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3990:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3990:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3980:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4063:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4078:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4092:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4082:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4108:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4143:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4154:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4139:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4139:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4163:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4118:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4118:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4108:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3759:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3770:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3782:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3790:6:4",
														"type": ""
													}
												],
												"src": "3714:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4253:40:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4264:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4280:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4274:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4274:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4264:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4236:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4246:6:4",
														"type": ""
													}
												],
												"src": "4194:99:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4395:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4412:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4417:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4405:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4405:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4405:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4433:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4452:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4457:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4448:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4448:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4433:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4367:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4372:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4383:11:4",
														"type": ""
													}
												],
												"src": "4299:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4536:184:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4546:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4555:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4550:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4615:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "4640:3:4"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4645:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4636:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4636:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "4659:3:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4664:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4655:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4655:11:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4649:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4649:18:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4629:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4629:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4629:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4576:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4579:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4573:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4573:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4587:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4589:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4598:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4601:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4594:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4594:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4589:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4569:3:4",
																"statements": []
															},
															"src": "4565:113:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4698:3:4"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4703:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4694:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4694:16:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4712:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4687:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4687:27:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4687:27:4"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "4518:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "4523:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4528:6:4",
														"type": ""
													}
												],
												"src": "4474:246:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4818:285:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4828:53:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4875:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4842:32:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4842:39:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4832:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4890:78:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4956:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4961:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4897:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4897:71:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4890:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5016:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5023:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5012:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5012:16:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5030:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5035:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "4977:34:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4977:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4977:65:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5051:46:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5062:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5089:6:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "5067:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5067:29:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5058:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5058:39:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5051:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4799:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4806:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4814:3:4",
														"type": ""
													}
												],
												"src": "4726:377:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5227:195:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5237:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5249:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5260:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5245:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5245:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5237:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5284:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5295:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5280:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5280:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5303:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5309:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5299:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5299:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5273:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5273:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5273:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5329:86:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5401:6:4"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5410:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5337:63:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5337:78:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5329:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5199:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5211:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5222:4:4",
														"type": ""
													}
												],
												"src": "5109:313:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5494:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5540:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5542:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5542:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5542:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5515:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5524:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5511:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5511:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5536:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5507:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5507:32:4"
															},
															"nodeType": "YulIf",
															"src": "5504:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "5633:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5648:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5662:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5652:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5677:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5712:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5723:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5708:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5708:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5732:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5687:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5687:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5677:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5464:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5475:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5487:6:4",
														"type": ""
													}
												],
												"src": "5428:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5828:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5845:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5868:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5850:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5850:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5838:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5838:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5838:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5816:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5823:3:4",
														"type": ""
													}
												],
												"src": "5763:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6033:277:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6043:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6055:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6066:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6051:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6051:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6043:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6090:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6101:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6086:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6086:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6109:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6115:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6105:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6105:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6079:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6079:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6079:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6135:86:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6207:6:4"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6216:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6143:63:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6143:78:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6135:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6275:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6288:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6299:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6284:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6284:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6231:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6231:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6231:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5997:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6009:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6017:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6028:4:4",
														"type": ""
													}
												],
												"src": "5887:423:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6344:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6361:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6364:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6354:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6354:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6354:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6458:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6461:4:4",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6451:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6451:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6451:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6482:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6485:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6475:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6475:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6475:15:4"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "6316:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6553:269:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6563:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6577:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6583:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6573:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6573:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6563:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6594:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6624:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6630:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6620:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6620:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "6598:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6671:51:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6685:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6699:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6707:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6695:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6695:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6685:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6651:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6644:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6644:26:4"
															},
															"nodeType": "YulIf",
															"src": "6641:81:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6774:42:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "6788:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6788:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6788:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6738:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6761:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6769:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6758:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6758:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6735:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6735:38:4"
															},
															"nodeType": "YulIf",
															"src": "6732:84:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6537:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6546:6:4",
														"type": ""
													}
												],
												"src": "6502:320:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6882:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6892:11:4",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "6900:3:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "6892:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6920:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "6923:3:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6913:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6913:14:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6913:14:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6936:26:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6954:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6957:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "6944:9:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6944:18:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "6936:4:4"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "6869:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6877:4:4",
														"type": ""
													}
												],
												"src": "6828:141:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7019:49:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7029:33:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7047:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7054:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7043:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7043:14:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7059:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "7039:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7039:23:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "7029:6:4"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7002:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "7012:6:4",
														"type": ""
													}
												],
												"src": "6975:93:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7127:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7137:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "7162:4:4"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7168:5:4"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "7158:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7158:16:4"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "7137:8:4"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "7102:4:4",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7108:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "7118:8:4",
														"type": ""
													}
												],
												"src": "7074:107:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7263:317:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7273:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "7294:10:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7306:1:4",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7290:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7290:18:4"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "7277:9:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7317:109:4",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "7348:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7359:66:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7329:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7329:97:4"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "7321:4:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7435:51:4",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "7466:9:4"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "7477:8:4"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7447:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7447:39:4"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "7435:8:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7495:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7508:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "7519:4:4"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7515:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7515:9:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7504:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7504:21:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7495:5:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7534:40:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7547:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "7558:8:4"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "7568:4:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7554:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7554:19:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7544:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7544:30:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "7534:6:4"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7224:5:4",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "7231:10:4",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "7243:8:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "7256:6:4",
														"type": ""
													}
												],
												"src": "7187:393:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7618:28:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7628:12:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7635:5:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "7628:3:4"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7604:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "7614:3:4",
														"type": ""
													}
												],
												"src": "7586:60:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7712:82:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7722:66:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7780:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "7762:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7762:24:4"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "7753:8:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7753:34:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7735:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7735:53:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7722:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7692:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7702:9:4",
														"type": ""
													}
												],
												"src": "7652:142:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7847:28:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7857:12:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7864:5:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "7857:3:4"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7833:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "7843:3:4",
														"type": ""
													}
												],
												"src": "7800:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7957:193:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7967:63:4",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "8022:7:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7991:30:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7991:39:4"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "7971:16:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "8046:4:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "8086:4:4"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "8080:5:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8080:11:4"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8093:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "8125:16:4"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "8101:23:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8101:41:4"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "8052:27:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8052:91:4"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "8039:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8039:105:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8039:105:4"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7934:4:4",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7940:6:4",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "7948:7:4",
														"type": ""
													}
												],
												"src": "7881:269:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8205:24:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8215:8:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8222:1:4",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "8215:3:4"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "8201:3:4",
														"type": ""
													}
												],
												"src": "8156:73:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8288:136:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8298:46:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8312:30:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8312:32:4"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "8302:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "8397:4:4"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8403:6:4"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "8411:6:4"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8353:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8353:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8353:65:4"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "8274:4:4",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8280:6:4",
														"type": ""
													}
												],
												"src": "8235:189:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8480:136:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8547:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "8591:5:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8598:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "8561:29:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8561:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8561:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "8500:5:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8507:3:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8497:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8497:14:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8512:26:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8514:22:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "8527:5:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8534:1:4",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8523:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8523:13:4"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "8514:5:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8494:2:4",
																"statements": []
															},
															"src": "8490:120:4"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "8468:5:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8475:3:4",
														"type": ""
													}
												],
												"src": "8430:186:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8701:464:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8727:431:4",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8741:54:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "8789:5:4"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "8757:31:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8757:38:4"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "8745:8:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8808:63:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "8831:8:4"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "8859:10:4"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "8841:17:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8841:29:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8827:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8827:44:4"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "8812:11:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "9028:27:4",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "9030:23:4",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "9045:8:4"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "9030:11:4"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "9012:10:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9024:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "9009:2:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9009:18:4"
																		},
																		"nodeType": "YulIf",
																		"src": "9006:49:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "9097:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "9114:8:4"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "9142:3:4"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "9124:17:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9124:22:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9110:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9110:37:4"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "9068:28:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9068:80:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9068:80:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "8718:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8723:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8715:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8715:11:4"
															},
															"nodeType": "YulIf",
															"src": "8712:446:4"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8677:5:4",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "8684:3:4",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "8689:10:4",
														"type": ""
													}
												],
												"src": "8622:543:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9234:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9244:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "9269:4:4"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9275:5:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "9265:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9265:16:4"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "9244:8:4"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "9209:4:4",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9215:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "9225:8:4",
														"type": ""
													}
												],
												"src": "9171:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9345:118:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9355:68:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9404:1:4",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "9407:5:4"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "9400:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9400:13:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9419:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "9415:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9415:6:4"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "9371:28:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9371:51:4"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "9367:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9367:56:4"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "9359:4:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9432:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9446:4:4"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "9452:4:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9442:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9442:15:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "9432:6:4"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "9322:4:4",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "9328:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "9338:6:4",
														"type": ""
													}
												],
												"src": "9294:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9549:214:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9682:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9709:4:4"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "9715:3:4"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "9690:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9690:29:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "9682:4:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9728:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9739:4:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9749:1:4",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "9752:3:4"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "9745:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9745:11:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "9736:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9736:21:4"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "9728:4:4"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "9530:4:4",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "9536:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "9544:4:4",
														"type": ""
													}
												],
												"src": "9468:295:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9860:1303:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9871:51:4",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "9918:3:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "9885:32:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9885:37:4"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "9875:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10007:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "10009:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10009:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10009:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "9979:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9987:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9976:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9976:30:4"
															},
															"nodeType": "YulIf",
															"src": "9973:56:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10039:52:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "10085:4:4"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "10079:5:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10079:11:4"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "10053:25:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10053:38:4"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "10043:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "10184:4:4"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "10190:6:4"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "10198:6:4"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "10138:45:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10138:67:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10138:67:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10215:18:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10232:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "10219:9:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10243:17:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10256:4:4",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "10243:9:4"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "10307:611:4",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "10321:37:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "10340:6:4"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "10352:4:4",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "10348:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10348:9:4"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "10336:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10336:22:4"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "10325:7:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "10372:51:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "10418:4:4"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "10386:31:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10386:37:4"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "10376:6:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "10436:10:4",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10445:1:4",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "10440:1:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "10504:163:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "10529:6:4"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "10547:3:4"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "10552:9:4"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "10543:3:4"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "10543:19:4"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "10537:5:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "10537:26:4"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "10522:6:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10522:42:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "10522:42:4"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "10581:24:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "10595:6:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "10603:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "10591:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10591:14:4"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "10581:6:4"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "10622:31:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "10639:9:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "10650:2:4",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "10635:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10635:18:4"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "10622:9:4"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "10470:1:4"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "10473:7:4"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "10467:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10467:14:4"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "10482:21:4",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "10484:17:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "10493:1:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "10496:4:4",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "10489:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10489:12:4"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10484:1:4"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "10463:3:4",
																					"statements": []
																				},
																				"src": "10459:208:4"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "10703:156:4",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "10721:43:4",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "10748:3:4"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "10753:9:4"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "10744:3:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "10744:19:4"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "10738:5:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10738:26:4"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "10725:9:4",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "10788:6:4"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "10815:9:4"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "10830:6:4"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "10838:4:4",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "10826:3:4"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "10826:17:4"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "10796:18:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "10796:48:4"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "10781:6:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10781:64:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "10781:64:4"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "10686:7:4"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "10695:6:4"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "10683:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10683:19:4"
																				},
																				"nodeType": "YulIf",
																				"src": "10680:179:4"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "10879:4:4"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "10893:6:4"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "10901:1:4",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "10889:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "10889:14:4"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "10905:1:4",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "10885:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10885:22:4"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "10872:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10872:36:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "10872:36:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "10300:618:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10305:1:4",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "10935:222:4",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "10949:14:4",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10962:1:4",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "10953:5:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "10986:67:4",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "11004:35:4",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "11023:3:4"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "11028:9:4"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "11019:3:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "11019:19:4"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "11013:5:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11013:26:4"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "11004:5:4"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "10979:6:4"
																				},
																				"nodeType": "YulIf",
																				"src": "10976:77:4"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "11073:4:4"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "11132:5:4"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "11139:6:4"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "11079:52:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11079:67:4"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "11066:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11066:81:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "11066:81:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "10927:230:4",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "10280:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10288:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10277:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10277:14:4"
															},
															"nodeType": "YulSwitch",
															"src": "10270:887:4"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "9849:4:4",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "9855:3:4",
														"type": ""
													}
												],
												"src": "9768:1395:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11197:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11214:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11217:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11207:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11207:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11207:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11311:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11314:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11304:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11304:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11304:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11335:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11338:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11328:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11328:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11328:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11169:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11398:190:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11408:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11435:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11417:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11417:24:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "11408:5:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11531:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11533:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11533:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11533:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11456:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11463:66:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11453:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11453:77:4"
															},
															"nodeType": "YulIf",
															"src": "11450:103:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11562:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11573:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11580:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11569:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11569:13:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "11562:3:4"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11384:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "11394:3:4",
														"type": ""
													}
												],
												"src": "11355:233:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11741:47:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11758:3:4"
																	},
																	{
																		"hexValue": "5469636b657420707269636520697320",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11763:18:4",
																		"type": "",
																		"value": "Ticket price is "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11751:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11751:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11751:31:4"
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7b44d63f8640588bdc53652e1f9235a404b86d08f60e9227e7285853fb3c56bb_to_t_bytes16_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11736:3:4",
														"type": ""
													}
												],
												"src": "11594:194:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11908:34:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11918:18:4",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11933:3:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11918:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11880:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11885:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11896:11:4",
														"type": ""
													}
												],
												"src": "11794:148:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12058:280:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12068:53:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12115:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "12082:32:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12082:39:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12072:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12130:96:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12214:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12219:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12137:76:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12137:89:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12130:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12274:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12281:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12270:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12270:16:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12288:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12293:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "12235:34:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12235:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12235:65:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12309:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12320:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12325:6:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12316:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12316:16:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12309:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12039:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12046:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12054:3:4",
														"type": ""
													}
												],
												"src": "11948:390:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12571:315:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12716:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7b44d63f8640588bdc53652e1f9235a404b86d08f60e9227e7285853fb3c56bb_to_t_bytes16_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12582:132:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12582:138:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12582:138:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12729:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12740:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12745:2:4",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12736:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12736:12:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12729:3:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12758:102:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12847:6:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12856:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12765:81:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12765:95:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12758:3:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12870:10:4",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "12877:3:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12870:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_7b44d63f8640588bdc53652e1f9235a404b86d08f60e9227e7285853fb3c56bb_t_string_memory_ptr__to_t_bytes16_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12550:3:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12556:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12567:3:4",
														"type": ""
													}
												],
												"src": "12344:542:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12920:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12937:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12940:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12930:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12930:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12930:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13034:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13037:4:4",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13027:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13027:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13027:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13058:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13061:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13051:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13051:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13051:15:4"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "12892:180:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_t_stringliteral_7b44d63f8640588bdc53652e1f9235a404b86d08f60e9227e7285853fb3c56bb_to_t_bytes16_nonPadded_inplace_fromStack(pos) {\n        mstore(pos, \"Ticket price is \")\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_7b44d63f8640588bdc53652e1f9235a404b86d08f60e9227e7285853fb3c56bb_t_string_memory_ptr__to_t_bytes16_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        abi_encode_t_stringliteral_7b44d63f8640588bdc53652e1f9235a404b86d08f60e9227e7285853fb3c56bb_to_t_bytes16_nonPadded_inplace_fromStack( pos)\n        pos := add(pos, 16)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063163f41af14610046578063a8445a1e14610062578063dc8903a814610092575b600080fd5b610060600480360381019061005b9190610698565b6100c3565b005b61007c60048036038101906100779190610707565b610195565b60405161008991906107c6565b60405180910390f35b6100ac60048036038101906100a791906107e8565b610221565b6040516100ba929190610824565b60405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461011b57600080fd5b60405180606001604052808481526020018381526020018281525060026000600154815260200190815260200160002060008201518160000190816101609190610a60565b5060208201518160010155604082015181600201559050506001600081548092919061018b90610b61565b9190505550505050565b606060026000848152602001908152602001600020600201548210806101d05750600260008481526020019081526020016000206002015482115b1561021a576101f460026000858152602001908152602001600020600201546102e7565b6040516020016102049190610c0b565b604051602081830303815290604052905061021b565b5b92915050565b6060600060026000848152602001908152602001600020600001600260008581526020019081526020016000206002015481805461025e90610883565b80601f016020809104026020016040519081016040528092919081815260200182805461028a90610883565b80156102d75780601f106102ac576101008083540402835291602001916102d7565b820191906000526020600020905b8154815290600101906020018083116102ba57829003601f168201915b5050505050915091509150915091565b6060600060016102f6846103b5565b01905060008167ffffffffffffffff81111561031557610314610537565b5b6040519080825280601f01601f1916602001820160405280156103475781602001600182028036833780820191505090505b509050600082602001820190505b6001156103aa578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161039e5761039d610c31565b5b04945060008503610355575b819350505050919050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310610413577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161040957610408610c31565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310610450576d04ee2d6d415b85acef8100000000838161044657610445610c31565b5b0492506020810190505b662386f26fc10000831061047f57662386f26fc10000838161047557610474610c31565b5b0492506010810190505b6305f5e10083106104a8576305f5e100838161049e5761049d610c31565b5b0492506008810190505b61271083106104cd5761271083816104c3576104c2610c31565b5b0492506004810190505b606483106104f057606483816104e6576104e5610c31565b5b0492506002810190505b600a83106104ff576001810190505b80915050919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61056f82610526565b810181811067ffffffffffffffff8211171561058e5761058d610537565b5b80604052505050565b60006105a1610508565b90506105ad8282610566565b919050565b600067ffffffffffffffff8211156105cd576105cc610537565b5b6105d682610526565b9050602081019050919050565b82818337600083830152505050565b6000610605610600846105b2565b610597565b90508281526020810184848401111561062157610620610521565b5b61062c8482856105e3565b509392505050565b600082601f8301126106495761064861051c565b5b81356106598482602086016105f2565b91505092915050565b6000819050919050565b61067581610662565b811461068057600080fd5b50565b6000813590506106928161066c565b92915050565b6000806000606084860312156106b1576106b0610512565b5b600084013567ffffffffffffffff8111156106cf576106ce610517565b5b6106db86828701610634565b93505060206106ec86828701610683565b92505060406106fd86828701610683565b9150509250925092565b6000806040838503121561071e5761071d610512565b5b600061072c85828601610683565b925050602061073d85828601610683565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610781578082015181840152602081019050610766565b60008484015250505050565b600061079882610747565b6107a28185610752565b93506107b2818560208601610763565b6107bb81610526565b840191505092915050565b600060208201905081810360008301526107e0818461078d565b905092915050565b6000602082840312156107fe576107fd610512565b5b600061080c84828501610683565b91505092915050565b61081e81610662565b82525050565b6000604082019050818103600083015261083e818561078d565b905061084d6020830184610815565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061089b57607f821691505b6020821081036108ae576108ad610854565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026109167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826108d9565b61092086836108d9565b95508019841693508086168417925050509392505050565b6000819050919050565b600061095d61095861095384610662565b610938565b610662565b9050919050565b6000819050919050565b61097783610942565b61098b61098382610964565b8484546108e6565b825550505050565b600090565b6109a0610993565b6109ab81848461096e565b505050565b5b818110156109cf576109c4600082610998565b6001810190506109b1565b5050565b601f821115610a14576109e5816108b4565b6109ee846108c9565b810160208510156109fd578190505b610a11610a09856108c9565b8301826109b0565b50505b505050565b600082821c905092915050565b6000610a3760001984600802610a19565b1980831691505092915050565b6000610a508383610a26565b9150826002028217905092915050565b610a6982610747565b67ffffffffffffffff811115610a8257610a81610537565b5b610a8c8254610883565b610a978282856109d3565b600060209050601f831160018114610aca5760008415610ab8578287015190505b610ac28582610a44565b865550610b2a565b601f198416610ad8866108b4565b60005b82811015610b0057848901518255600182019150602085019450602081019050610adb565b86831015610b1d5784890151610b19601f891682610a26565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b6c82610662565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610b9e57610b9d610b32565b5b600182019050919050565b7f5469636b65742070726963652069732000000000000000000000000000000000815250565b600081905092915050565b6000610be582610747565b610bef8185610bcf565b9350610bff818560208601610763565b80840191505092915050565b6000610c1682610ba9565b601082019150610c268284610bda565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea264697066735822122039344f6800ea4d8b4b0a1d39e40368d1cd141d37ecf4a165a7f536b63740e38e64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x163F41AF EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xA8445A1E EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xDC8903A8 EQ PUSH2 0x92 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x698 JUMP JUMPDEST PUSH2 0xC3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x77 SWAP2 SWAP1 PUSH2 0x707 JUMP JUMPDEST PUSH2 0x195 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x89 SWAP2 SWAP1 PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA7 SWAP2 SWAP1 PUSH2 0x7E8 JUMP JUMPDEST PUSH2 0x221 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBA SWAP3 SWAP2 SWAP1 PUSH2 0x824 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x160 SWAP2 SWAP1 PUSH2 0xA60 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x18B SWAP1 PUSH2 0xB61 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP3 LT DUP1 PUSH2 0x1D0 JUMPI POP PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP3 GT JUMPDEST ISZERO PUSH2 0x21A JUMPI PUSH2 0x1F4 PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x21B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP2 DUP1 SLOAD PUSH2 0x25E SWAP1 PUSH2 0x883 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x28A SWAP1 PUSH2 0x883 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2AC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x2F6 DUP5 PUSH2 0x3B5 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x315 JUMPI PUSH2 0x314 PUSH2 0x537 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x347 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x3AA JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x39E JUMPI PUSH2 0x39D PUSH2 0xC31 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x355 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x413 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x409 JUMPI PUSH2 0x408 PUSH2 0xC31 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x450 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x446 JUMPI PUSH2 0x445 PUSH2 0xC31 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x47F JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x475 JUMPI PUSH2 0x474 PUSH2 0xC31 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x4A8 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x49E JUMPI PUSH2 0x49D PUSH2 0xC31 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x4CD JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x4C3 JUMPI PUSH2 0x4C2 PUSH2 0xC31 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x4F0 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x4E6 JUMPI PUSH2 0x4E5 PUSH2 0xC31 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x4FF JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x56F DUP3 PUSH2 0x526 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x58E JUMPI PUSH2 0x58D PUSH2 0x537 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A1 PUSH2 0x508 JUMP JUMPDEST SWAP1 POP PUSH2 0x5AD DUP3 DUP3 PUSH2 0x566 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x5CD JUMPI PUSH2 0x5CC PUSH2 0x537 JUMP JUMPDEST JUMPDEST PUSH2 0x5D6 DUP3 PUSH2 0x526 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x605 PUSH2 0x600 DUP5 PUSH2 0x5B2 JUMP JUMPDEST PUSH2 0x597 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x621 JUMPI PUSH2 0x620 PUSH2 0x521 JUMP JUMPDEST JUMPDEST PUSH2 0x62C DUP5 DUP3 DUP6 PUSH2 0x5E3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x649 JUMPI PUSH2 0x648 PUSH2 0x51C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x659 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x5F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x675 DUP2 PUSH2 0x662 JUMP JUMPDEST DUP2 EQ PUSH2 0x680 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x692 DUP2 PUSH2 0x66C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6B1 JUMPI PUSH2 0x6B0 PUSH2 0x512 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6CF JUMPI PUSH2 0x6CE PUSH2 0x517 JUMP JUMPDEST JUMPDEST PUSH2 0x6DB DUP7 DUP3 DUP8 ADD PUSH2 0x634 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x6EC DUP7 DUP3 DUP8 ADD PUSH2 0x683 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x6FD DUP7 DUP3 DUP8 ADD PUSH2 0x683 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x71E JUMPI PUSH2 0x71D PUSH2 0x512 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x72C DUP6 DUP3 DUP7 ADD PUSH2 0x683 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x73D DUP6 DUP3 DUP7 ADD PUSH2 0x683 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x781 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x766 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x798 DUP3 PUSH2 0x747 JUMP JUMPDEST PUSH2 0x7A2 DUP2 DUP6 PUSH2 0x752 JUMP JUMPDEST SWAP4 POP PUSH2 0x7B2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x763 JUMP JUMPDEST PUSH2 0x7BB DUP2 PUSH2 0x526 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7E0 DUP2 DUP5 PUSH2 0x78D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7FE JUMPI PUSH2 0x7FD PUSH2 0x512 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x80C DUP5 DUP3 DUP6 ADD PUSH2 0x683 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x81E DUP2 PUSH2 0x662 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x83E DUP2 DUP6 PUSH2 0x78D JUMP JUMPDEST SWAP1 POP PUSH2 0x84D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x815 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x89B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x8AE JUMPI PUSH2 0x8AD PUSH2 0x854 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x916 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x8D9 JUMP JUMPDEST PUSH2 0x920 DUP7 DUP4 PUSH2 0x8D9 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x95D PUSH2 0x958 PUSH2 0x953 DUP5 PUSH2 0x662 JUMP JUMPDEST PUSH2 0x938 JUMP JUMPDEST PUSH2 0x662 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x977 DUP4 PUSH2 0x942 JUMP JUMPDEST PUSH2 0x98B PUSH2 0x983 DUP3 PUSH2 0x964 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x8E6 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x9A0 PUSH2 0x993 JUMP JUMPDEST PUSH2 0x9AB DUP2 DUP5 DUP5 PUSH2 0x96E JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9CF JUMPI PUSH2 0x9C4 PUSH1 0x0 DUP3 PUSH2 0x998 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x9B1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xA14 JUMPI PUSH2 0x9E5 DUP2 PUSH2 0x8B4 JUMP JUMPDEST PUSH2 0x9EE DUP5 PUSH2 0x8C9 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x9FD JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0xA11 PUSH2 0xA09 DUP6 PUSH2 0x8C9 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x9B0 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA37 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xA19 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA50 DUP4 DUP4 PUSH2 0xA26 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA69 DUP3 PUSH2 0x747 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA82 JUMPI PUSH2 0xA81 PUSH2 0x537 JUMP JUMPDEST JUMPDEST PUSH2 0xA8C DUP3 SLOAD PUSH2 0x883 JUMP JUMPDEST PUSH2 0xA97 DUP3 DUP3 DUP6 PUSH2 0x9D3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xACA JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0xAB8 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xAC2 DUP6 DUP3 PUSH2 0xA44 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xB2A JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xAD8 DUP7 PUSH2 0x8B4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xB00 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xADB JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xB1D JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xB19 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xA26 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB6C DUP3 PUSH2 0x662 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xB9E JUMPI PUSH2 0xB9D PUSH2 0xB32 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5469636B65742070726963652069732000000000000000000000000000000000 DUP2 MSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE5 DUP3 PUSH2 0x747 JUMP JUMPDEST PUSH2 0xBEF DUP2 DUP6 PUSH2 0xBCF JUMP JUMPDEST SWAP4 POP PUSH2 0xBFF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x763 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC16 DUP3 PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0x10 DUP3 ADD SWAP2 POP PUSH2 0xC26 DUP3 DUP5 PUSH2 0xBDA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY CALLVALUE 0x4F PUSH9 0xEA4D8B4B0A1D39E4 SUB PUSH9 0xD1CD141D37ECF4A165 0xA7 CREATE2 CALLDATASIZE 0xB6 CALLDATACOPY BLOCKHASH 0xE3 DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "127:815:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;340:160;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;636:303;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;504:128;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;340:160;435:10;424:21;;:7;;;;;;;;;;:21;;;416:30;;;;;;462:25;;;;;;;;468:4;462:25;;;;475:4;462:25;;;;481:5;462:25;;;449:6;:10;456:2;;449:10;;;;;;;;;;;:38;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;490:2;;:4;;;;;;;;;:::i;:::-;;;;;;340:160;;;:::o;636:303::-;697:13;802:6;:10;809:2;802:10;;;;;;;;;;;:16;;;795:4;:23;:50;;;;829:6;:10;836:2;829:10;;;;;;;;;;;:16;;;822:4;:23;795:50;792:140;;;893:34;910:6;:10;917:2;910:10;;;;;;;;;;;:16;;;893;:34::i;:::-;860:68;;;;;;;;:::i;:::-;;;;;;;;;;;;;853:75;;;;792:140;636:303;;;;;:::o;504:128::-;555:13;571:4;589:6;:11;596:3;589:11;;;;;;;;;;;:16;;608:6;:11;615:3;608:11;;;;;;;;;;;:17;;;581:45;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;504:128;;;:::o;447:696:0:-;503:13;552:14;589:1;569:17;580:5;569:10;:17::i;:::-;:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;604:41;;659:11;785:6;781:2;777:15;769:6;765:28;758:35;;820:280;827:4;820:280;;;851:5;;;;;;;;990:8;985:2;978:5;974:14;969:30;964:3;956:44;1044:2;1035:11;;;;;;:::i;:::-;;;;;1077:1;1068:5;:10;820:280;1064:21;820:280;1120:6;1113:13;;;;;447:696;;;:::o;10139:916:1:-;10192:7;10211:14;10228:1;10211:18;;10276:8;10267:5;:17;10263:103;;10313:8;10304:17;;;;;;:::i;:::-;;;;;10349:2;10339:12;;;;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;;;;:::i;:::-;;;;;10465:2;10455:12;;;;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;;;;:::i;:::-;;;;;10581:2;10571:12;;;;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;;;;:::i;:::-;;;;;10695:1;10685:11;;;;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;;;;:::i;:::-;;;;;10808:1;10798:11;;;;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;;;;:::i;:::-;;;;;10921:1;10911:11;;;;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;;;;10950:66;11042:6;11035:13;;;10139:916;;;:::o;7:75:4:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:146::-;1707:6;1702:3;1697;1684:30;1748:1;1739:6;1734:3;1730:16;1723:27;1610:146;;;:::o;1762:425::-;1840:5;1865:66;1881:49;1923:6;1881:49;:::i;:::-;1865:66;:::i;:::-;1856:75;;1954:6;1947:5;1940:21;1992:4;1985:5;1981:16;2030:3;2021:6;2016:3;2012:16;2009:25;2006:112;;;2037:79;;:::i;:::-;2006:112;2127:54;2174:6;2169:3;2164;2127:54;:::i;:::-;1846:341;1762:425;;;;;:::o;2207:340::-;2263:5;2312:3;2305:4;2297:6;2293:17;2289:27;2279:122;;2320:79;;:::i;:::-;2279:122;2437:6;2424:20;2462:79;2537:3;2529:6;2522:4;2514:6;2510:17;2462:79;:::i;:::-;2453:88;;2269:278;2207:340;;;;:::o;2553:77::-;2590:7;2619:5;2608:16;;2553:77;;;:::o;2636:122::-;2709:24;2727:5;2709:24;:::i;:::-;2702:5;2699:35;2689:63;;2748:1;2745;2738:12;2689:63;2636:122;:::o;2764:139::-;2810:5;2848:6;2835:20;2826:29;;2864:33;2891:5;2864:33;:::i;:::-;2764:139;;;;:::o;2909:799::-;2996:6;3004;3012;3061:2;3049:9;3040:7;3036:23;3032:32;3029:119;;;3067:79;;:::i;:::-;3029:119;3215:1;3204:9;3200:17;3187:31;3245:18;3237:6;3234:30;3231:117;;;3267:79;;:::i;:::-;3231:117;3372:63;3427:7;3418:6;3407:9;3403:22;3372:63;:::i;:::-;3362:73;;3158:287;3484:2;3510:53;3555:7;3546:6;3535:9;3531:22;3510:53;:::i;:::-;3500:63;;3455:118;3612:2;3638:53;3683:7;3674:6;3663:9;3659:22;3638:53;:::i;:::-;3628:63;;3583:118;2909:799;;;;;:::o;3714:474::-;3782:6;3790;3839:2;3827:9;3818:7;3814:23;3810:32;3807:119;;;3845:79;;:::i;:::-;3807:119;3965:1;3990:53;4035:7;4026:6;4015:9;4011:22;3990:53;:::i;:::-;3980:63;;3936:117;4092:2;4118:53;4163:7;4154:6;4143:9;4139:22;4118:53;:::i;:::-;4108:63;;4063:118;3714:474;;;;;:::o;4194:99::-;4246:6;4280:5;4274:12;4264:22;;4194:99;;;:::o;4299:169::-;4383:11;4417:6;4412:3;4405:19;4457:4;4452:3;4448:14;4433:29;;4299:169;;;;:::o;4474:246::-;4555:1;4565:113;4579:6;4576:1;4573:13;4565:113;;;4664:1;4659:3;4655:11;4649:18;4645:1;4640:3;4636:11;4629:39;4601:2;4598:1;4594:10;4589:15;;4565:113;;;4712:1;4703:6;4698:3;4694:16;4687:27;4536:184;4474:246;;;:::o;4726:377::-;4814:3;4842:39;4875:5;4842:39;:::i;:::-;4897:71;4961:6;4956:3;4897:71;:::i;:::-;4890:78;;4977:65;5035:6;5030:3;5023:4;5016:5;5012:16;4977:65;:::i;:::-;5067:29;5089:6;5067:29;:::i;:::-;5062:3;5058:39;5051:46;;4818:285;4726:377;;;;:::o;5109:313::-;5222:4;5260:2;5249:9;5245:18;5237:26;;5309:9;5303:4;5299:20;5295:1;5284:9;5280:17;5273:47;5337:78;5410:4;5401:6;5337:78;:::i;:::-;5329:86;;5109:313;;;;:::o;5428:329::-;5487:6;5536:2;5524:9;5515:7;5511:23;5507:32;5504:119;;;5542:79;;:::i;:::-;5504:119;5662:1;5687:53;5732:7;5723:6;5712:9;5708:22;5687:53;:::i;:::-;5677:63;;5633:117;5428:329;;;;:::o;5763:118::-;5850:24;5868:5;5850:24;:::i;:::-;5845:3;5838:37;5763:118;;:::o;5887:423::-;6028:4;6066:2;6055:9;6051:18;6043:26;;6115:9;6109:4;6105:20;6101:1;6090:9;6086:17;6079:47;6143:78;6216:4;6207:6;6143:78;:::i;:::-;6135:86;;6231:72;6299:2;6288:9;6284:18;6275:6;6231:72;:::i;:::-;5887:423;;;;;:::o;6316:180::-;6364:77;6361:1;6354:88;6461:4;6458:1;6451:15;6485:4;6482:1;6475:15;6502:320;6546:6;6583:1;6577:4;6573:12;6563:22;;6630:1;6624:4;6620:12;6651:18;6641:81;;6707:4;6699:6;6695:17;6685:27;;6641:81;6769:2;6761:6;6758:14;6738:18;6735:38;6732:84;;6788:18;;:::i;:::-;6732:84;6553:269;6502:320;;;:::o;6828:141::-;6877:4;6900:3;6892:11;;6923:3;6920:1;6913:14;6957:4;6954:1;6944:18;6936:26;;6828:141;;;:::o;6975:93::-;7012:6;7059:2;7054;7047:5;7043:14;7039:23;7029:33;;6975:93;;;:::o;7074:107::-;7118:8;7168:5;7162:4;7158:16;7137:37;;7074:107;;;;:::o;7187:393::-;7256:6;7306:1;7294:10;7290:18;7329:97;7359:66;7348:9;7329:97;:::i;:::-;7447:39;7477:8;7466:9;7447:39;:::i;:::-;7435:51;;7519:4;7515:9;7508:5;7504:21;7495:30;;7568:4;7558:8;7554:19;7547:5;7544:30;7534:40;;7263:317;;7187:393;;;;;:::o;7586:60::-;7614:3;7635:5;7628:12;;7586:60;;;:::o;7652:142::-;7702:9;7735:53;7753:34;7762:24;7780:5;7762:24;:::i;:::-;7753:34;:::i;:::-;7735:53;:::i;:::-;7722:66;;7652:142;;;:::o;7800:75::-;7843:3;7864:5;7857:12;;7800:75;;;:::o;7881:269::-;7991:39;8022:7;7991:39;:::i;:::-;8052:91;8101:41;8125:16;8101:41;:::i;:::-;8093:6;8086:4;8080:11;8052:91;:::i;:::-;8046:4;8039:105;7957:193;7881:269;;;:::o;8156:73::-;8201:3;8156:73;:::o;8235:189::-;8312:32;;:::i;:::-;8353:65;8411:6;8403;8397:4;8353:65;:::i;:::-;8288:136;8235:189;;:::o;8430:186::-;8490:120;8507:3;8500:5;8497:14;8490:120;;;8561:39;8598:1;8591:5;8561:39;:::i;:::-;8534:1;8527:5;8523:13;8514:22;;8490:120;;;8430:186;;:::o;8622:543::-;8723:2;8718:3;8715:11;8712:446;;;8757:38;8789:5;8757:38;:::i;:::-;8841:29;8859:10;8841:29;:::i;:::-;8831:8;8827:44;9024:2;9012:10;9009:18;9006:49;;;9045:8;9030:23;;9006:49;9068:80;9124:22;9142:3;9124:22;:::i;:::-;9114:8;9110:37;9097:11;9068:80;:::i;:::-;8727:431;;8712:446;8622:543;;;:::o;9171:117::-;9225:8;9275:5;9269:4;9265:16;9244:37;;9171:117;;;;:::o;9294:169::-;9338:6;9371:51;9419:1;9415:6;9407:5;9404:1;9400:13;9371:51;:::i;:::-;9367:56;9452:4;9446;9442:15;9432:25;;9345:118;9294:169;;;;:::o;9468:295::-;9544:4;9690:29;9715:3;9709:4;9690:29;:::i;:::-;9682:37;;9752:3;9749:1;9745:11;9739:4;9736:21;9728:29;;9468:295;;;;:::o;9768:1395::-;9885:37;9918:3;9885:37;:::i;:::-;9987:18;9979:6;9976:30;9973:56;;;10009:18;;:::i;:::-;9973:56;10053:38;10085:4;10079:11;10053:38;:::i;:::-;10138:67;10198:6;10190;10184:4;10138:67;:::i;:::-;10232:1;10256:4;10243:17;;10288:2;10280:6;10277:14;10305:1;10300:618;;;;10962:1;10979:6;10976:77;;;11028:9;11023:3;11019:19;11013:26;11004:35;;10976:77;11079:67;11139:6;11132:5;11079:67;:::i;:::-;11073:4;11066:81;10935:222;10270:887;;10300:618;10352:4;10348:9;10340:6;10336:22;10386:37;10418:4;10386:37;:::i;:::-;10445:1;10459:208;10473:7;10470:1;10467:14;10459:208;;;10552:9;10547:3;10543:19;10537:26;10529:6;10522:42;10603:1;10595:6;10591:14;10581:24;;10650:2;10639:9;10635:18;10622:31;;10496:4;10493:1;10489:12;10484:17;;10459:208;;;10695:6;10686:7;10683:19;10680:179;;;10753:9;10748:3;10744:19;10738:26;10796:48;10838:4;10830:6;10826:17;10815:9;10796:48;:::i;:::-;10788:6;10781:64;10703:156;10680:179;10905:1;10901;10893:6;10889:14;10885:22;10879:4;10872:36;10307:611;;;10270:887;;9860:1303;;;9768:1395;;:::o;11169:180::-;11217:77;11214:1;11207:88;11314:4;11311:1;11304:15;11338:4;11335:1;11328:15;11355:233;11394:3;11417:24;11435:5;11417:24;:::i;:::-;11408:33;;11463:66;11456:5;11453:77;11450:103;;11533:18;;:::i;:::-;11450:103;11580:1;11573:5;11569:13;11562:20;;11355:233;;;:::o;11594:194::-;11763:18;11758:3;11751:31;11594:194;:::o;11794:148::-;11896:11;11933:3;11918:18;;11794:148;;;;:::o;11948:390::-;12054:3;12082:39;12115:5;12082:39;:::i;:::-;12137:89;12219:6;12214:3;12137:89;:::i;:::-;12130:96;;12235:65;12293:6;12288:3;12281:4;12274:5;12270:16;12235:65;:::i;:::-;12325:6;12320:3;12316:16;12309:23;;12058:280;11948:390;;;;:::o;12344:542::-;12567:3;12582:138;12716:3;12582:138;:::i;:::-;12745:2;12740:3;12736:12;12729:19;;12765:95;12856:3;12847:6;12765:95;:::i;:::-;12758:102;;12877:3;12870:10;;12344:542;;;;:::o;12892:180::-;12940:77;12937:1;12930:88;13037:4;13034:1;13027:15;13061:4;13058:1;13051:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "644400",
								"executionCost": "24942",
								"totalCost": "669342"
							},
							"external": {
								"BuyTicket(uint256,uint256)": "infinite",
								"Checkevent(uint256)": "infinite",
								"CreateEvent(string,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 127,
									"end": 942,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 127,
									"end": 942,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 127,
									"end": 942,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 170,
									"end": 223,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 170,
									"end": 223,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 170,
									"end": 223,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 170,
									"end": 223,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 170,
									"end": 223,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 170,
									"end": 223,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 223,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 170,
									"end": 223,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 170,
									"end": 223,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 170,
									"end": 223,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 170,
									"end": 223,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 197,
									"end": 207,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 187,
									"end": 194,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 194,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 207,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 187,
									"end": 207,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 187,
									"end": 207,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 187,
									"end": 207,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 187,
									"end": 207,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 187,
									"end": 207,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 187,
									"end": 207,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 187,
									"end": 207,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 187,
									"end": 207,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 187,
									"end": 207,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 207,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 187,
									"end": 207,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 187,
									"end": 207,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 187,
									"end": 207,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 187,
									"end": 207,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 187,
									"end": 207,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 207,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 187,
									"end": 207,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 127,
									"end": 942,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 127,
									"end": 942,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 127,
									"end": 942,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 127,
									"end": 942,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 127,
									"end": 942,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 127,
									"end": 942,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 127,
									"end": 942,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122039344f6800ea4d8b4b0a1d39e40368d1cd141d37ecf4a165a7f536b63740e38e64736f6c63430008120033",
									".code": [
										{
											"begin": 127,
											"end": 942,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 127,
											"end": 942,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 127,
											"end": 942,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 127,
											"end": 942,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 127,
											"end": 942,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 127,
											"end": 942,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 127,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 127,
											"end": 942,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 127,
											"end": 942,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 127,
											"end": 942,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 127,
											"end": 942,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 127,
											"end": 942,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 127,
											"end": 942,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 127,
											"end": 942,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 127,
											"end": 942,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 127,
											"end": 942,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 127,
											"end": 942,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 127,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 127,
											"end": 942,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 127,
											"end": 942,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 127,
											"end": 942,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 127,
											"end": 942,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 127,
											"end": 942,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 127,
											"end": 942,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 127,
											"end": 942,
											"name": "PUSH",
											"source": 3,
											"value": "163F41AF"
										},
										{
											"begin": 127,
											"end": 942,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 127,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 127,
											"end": 942,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 127,
											"end": 942,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 127,
											"end": 942,
											"name": "PUSH",
											"source": 3,
											"value": "A8445A1E"
										},
										{
											"begin": 127,
											"end": 942,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 127,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 127,
											"end": 942,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 127,
											"end": 942,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 127,
											"end": 942,
											"name": "PUSH",
											"source": 3,
											"value": "DC8903A8"
										},
										{
											"begin": 127,
											"end": 942,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 127,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 127,
											"end": 942,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 127,
											"end": 942,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 127,
											"end": 942,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 127,
											"end": 942,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 127,
											"end": 942,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 127,
											"end": 942,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 340,
											"end": 500,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 340,
											"end": 500,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 340,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 340,
											"end": 500,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 340,
											"end": 500,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 340,
											"end": 500,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 340,
											"end": 500,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 340,
											"end": 500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 340,
											"end": 500,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 340,
											"end": 500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 340,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 340,
											"end": 500,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 340,
											"end": 500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 340,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 340,
											"end": 500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 340,
											"end": 500,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 340,
											"end": 500,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 340,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 340,
											"end": 500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 340,
											"end": 500,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 340,
											"end": 500,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 340,
											"end": 500,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 636,
											"end": 939,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 636,
											"end": 939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 636,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 636,
											"end": 939,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 636,
											"end": 939,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 636,
											"end": 939,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 636,
											"end": 939,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 636,
											"end": 939,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 636,
											"end": 939,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 636,
											"end": 939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 636,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 636,
											"end": 939,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 636,
											"end": 939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 636,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 636,
											"end": 939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 636,
											"end": 939,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 636,
											"end": 939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 636,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 636,
											"end": 939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 636,
											"end": 939,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 636,
											"end": 939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 636,
											"end": 939,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 636,
											"end": 939,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 636,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 636,
											"end": 939,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 636,
											"end": 939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 636,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 636,
											"end": 939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 636,
											"end": 939,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 636,
											"end": 939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 636,
											"end": 939,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 636,
											"end": 939,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 636,
											"end": 939,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 636,
											"end": 939,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 636,
											"end": 939,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 636,
											"end": 939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 636,
											"end": 939,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 504,
											"end": 632,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 504,
											"end": 632,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 504,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 504,
											"end": 632,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 504,
											"end": 632,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 504,
											"end": 632,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 504,
											"end": 632,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 504,
											"end": 632,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 504,
											"end": 632,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 504,
											"end": 632,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 504,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 504,
											"end": 632,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 504,
											"end": 632,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 504,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 504,
											"end": 632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 504,
											"end": 632,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 504,
											"end": 632,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 504,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 504,
											"end": 632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 504,
											"end": 632,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 504,
											"end": 632,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 504,
											"end": 632,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 504,
											"end": 632,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 504,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 504,
											"end": 632,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 504,
											"end": 632,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 504,
											"end": 632,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 504,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 504,
											"end": 632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 504,
											"end": 632,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 504,
											"end": 632,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 504,
											"end": 632,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 504,
											"end": 632,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 504,
											"end": 632,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 504,
											"end": 632,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 504,
											"end": 632,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 504,
											"end": 632,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 504,
											"end": 632,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 340,
											"end": 500,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 340,
											"end": 500,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 435,
											"end": 445,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 424,
											"end": 445,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 424,
											"end": 445,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 424,
											"end": 431,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 431,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 424,
											"end": 431,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 424,
											"end": 431,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 424,
											"end": 431,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 424,
											"end": 431,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 424,
											"end": 431,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 424,
											"end": 431,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 424,
											"end": 431,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 424,
											"end": 431,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 424,
											"end": 445,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 424,
											"end": 445,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 424,
											"end": 445,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 416,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 416,
											"end": 446,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 416,
											"end": 446,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 446,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 416,
											"end": 446,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 416,
											"end": 446,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 416,
											"end": 446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 462,
											"end": 487,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 462,
											"end": 487,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 462,
											"end": 487,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 462,
											"end": 487,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 462,
											"end": 487,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 462,
											"end": 487,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 462,
											"end": 487,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 462,
											"end": 487,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 468,
											"end": 472,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 462,
											"end": 487,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 462,
											"end": 487,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 462,
											"end": 487,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 462,
											"end": 487,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 475,
											"end": 479,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 462,
											"end": 487,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 462,
											"end": 487,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 462,
											"end": 487,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 462,
											"end": 487,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 481,
											"end": 486,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 462,
											"end": 487,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 462,
											"end": 487,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 462,
											"end": 487,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 449,
											"end": 455,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 449,
											"end": 459,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 456,
											"end": 458,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 456,
											"end": 458,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 449,
											"end": 459,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 449,
											"end": 459,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 449,
											"end": 459,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 449,
											"end": 459,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 449,
											"end": 459,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 449,
											"end": 459,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 449,
											"end": 459,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 449,
											"end": 459,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 449,
											"end": 459,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 449,
											"end": 459,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 459,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 449,
											"end": 487,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 487,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 449,
											"end": 487,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 449,
											"end": 487,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 449,
											"end": 487,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 449,
											"end": 487,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 487,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 449,
											"end": 487,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 449,
											"end": 487,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 449,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 449,
											"end": 487,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 449,
											"end": 487,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 449,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 449,
											"end": 487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 449,
											"end": 487,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 449,
											"end": 487,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 449,
											"end": 487,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 449,
											"end": 487,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 449,
											"end": 487,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 449,
											"end": 487,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 449,
											"end": 487,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 449,
											"end": 487,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 449,
											"end": 487,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 449,
											"end": 487,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 449,
											"end": 487,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 449,
											"end": 487,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 487,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 449,
											"end": 487,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 449,
											"end": 487,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 449,
											"end": 487,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 449,
											"end": 487,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 449,
											"end": 487,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 449,
											"end": 487,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 449,
											"end": 487,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 449,
											"end": 487,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 449,
											"end": 487,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 490,
											"end": 492,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 490,
											"end": 492,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 490,
											"end": 494,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 490,
											"end": 494,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 490,
											"end": 494,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 490,
											"end": 494,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 490,
											"end": 494,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 490,
											"end": 494,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 490,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 490,
											"end": 494,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 490,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 490,
											"end": 494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 490,
											"end": 494,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 490,
											"end": 494,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 490,
											"end": 494,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 490,
											"end": 494,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 490,
											"end": 494,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 490,
											"end": 494,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 490,
											"end": 494,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 340,
											"end": 500,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 340,
											"end": 500,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 340,
											"end": 500,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 340,
											"end": 500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 636,
											"end": 939,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 636,
											"end": 939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 697,
											"end": 710,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 802,
											"end": 808,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 802,
											"end": 812,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 811,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 802,
											"end": 812,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 802,
											"end": 812,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 802,
											"end": 812,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 802,
											"end": 812,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 802,
											"end": 812,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 802,
											"end": 812,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 802,
											"end": 812,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 802,
											"end": 812,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 802,
											"end": 812,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 802,
											"end": 812,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 802,
											"end": 812,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 802,
											"end": 818,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 802,
											"end": 818,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 802,
											"end": 818,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 795,
											"end": 799,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 795,
											"end": 818,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 795,
											"end": 845,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 795,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 795,
											"end": 845,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 795,
											"end": 845,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 829,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 838,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 829,
											"end": 839,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 829,
											"end": 839,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 829,
											"end": 839,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 829,
											"end": 839,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 829,
											"end": 839,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 829,
											"end": 839,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 829,
											"end": 839,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 829,
											"end": 839,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 829,
											"end": 845,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 829,
											"end": 845,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 829,
											"end": 845,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 822,
											"end": 826,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 822,
											"end": 845,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 795,
											"end": 845,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 795,
											"end": 845,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 792,
											"end": 932,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 792,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 792,
											"end": 932,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 893,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 910,
											"end": 916,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 910,
											"end": 920,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 917,
											"end": 919,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 910,
											"end": 920,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 910,
											"end": 920,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 910,
											"end": 920,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 910,
											"end": 920,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 910,
											"end": 920,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 910,
											"end": 920,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 910,
											"end": 920,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 910,
											"end": 920,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 910,
											"end": 920,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 910,
											"end": 920,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 910,
											"end": 920,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 910,
											"end": 926,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 910,
											"end": 926,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 910,
											"end": 926,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 893,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 893,
											"end": 927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 893,
											"end": 927,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 893,
											"end": 927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 860,
											"end": 928,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 860,
											"end": 928,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 860,
											"end": 928,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 860,
											"end": 928,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 860,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 860,
											"end": 928,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 860,
											"end": 928,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 860,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 860,
											"end": 928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 860,
											"end": 928,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 860,
											"end": 928,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 860,
											"end": 928,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 860,
											"end": 928,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 860,
											"end": 928,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 860,
											"end": 928,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 860,
											"end": 928,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 860,
											"end": 928,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 860,
											"end": 928,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 860,
											"end": 928,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 860,
											"end": 928,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 860,
											"end": 928,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 860,
											"end": 928,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 860,
											"end": 928,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 853,
											"end": 928,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 853,
											"end": 928,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 853,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 853,
											"end": 928,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 792,
											"end": 932,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 792,
											"end": 932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 636,
											"end": 939,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 636,
											"end": 939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 636,
											"end": 939,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 636,
											"end": 939,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 636,
											"end": 939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 636,
											"end": 939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 636,
											"end": 939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 504,
											"end": 632,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 504,
											"end": 632,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 555,
											"end": 568,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 571,
											"end": 575,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 595,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 589,
											"end": 600,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 599,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 589,
											"end": 600,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 589,
											"end": 600,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 589,
											"end": 600,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 589,
											"end": 600,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 589,
											"end": 600,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 589,
											"end": 600,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 589,
											"end": 600,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 589,
											"end": 600,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 589,
											"end": 600,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 589,
											"end": 600,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 600,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 589,
											"end": 605,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 605,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 608,
											"end": 614,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 608,
											"end": 619,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 618,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 608,
											"end": 619,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 608,
											"end": 619,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 608,
											"end": 619,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 608,
											"end": 619,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 608,
											"end": 619,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 608,
											"end": 619,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 608,
											"end": 619,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 608,
											"end": 619,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 608,
											"end": 619,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 608,
											"end": 619,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 608,
											"end": 619,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 608,
											"end": 625,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 608,
											"end": 625,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 608,
											"end": 625,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 581,
											"end": 626,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 581,
											"end": 626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 581,
											"end": 626,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 581,
											"end": 626,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 581,
											"end": 626,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 581,
											"end": 626,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 581,
											"end": 626,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 581,
											"end": 626,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 581,
											"end": 626,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 581,
											"end": 626,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 581,
											"end": 626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 581,
											"end": 626,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 581,
											"end": 626,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 581,
											"end": 626,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 581,
											"end": 626,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 581,
											"end": 626,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 581,
											"end": 626,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 581,
											"end": 626,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 581,
											"end": 626,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 581,
											"end": 626,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 581,
											"end": 626,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 581,
											"end": 626,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 581,
											"end": 626,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 581,
											"end": 626,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 581,
											"end": 626,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 581,
											"end": 626,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 581,
											"end": 626,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 581,
											"end": 626,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 581,
											"end": 626,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 504,
											"end": 632,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 504,
											"end": 632,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 504,
											"end": 632,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 504,
											"end": 632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 503,
											"end": 516,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 552,
											"end": 566,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 590,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 569,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 569,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 569,
											"end": 586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 569,
											"end": 586,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 569,
											"end": 586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 569,
											"end": 590,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 552,
											"end": 590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 552,
											"end": 590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 604,
											"end": 624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 644,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 627,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 627,
											"end": 645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 659,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 791,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 781,
											"end": 783,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 777,
											"end": 792,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 769,
											"end": 775,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 765,
											"end": 793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 758,
											"end": 793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 758,
											"end": 793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 827,
											"end": 831,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 851,
											"end": 856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 851,
											"end": 856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 851,
											"end": 856,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 851,
											"end": 856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 851,
											"end": 856,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 851,
											"end": 856,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 851,
											"end": 856,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 851,
											"end": 856,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 990,
											"end": 998,
											"name": "PUSH",
											"source": 0,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 985,
											"end": 987,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 974,
											"end": 988,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 969,
											"end": 999,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 964,
											"end": 967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 956,
											"end": 1000,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 1044,
											"end": 1046,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1035,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1078,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1073,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1068,
											"end": 1078,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1064,
											"end": 1085,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 447,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10192,
											"end": 10199,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10211,
											"end": 10225,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10228,
											"end": 10229,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10211,
											"end": 10229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10211,
											"end": 10229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10276,
											"end": 10284,
											"name": "PUSH",
											"source": 1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 10267,
											"end": 10272,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10267,
											"end": 10284,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10313,
											"end": 10321,
											"name": "PUSH",
											"source": 1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 10304,
											"end": 10321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10349,
											"end": 10351,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10339,
											"end": 10351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10339,
											"end": 10351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10339,
											"end": 10351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10339,
											"end": 10351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10400,
											"name": "PUSH",
											"source": 1,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10383,
											"end": 10388,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10383,
											"end": 10400,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10429,
											"end": 10437,
											"name": "PUSH",
											"source": 1,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 10420,
											"end": 10437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10465,
											"end": 10467,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10455,
											"end": 10467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10455,
											"end": 10467,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10455,
											"end": 10467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10455,
											"end": 10467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10508,
											"end": 10516,
											"name": "PUSH",
											"source": 1,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10499,
											"end": 10504,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10499,
											"end": 10516,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10545,
											"end": 10553,
											"name": "PUSH",
											"source": 1,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 10536,
											"end": 10553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10581,
											"end": 10583,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 10571,
											"end": 10583,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10571,
											"end": 10583,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10571,
											"end": 10583,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10571,
											"end": 10583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10624,
											"end": 10631,
											"name": "PUSH",
											"source": 1,
											"value": "5F5E100"
										},
										{
											"begin": 10615,
											"end": 10620,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10615,
											"end": 10631,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10660,
											"end": 10667,
											"name": "PUSH",
											"source": 1,
											"value": "5F5E100"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 10651,
											"end": 10667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10695,
											"end": 10696,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10737,
											"end": 10744,
											"name": "PUSH",
											"source": 1,
											"value": "2710"
										},
										{
											"begin": 10728,
											"end": 10733,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10728,
											"end": 10744,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10773,
											"end": 10780,
											"name": "PUSH",
											"source": 1,
											"value": "2710"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 10764,
											"end": 10780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10808,
											"end": 10809,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10798,
											"end": 10809,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10798,
											"end": 10809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10798,
											"end": 10809,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10798,
											"end": 10809,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10850,
											"end": 10857,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10841,
											"end": 10846,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10841,
											"end": 10857,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10886,
											"end": 10893,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 10877,
											"end": 10893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10921,
											"end": 10922,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10911,
											"end": 10922,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10911,
											"end": 10922,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10911,
											"end": 10922,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10911,
											"end": 10922,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 10954,
											"end": 10959,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10954,
											"end": 10970,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11000,
											"end": 11001,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10990,
											"end": 11001,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10990,
											"end": 11001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10990,
											"end": 11001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10990,
											"end": 11001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11042,
											"end": 11048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11035,
											"end": 11048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11035,
											"end": 11048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11035,
											"end": 11048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10139,
											"end": 11055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 451,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 334,
											"end": 451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 457,
											"end": 574,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 457,
											"end": 574,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 566,
											"end": 567,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 564,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 556,
											"end": 568,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 580,
											"end": 682,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 580,
											"end": 682,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 621,
											"end": 627,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 674,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 668,
											"end": 675,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 663,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 656,
											"end": 661,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 652,
											"end": 666,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 648,
											"end": 676,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 638,
											"end": 676,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 638,
											"end": 676,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 580,
											"end": 682,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 580,
											"end": 682,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 580,
											"end": 682,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 580,
											"end": 682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 688,
											"end": 868,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 688,
											"end": 868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 736,
											"end": 813,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 733,
											"end": 734,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 814,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 833,
											"end": 837,
											"name": "PUSH",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 830,
											"end": 831,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 823,
											"end": 838,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 857,
											"end": 861,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 854,
											"end": 855,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 847,
											"end": 862,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 957,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 979,
											"end": 983,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 957,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 957,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 957,
											"end": 984,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 957,
											"end": 984,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 949,
											"end": 955,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 945,
											"end": 985,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1075,
											"end": 1085,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1039,
											"end": 1049,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1070,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1033,
											"end": 1095,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1098,
											"end": 1116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1148,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1134,
											"end": 1136,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1149,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1155,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 874,
											"end": 1155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1195,
											"end": 1201,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1222,
											"end": 1242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1212,
											"end": 1242,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1212,
											"end": 1242,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1279,
											"end": 1283,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1271,
											"end": 1277,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1251,
											"end": 1284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 1362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1448,
											"end": 1466,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1440,
											"end": 1446,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1437,
											"end": 1467,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1470,
											"end": 1488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1530,
											"end": 1536,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1508,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1596,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1586,
											"end": 1590,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1582,
											"end": 1597,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1597,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1597,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1610,
											"end": 1756,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1610,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1713,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1705,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1700,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1684,
											"end": 1714,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1749,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1739,
											"end": 1745,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1734,
											"end": 1737,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1746,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1723,
											"end": 1750,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1610,
											"end": 1756,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1610,
											"end": 1756,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1610,
											"end": 1756,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1610,
											"end": 1756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 2187,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1762,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1840,
											"end": 1845,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1865,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 1881,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1881,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1881,
											"end": 1930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1881,
											"end": 1930,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 1881,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1865,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1865,
											"end": 1931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1865,
											"end": 1931,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 1865,
											"end": 1931,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1856,
											"end": 1931,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1856,
											"end": 1931,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1960,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1952,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1961,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1992,
											"end": 1996,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1985,
											"end": 1990,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 1997,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2030,
											"end": 2033,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2027,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2016,
											"end": 2019,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2012,
											"end": 2028,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2034,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2118,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2006,
											"end": 2118,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2037,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2037,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2037,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2037,
											"end": 2116,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2037,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2118,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2006,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2174,
											"end": 2180,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2172,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2164,
											"end": 2167,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2127,
											"end": 2181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2181,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2127,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1846,
											"end": 2187,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 2187,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 2187,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 2187,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 2187,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 2187,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 2187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2207,
											"end": 2547,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2207,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2268,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2315,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2305,
											"end": 2309,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2297,
											"end": 2303,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2310,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2289,
											"end": 2316,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2279,
											"end": 2401,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2320,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2320,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2320,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2320,
											"end": 2399,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2320,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2401,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2279,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2437,
											"end": 2443,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2424,
											"end": 2444,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2537,
											"end": 2540,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2529,
											"end": 2535,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2526,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2514,
											"end": 2520,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2510,
											"end": 2527,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2462,
											"end": 2541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2453,
											"end": 2541,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2453,
											"end": 2541,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2207,
											"end": 2547,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2207,
											"end": 2547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2207,
											"end": 2547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2207,
											"end": 2547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2207,
											"end": 2547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2553,
											"end": 2630,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2553,
											"end": 2630,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2597,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2624,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 2624,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 2624,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2553,
											"end": 2630,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2553,
											"end": 2630,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2553,
											"end": 2630,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2553,
											"end": 2630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2636,
											"end": 2758,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2636,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2727,
											"end": 2732,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2709,
											"end": 2733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2733,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2709,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2707,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2699,
											"end": 2734,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2689,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2689,
											"end": 2752,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2748,
											"end": 2749,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2745,
											"end": 2746,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2738,
											"end": 2750,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2689,
											"end": 2752,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2689,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2636,
											"end": 2758,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2636,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 2903,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2764,
											"end": 2903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2810,
											"end": 2815,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2848,
											"end": 2854,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2835,
											"end": 2855,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2826,
											"end": 2855,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2826,
											"end": 2855,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2864,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2891,
											"end": 2896,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2864,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2864,
											"end": 2897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2864,
											"end": 2897,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2864,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 2903,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 2903,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 2903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 2903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 2903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2909,
											"end": 3708,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2909,
											"end": 3708,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2996,
											"end": 3002,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3018,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3061,
											"end": 3063,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3049,
											"end": 3058,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3040,
											"end": 3047,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3036,
											"end": 3059,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3032,
											"end": 3064,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3029,
											"end": 3148,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3029,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 3029,
											"end": 3148,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3067,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3067,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3067,
											"end": 3146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3067,
											"end": 3146,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3067,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3029,
											"end": 3148,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 3029,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3216,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3204,
											"end": 3213,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3200,
											"end": 3217,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3218,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3263,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3237,
											"end": 3243,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3234,
											"end": 3264,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3231,
											"end": 3348,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3231,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 3231,
											"end": 3348,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3267,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 3267,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3267,
											"end": 3346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3267,
											"end": 3346,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 3267,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3231,
											"end": 3348,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 3231,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3372,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 3427,
											"end": 3434,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3424,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3407,
											"end": 3416,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3403,
											"end": 3425,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3372,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 3372,
											"end": 3435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3372,
											"end": 3435,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 3372,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3362,
											"end": 3435,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3362,
											"end": 3435,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3158,
											"end": 3445,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3486,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3510,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 3555,
											"end": 3562,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3546,
											"end": 3552,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3544,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3553,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3510,
											"end": 3563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3563,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 3510,
											"end": 3563,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3500,
											"end": 3563,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3500,
											"end": 3563,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3573,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3612,
											"end": 3614,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 3683,
											"end": 3690,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3674,
											"end": 3680,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3672,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3659,
											"end": 3681,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3638,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 3638,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3628,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3628,
											"end": 3691,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3583,
											"end": 3701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2909,
											"end": 3708,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2909,
											"end": 3708,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2909,
											"end": 3708,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2909,
											"end": 3708,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2909,
											"end": 3708,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2909,
											"end": 3708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 4188,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3714,
											"end": 4188,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3782,
											"end": 3788,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3790,
											"end": 3796,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3839,
											"end": 3841,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3827,
											"end": 3836,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3818,
											"end": 3825,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3814,
											"end": 3837,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3810,
											"end": 3842,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3807,
											"end": 3926,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3807,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 3807,
											"end": 3926,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3845,
											"end": 3924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 3845,
											"end": 3924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3845,
											"end": 3924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3845,
											"end": 3924,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 3845,
											"end": 3924,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3807,
											"end": 3926,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 3807,
											"end": 3926,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3965,
											"end": 3966,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3990,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 4035,
											"end": 4042,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4026,
											"end": 4032,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4015,
											"end": 4024,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4011,
											"end": 4033,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3990,
											"end": 4043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4043,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 3990,
											"end": 4043,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3980,
											"end": 4043,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3980,
											"end": 4043,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3936,
											"end": 4053,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4092,
											"end": 4094,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4118,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 4163,
											"end": 4170,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4160,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4152,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4161,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 4118,
											"end": 4171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4171,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 4118,
											"end": 4171,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4171,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4171,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4063,
											"end": 4181,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 4188,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 4188,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 4188,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 4188,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 4188,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 4188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4194,
											"end": 4293,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 4194,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4246,
											"end": 4252,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4280,
											"end": 4285,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4274,
											"end": 4286,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4264,
											"end": 4286,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4264,
											"end": 4286,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4194,
											"end": 4293,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4194,
											"end": 4293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4194,
											"end": 4293,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4194,
											"end": 4293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4299,
											"end": 4468,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 4299,
											"end": 4468,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4383,
											"end": 4394,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4417,
											"end": 4423,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4412,
											"end": 4415,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4405,
											"end": 4424,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4457,
											"end": 4461,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4452,
											"end": 4455,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4448,
											"end": 4462,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4433,
											"end": 4462,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4433,
											"end": 4462,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4299,
											"end": 4468,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4299,
											"end": 4468,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4299,
											"end": 4468,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4299,
											"end": 4468,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4299,
											"end": 4468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4474,
											"end": 4720,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 4474,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4555,
											"end": 4556,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4565,
											"end": 4678,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 4565,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4579,
											"end": 4585,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4576,
											"end": 4577,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4573,
											"end": 4586,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 4678,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 4565,
											"end": 4678,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4664,
											"end": 4665,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4659,
											"end": 4662,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4655,
											"end": 4666,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4649,
											"end": 4667,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4645,
											"end": 4646,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4640,
											"end": 4643,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4636,
											"end": 4647,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4601,
											"end": 4603,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4598,
											"end": 4599,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4594,
											"end": 4604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4589,
											"end": 4604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4589,
											"end": 4604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 4565,
											"end": 4678,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 4678,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 4565,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4712,
											"end": 4713,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4703,
											"end": 4709,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4698,
											"end": 4701,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4710,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4687,
											"end": 4714,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4536,
											"end": 4720,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4474,
											"end": 4720,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4474,
											"end": 4720,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4474,
											"end": 4720,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4474,
											"end": 4720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4726,
											"end": 5103,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 4726,
											"end": 5103,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4814,
											"end": 4817,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4842,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 4875,
											"end": 4880,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 4842,
											"end": 4881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4881,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 4842,
											"end": 4881,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4897,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 4961,
											"end": 4967,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4956,
											"end": 4959,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4897,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 4897,
											"end": 4968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4897,
											"end": 4968,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 4897,
											"end": 4968,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4890,
											"end": 4968,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4890,
											"end": 4968,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4977,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 5035,
											"end": 5041,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5030,
											"end": 5033,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5023,
											"end": 5027,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5016,
											"end": 5021,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5012,
											"end": 5028,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4977,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 4977,
											"end": 5042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4977,
											"end": 5042,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 4977,
											"end": 5042,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 5089,
											"end": 5095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5067,
											"end": 5096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5062,
											"end": 5065,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5097,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5051,
											"end": 5097,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5051,
											"end": 5097,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4818,
											"end": 5103,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4726,
											"end": 5103,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4726,
											"end": 5103,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4726,
											"end": 5103,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4726,
											"end": 5103,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4726,
											"end": 5103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5109,
											"end": 5422,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 5109,
											"end": 5422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5222,
											"end": 5226,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5260,
											"end": 5262,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5249,
											"end": 5258,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5245,
											"end": 5263,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5237,
											"end": 5263,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5237,
											"end": 5263,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5309,
											"end": 5318,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5303,
											"end": 5307,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5299,
											"end": 5319,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5295,
											"end": 5296,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5284,
											"end": 5293,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5280,
											"end": 5297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5273,
											"end": 5320,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5337,
											"end": 5415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 5410,
											"end": 5414,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5401,
											"end": 5407,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5337,
											"end": 5415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 5337,
											"end": 5415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5337,
											"end": 5415,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 5337,
											"end": 5415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5329,
											"end": 5415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5329,
											"end": 5415,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5109,
											"end": 5422,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5109,
											"end": 5422,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5109,
											"end": 5422,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5109,
											"end": 5422,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5109,
											"end": 5422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5428,
											"end": 5757,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 5428,
											"end": 5757,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5536,
											"end": 5538,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5524,
											"end": 5533,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5515,
											"end": 5522,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5511,
											"end": 5534,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5507,
											"end": 5539,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 5504,
											"end": 5623,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5504,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 5504,
											"end": 5623,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5542,
											"end": 5621,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 5542,
											"end": 5621,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 5542,
											"end": 5621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5542,
											"end": 5621,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 5542,
											"end": 5621,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5504,
											"end": 5623,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 5504,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5663,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5687,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 5732,
											"end": 5739,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5723,
											"end": 5729,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5712,
											"end": 5721,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5708,
											"end": 5730,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5687,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 5687,
											"end": 5740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5687,
											"end": 5740,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 5687,
											"end": 5740,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5677,
											"end": 5740,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5677,
											"end": 5740,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5750,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5428,
											"end": 5757,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5428,
											"end": 5757,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5428,
											"end": 5757,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5428,
											"end": 5757,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5428,
											"end": 5757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5763,
											"end": 5881,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 5763,
											"end": 5881,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5850,
											"end": 5874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5850,
											"end": 5874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 5850,
											"end": 5874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5850,
											"end": 5874,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 5850,
											"end": 5874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5845,
											"end": 5848,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5838,
											"end": 5875,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5763,
											"end": 5881,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5763,
											"end": 5881,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5763,
											"end": 5881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5887,
											"end": 6310,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 5887,
											"end": 6310,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6028,
											"end": 6032,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6066,
											"end": 6068,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6055,
											"end": 6064,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6051,
											"end": 6069,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6043,
											"end": 6069,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6043,
											"end": 6069,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6115,
											"end": 6124,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6109,
											"end": 6113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6105,
											"end": 6125,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6101,
											"end": 6102,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6090,
											"end": 6099,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6086,
											"end": 6103,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6079,
											"end": 6126,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6143,
											"end": 6221,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 6216,
											"end": 6220,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6207,
											"end": 6213,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6143,
											"end": 6221,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 6143,
											"end": 6221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6143,
											"end": 6221,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 6143,
											"end": 6221,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6135,
											"end": 6221,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6135,
											"end": 6221,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6231,
											"end": 6303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 6299,
											"end": 6301,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6284,
											"end": 6302,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6275,
											"end": 6281,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6231,
											"end": 6303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 6231,
											"end": 6303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6231,
											"end": 6303,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 6231,
											"end": 6303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5887,
											"end": 6310,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5887,
											"end": 6310,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5887,
											"end": 6310,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5887,
											"end": 6310,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5887,
											"end": 6310,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5887,
											"end": 6310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6316,
											"end": 6496,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 6316,
											"end": 6496,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6364,
											"end": 6441,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6361,
											"end": 6362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6354,
											"end": 6442,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6461,
											"end": 6465,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 6458,
											"end": 6459,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6451,
											"end": 6466,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6485,
											"end": 6489,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6482,
											"end": 6483,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6502,
											"end": 6822,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 6502,
											"end": 6822,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6546,
											"end": 6552,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6583,
											"end": 6584,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6577,
											"end": 6581,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6573,
											"end": 6585,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 6563,
											"end": 6585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6563,
											"end": 6585,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6630,
											"end": 6631,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6624,
											"end": 6628,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6620,
											"end": 6632,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6651,
											"end": 6669,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6641,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 6641,
											"end": 6722,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6707,
											"end": 6711,
											"name": "PUSH",
											"source": 4,
											"value": "7F"
										},
										{
											"begin": 6699,
											"end": 6705,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 6712,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6685,
											"end": 6712,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6685,
											"end": 6712,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6641,
											"end": 6722,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 6641,
											"end": 6722,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6769,
											"end": 6771,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6761,
											"end": 6767,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6758,
											"end": 6772,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6738,
											"end": 6756,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6735,
											"end": 6773,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6732,
											"end": 6816,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 6732,
											"end": 6816,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6788,
											"end": 6806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 6788,
											"end": 6806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 6788,
											"end": 6806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6788,
											"end": 6806,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 6788,
											"end": 6806,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6732,
											"end": 6816,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 6732,
											"end": 6816,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6553,
											"end": 6822,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6502,
											"end": 6822,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6502,
											"end": 6822,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6502,
											"end": 6822,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6502,
											"end": 6822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6828,
											"end": 6969,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 6828,
											"end": 6969,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6877,
											"end": 6881,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6900,
											"end": 6903,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6892,
											"end": 6903,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6892,
											"end": 6903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6923,
											"end": 6926,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6920,
											"end": 6921,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6913,
											"end": 6927,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6957,
											"end": 6961,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6954,
											"end": 6955,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6944,
											"end": 6962,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6936,
											"end": 6962,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6936,
											"end": 6962,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6828,
											"end": 6969,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6828,
											"end": 6969,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6828,
											"end": 6969,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6828,
											"end": 6969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6975,
											"end": 7068,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 6975,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7012,
											"end": 7018,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7059,
											"end": 7061,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7054,
											"end": 7056,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7047,
											"end": 7052,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7043,
											"end": 7057,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7039,
											"end": 7062,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 7029,
											"end": 7062,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7029,
											"end": 7062,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6975,
											"end": 7068,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6975,
											"end": 7068,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6975,
											"end": 7068,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6975,
											"end": 7068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7074,
											"end": 7181,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 7074,
											"end": 7181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7118,
											"end": 7126,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7168,
											"end": 7173,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7162,
											"end": 7166,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7158,
											"end": 7174,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7074,
											"end": 7181,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7074,
											"end": 7181,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7074,
											"end": 7181,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7074,
											"end": 7181,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7074,
											"end": 7181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7187,
											"end": 7580,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 7187,
											"end": 7580,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7256,
											"end": 7262,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7306,
											"end": 7307,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 7294,
											"end": 7304,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7290,
											"end": 7308,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 7329,
											"end": 7426,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 7359,
											"end": 7425,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7348,
											"end": 7357,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7329,
											"end": 7426,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 7329,
											"end": 7426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7329,
											"end": 7426,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 7329,
											"end": 7426,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7447,
											"end": 7486,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 7477,
											"end": 7485,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7466,
											"end": 7475,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7447,
											"end": 7486,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 7447,
											"end": 7486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7447,
											"end": 7486,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 7447,
											"end": 7486,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7486,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7486,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7523,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7515,
											"end": 7524,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 7508,
											"end": 7513,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7504,
											"end": 7525,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7495,
											"end": 7525,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7495,
											"end": 7525,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7568,
											"end": 7572,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7558,
											"end": 7566,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7554,
											"end": 7573,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7547,
											"end": 7552,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7544,
											"end": 7574,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 7534,
											"end": 7574,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7534,
											"end": 7574,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7263,
											"end": 7580,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7263,
											"end": 7580,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7187,
											"end": 7580,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7187,
											"end": 7580,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7187,
											"end": 7580,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7187,
											"end": 7580,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7187,
											"end": 7580,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7187,
											"end": 7580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7586,
											"end": 7646,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 7586,
											"end": 7646,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7614,
											"end": 7617,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7635,
											"end": 7640,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7586,
											"end": 7646,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7586,
											"end": 7646,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7586,
											"end": 7646,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7586,
											"end": 7646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7652,
											"end": 7794,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 7652,
											"end": 7794,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7711,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7735,
											"end": 7788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 7753,
											"end": 7787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 7762,
											"end": 7786,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 7780,
											"end": 7785,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7762,
											"end": 7786,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 7762,
											"end": 7786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7762,
											"end": 7786,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 7762,
											"end": 7786,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7753,
											"end": 7787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 7753,
											"end": 7787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7753,
											"end": 7787,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 7753,
											"end": 7787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7735,
											"end": 7788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 7735,
											"end": 7788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7735,
											"end": 7788,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 7735,
											"end": 7788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7722,
											"end": 7788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7722,
											"end": 7788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7652,
											"end": 7794,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7652,
											"end": 7794,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7652,
											"end": 7794,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7652,
											"end": 7794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7800,
											"end": 7875,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 7800,
											"end": 7875,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7843,
											"end": 7846,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7864,
											"end": 7869,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7857,
											"end": 7869,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7857,
											"end": 7869,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7800,
											"end": 7875,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7800,
											"end": 7875,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7800,
											"end": 7875,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7800,
											"end": 7875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7881,
											"end": 8150,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 7881,
											"end": 8150,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7991,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 8022,
											"end": 8029,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7991,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 7991,
											"end": 8030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7991,
											"end": 8030,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 7991,
											"end": 8030,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8052,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 8101,
											"end": 8142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 8125,
											"end": 8141,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8101,
											"end": 8142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 8101,
											"end": 8142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8101,
											"end": 8142,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 8101,
											"end": 8142,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8093,
											"end": 8099,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8086,
											"end": 8090,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8080,
											"end": 8091,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8052,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 8052,
											"end": 8143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8052,
											"end": 8143,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 8052,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8046,
											"end": 8050,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8039,
											"end": 8144,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7957,
											"end": 8150,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7881,
											"end": 8150,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7881,
											"end": 8150,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7881,
											"end": 8150,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7881,
											"end": 8150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8156,
											"end": 8229,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 8156,
											"end": 8229,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8201,
											"end": 8204,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8156,
											"end": 8229,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8156,
											"end": 8229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8235,
											"end": 8424,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 8235,
											"end": 8424,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8312,
											"end": 8344,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 8312,
											"end": 8344,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 8312,
											"end": 8344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8312,
											"end": 8344,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 8312,
											"end": 8344,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8353,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 8411,
											"end": 8417,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8403,
											"end": 8409,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8397,
											"end": 8401,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8353,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 8353,
											"end": 8418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8353,
											"end": 8418,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 8353,
											"end": 8418,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8288,
											"end": 8424,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8235,
											"end": 8424,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8235,
											"end": 8424,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8235,
											"end": 8424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8430,
											"end": 8616,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 8430,
											"end": 8616,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8490,
											"end": 8610,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 8490,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8507,
											"end": 8510,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8500,
											"end": 8505,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8497,
											"end": 8511,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8490,
											"end": 8610,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8490,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 8490,
											"end": 8610,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8561,
											"end": 8600,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 8598,
											"end": 8599,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8591,
											"end": 8596,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8561,
											"end": 8600,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 8561,
											"end": 8600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8561,
											"end": 8600,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 8561,
											"end": 8600,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8534,
											"end": 8535,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8527,
											"end": 8532,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8523,
											"end": 8536,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8514,
											"end": 8536,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8514,
											"end": 8536,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8490,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 8490,
											"end": 8610,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8490,
											"end": 8610,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 8490,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8430,
											"end": 8616,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8430,
											"end": 8616,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8430,
											"end": 8616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8622,
											"end": 9165,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 8622,
											"end": 9165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8723,
											"end": 8725,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 8718,
											"end": 8721,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8715,
											"end": 8726,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 8712,
											"end": 9158,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8712,
											"end": 9158,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 8712,
											"end": 9158,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8757,
											"end": 8795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 8789,
											"end": 8794,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8757,
											"end": 8795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 8757,
											"end": 8795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8757,
											"end": 8795,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 8757,
											"end": 8795,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8841,
											"end": 8870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 8859,
											"end": 8869,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8841,
											"end": 8870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 8841,
											"end": 8870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8841,
											"end": 8870,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 8841,
											"end": 8870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8831,
											"end": 8839,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8827,
											"end": 8871,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9024,
											"end": 9026,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9012,
											"end": 9022,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9009,
											"end": 9027,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 9006,
											"end": 9055,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9006,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 9006,
											"end": 9055,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9045,
											"end": 9053,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9030,
											"end": 9053,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9030,
											"end": 9053,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9006,
											"end": 9055,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 9006,
											"end": 9055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9068,
											"end": 9148,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 9124,
											"end": 9146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 9142,
											"end": 9145,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9124,
											"end": 9146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 9124,
											"end": 9146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9124,
											"end": 9146,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 9124,
											"end": 9146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9114,
											"end": 9122,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9110,
											"end": 9147,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9097,
											"end": 9108,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9068,
											"end": 9148,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 9068,
											"end": 9148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9068,
											"end": 9148,
											"name": "tag",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 9068,
											"end": 9148,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8727,
											"end": 9158,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8727,
											"end": 9158,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8712,
											"end": 9158,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 8712,
											"end": 9158,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8622,
											"end": 9165,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8622,
											"end": 9165,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8622,
											"end": 9165,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8622,
											"end": 9165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9171,
											"end": 9288,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 9171,
											"end": 9288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9225,
											"end": 9233,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9275,
											"end": 9280,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9269,
											"end": 9273,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9265,
											"end": 9281,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 9244,
											"end": 9281,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9244,
											"end": 9281,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9171,
											"end": 9288,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9171,
											"end": 9288,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9171,
											"end": 9288,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9171,
											"end": 9288,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9171,
											"end": 9288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9294,
											"end": 9463,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 9294,
											"end": 9463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9338,
											"end": 9344,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9371,
											"end": 9422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 9419,
											"end": 9420,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9415,
											"end": 9421,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 9407,
											"end": 9412,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9404,
											"end": 9405,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 9400,
											"end": 9413,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9371,
											"end": 9422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 9371,
											"end": 9422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9371,
											"end": 9422,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 9371,
											"end": 9422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9367,
											"end": 9423,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9456,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9446,
											"end": 9450,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9442,
											"end": 9457,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9432,
											"end": 9457,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9432,
											"end": 9457,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9345,
											"end": 9463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9294,
											"end": 9463,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9294,
											"end": 9463,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9294,
											"end": 9463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9294,
											"end": 9463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9294,
											"end": 9463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9468,
											"end": 9763,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 9468,
											"end": 9763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9544,
											"end": 9548,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9690,
											"end": 9719,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 9715,
											"end": 9718,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9709,
											"end": 9713,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9690,
											"end": 9719,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 9690,
											"end": 9719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9690,
											"end": 9719,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 9690,
											"end": 9719,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9682,
											"end": 9719,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9682,
											"end": 9719,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9752,
											"end": 9755,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9749,
											"end": 9750,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 9745,
											"end": 9756,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9739,
											"end": 9743,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9736,
											"end": 9757,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9757,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9757,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9468,
											"end": 9763,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9468,
											"end": 9763,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9468,
											"end": 9763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9468,
											"end": 9763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9468,
											"end": 9763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9768,
											"end": 11163,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 9768,
											"end": 11163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9885,
											"end": 9922,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 9918,
											"end": 9921,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9885,
											"end": 9922,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 9885,
											"end": 9922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9885,
											"end": 9922,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 9885,
											"end": 9922,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9979,
											"end": 9985,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9976,
											"end": 10006,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 9973,
											"end": 10029,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9973,
											"end": 10029,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 9973,
											"end": 10029,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10009,
											"end": 10027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 10009,
											"end": 10027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 10009,
											"end": 10027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10009,
											"end": 10027,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 10009,
											"end": 10027,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9973,
											"end": 10029,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 9973,
											"end": 10029,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10053,
											"end": 10091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 10085,
											"end": 10089,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10079,
											"end": 10090,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10053,
											"end": 10091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 10053,
											"end": 10091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10053,
											"end": 10091,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 10053,
											"end": 10091,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10138,
											"end": 10205,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 10198,
											"end": 10204,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10190,
											"end": 10196,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10184,
											"end": 10188,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10138,
											"end": 10205,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 10138,
											"end": 10205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10138,
											"end": 10205,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 10138,
											"end": 10205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10232,
											"end": 10233,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10256,
											"end": 10260,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10243,
											"end": 10260,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10243,
											"end": 10260,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10288,
											"end": 10290,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 10280,
											"end": 10286,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10277,
											"end": 10291,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 10305,
											"end": 10306,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10300,
											"end": 10918,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10300,
											"end": 10918,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10300,
											"end": 10918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 10300,
											"end": 10918,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10962,
											"end": 10963,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10979,
											"end": 10985,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11053,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 10976,
											"end": 11053,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11028,
											"end": 11037,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11023,
											"end": 11026,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 11019,
											"end": 11038,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11013,
											"end": 11039,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11004,
											"end": 11039,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11004,
											"end": 11039,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11053,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 10976,
											"end": 11053,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11079,
											"end": 11146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 11139,
											"end": 11145,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11132,
											"end": 11137,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11079,
											"end": 11146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 11079,
											"end": 11146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11079,
											"end": 11146,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 11079,
											"end": 11146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11073,
											"end": 11077,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 11066,
											"end": 11147,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10935,
											"end": 11157,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10270,
											"end": 11157,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 10270,
											"end": 11157,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10300,
											"end": 10918,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 10300,
											"end": 10918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10352,
											"end": 10356,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 10348,
											"end": 10357,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 10340,
											"end": 10346,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10336,
											"end": 10358,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10386,
											"end": 10423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 10418,
											"end": 10422,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10386,
											"end": 10423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 10386,
											"end": 10423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10386,
											"end": 10423,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 10386,
											"end": 10423,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10445,
											"end": 10446,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10459,
											"end": 10667,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 10459,
											"end": 10667,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10473,
											"end": 10480,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10470,
											"end": 10471,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10467,
											"end": 10481,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10459,
											"end": 10667,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10459,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 10459,
											"end": 10667,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10552,
											"end": 10561,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10547,
											"end": 10550,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 10543,
											"end": 10562,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10537,
											"end": 10563,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10529,
											"end": 10535,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10522,
											"end": 10564,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10603,
											"end": 10604,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10595,
											"end": 10601,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10591,
											"end": 10605,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10581,
											"end": 10605,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10581,
											"end": 10605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10650,
											"end": 10652,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10639,
											"end": 10648,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10635,
											"end": 10653,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10622,
											"end": 10653,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 10622,
											"end": 10653,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10496,
											"end": 10500,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10493,
											"end": 10494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10489,
											"end": 10501,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10484,
											"end": 10501,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10484,
											"end": 10501,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10459,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 10459,
											"end": 10667,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10459,
											"end": 10667,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 10459,
											"end": 10667,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10695,
											"end": 10701,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10686,
											"end": 10693,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10683,
											"end": 10702,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10680,
											"end": 10859,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10680,
											"end": 10859,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 10680,
											"end": 10859,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10753,
											"end": 10762,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10748,
											"end": 10751,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 10744,
											"end": 10763,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10738,
											"end": 10764,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10796,
											"end": 10844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 10838,
											"end": 10842,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 10830,
											"end": 10836,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 10826,
											"end": 10843,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10815,
											"end": 10824,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10796,
											"end": 10844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 10796,
											"end": 10844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10796,
											"end": 10844,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 10796,
											"end": 10844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10788,
											"end": 10794,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10781,
											"end": 10845,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10703,
											"end": 10859,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10680,
											"end": 10859,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 10680,
											"end": 10859,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10905,
											"end": 10906,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10901,
											"end": 10902,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 10893,
											"end": 10899,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 10889,
											"end": 10903,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 10885,
											"end": 10907,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10879,
											"end": 10883,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 10872,
											"end": 10908,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10307,
											"end": 10918,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10307,
											"end": 10918,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10307,
											"end": 10918,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10270,
											"end": 11157,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 10270,
											"end": 11157,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10270,
											"end": 11157,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9860,
											"end": 11163,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9860,
											"end": 11163,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9860,
											"end": 11163,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9768,
											"end": 11163,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9768,
											"end": 11163,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9768,
											"end": 11163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11169,
											"end": 11349,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 11169,
											"end": 11349,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11217,
											"end": 11294,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11214,
											"end": 11215,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11207,
											"end": 11295,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11314,
											"end": 11318,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 11311,
											"end": 11312,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11304,
											"end": 11319,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11338,
											"end": 11342,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 11335,
											"end": 11336,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11328,
											"end": 11343,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11355,
											"end": 11588,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 11355,
											"end": 11588,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11394,
											"end": 11397,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11417,
											"end": 11441,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 11435,
											"end": 11440,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11417,
											"end": 11441,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 11417,
											"end": 11441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11417,
											"end": 11441,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 11417,
											"end": 11441,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11408,
											"end": 11441,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11408,
											"end": 11441,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11463,
											"end": 11529,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11456,
											"end": 11461,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11453,
											"end": 11530,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11450,
											"end": 11553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 11450,
											"end": 11553,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11533,
											"end": 11551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 11533,
											"end": 11551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 11533,
											"end": 11551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11533,
											"end": 11551,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 11533,
											"end": 11551,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11450,
											"end": 11553,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 11450,
											"end": 11553,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11580,
											"end": 11581,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11573,
											"end": 11578,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11569,
											"end": 11582,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11562,
											"end": 11582,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11562,
											"end": 11582,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11355,
											"end": 11588,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11355,
											"end": 11588,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11355,
											"end": 11588,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11355,
											"end": 11588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11594,
											"end": 11788,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 11594,
											"end": 11788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11763,
											"end": 11781,
											"name": "PUSH",
											"source": 4,
											"value": "5469636B65742070726963652069732000000000000000000000000000000000"
										},
										{
											"begin": 11758,
											"end": 11761,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11751,
											"end": 11782,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11594,
											"end": 11788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11594,
											"end": 11788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11794,
											"end": 11942,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 11794,
											"end": 11942,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11896,
											"end": 11907,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11933,
											"end": 11936,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11918,
											"end": 11936,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11918,
											"end": 11936,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11794,
											"end": 11942,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11794,
											"end": 11942,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11794,
											"end": 11942,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11794,
											"end": 11942,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11794,
											"end": 11942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11948,
											"end": 12338,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 11948,
											"end": 12338,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12054,
											"end": 12057,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12082,
											"end": 12121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 12115,
											"end": 12120,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12082,
											"end": 12121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 12082,
											"end": 12121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12082,
											"end": 12121,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 12082,
											"end": 12121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12137,
											"end": 12226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 12219,
											"end": 12225,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12214,
											"end": 12217,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 12137,
											"end": 12226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 12137,
											"end": 12226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12137,
											"end": 12226,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 12137,
											"end": 12226,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12130,
											"end": 12226,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 12130,
											"end": 12226,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12235,
											"end": 12300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 12293,
											"end": 12299,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12288,
											"end": 12291,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 12281,
											"end": 12285,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12274,
											"end": 12279,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 12270,
											"end": 12286,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12235,
											"end": 12300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 12235,
											"end": 12300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12235,
											"end": 12300,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 12235,
											"end": 12300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12325,
											"end": 12331,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12320,
											"end": 12323,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12316,
											"end": 12332,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12309,
											"end": 12332,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12309,
											"end": 12332,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12058,
											"end": 12338,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11948,
											"end": 12338,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11948,
											"end": 12338,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11948,
											"end": 12338,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11948,
											"end": 12338,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11948,
											"end": 12338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12344,
											"end": 12886,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 12344,
											"end": 12886,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12567,
											"end": 12570,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12582,
											"end": 12720,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 12716,
											"end": 12719,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12582,
											"end": 12720,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 12582,
											"end": 12720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12582,
											"end": 12720,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 12582,
											"end": 12720,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12745,
											"end": 12747,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 12740,
											"end": 12743,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12736,
											"end": 12748,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12729,
											"end": 12748,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12729,
											"end": 12748,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12765,
											"end": 12860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 12856,
											"end": 12859,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12847,
											"end": 12853,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12765,
											"end": 12860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 12765,
											"end": 12860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12765,
											"end": 12860,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 12765,
											"end": 12860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12758,
											"end": 12860,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12758,
											"end": 12860,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12877,
											"end": 12880,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12870,
											"end": 12880,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12870,
											"end": 12880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12344,
											"end": 12886,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12344,
											"end": 12886,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12344,
											"end": 12886,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12344,
											"end": 12886,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12344,
											"end": 12886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12892,
											"end": 13072,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 12892,
											"end": 13072,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12940,
											"end": 13017,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12937,
											"end": 12938,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12930,
											"end": 13018,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13037,
											"end": 13041,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 13034,
											"end": 13035,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13027,
											"end": 13042,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13061,
											"end": 13065,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 13058,
											"end": 13059,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13051,
											"end": 13066,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"event.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BuyTicket(uint256,uint256)": "a8445a1e",
							"Checkevent(uint256)": "dc8903a8",
							"CreateEvent(string,uint256,uint256)": "163f41af"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"}],\"name\":\"BuyTicket\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"Checkevent\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"CreateEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"event.sol\":\"Event_Org\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"event.sol\":{\"keccak256\":\"0x1fa5bec3c6112db6ae8d33cdc8eb620c49d43e3ce8c3f948df69d2630791c1e5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://111048f4adaeb0b7081eebff93b9df9ac4d42da5223c9d58c94bcee5c8aeb27c\",\"dweb:/ipfs/QmcxKK9cGFSvKETLfV1fqtagZcHjweuGdk8cdXAyCTAryC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1204,
								"contract": "event.sol:Event_Org",
								"label": "manager",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1222,
								"contract": "event.sol:Event_Org",
								"label": "id",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1227,
								"contract": "event.sol:Event_Org",
								"label": "noname",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_struct(Event)1220_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_struct(Event)1220_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Event_Org.Event)",
								"numberOfBytes": "32",
								"value": "t_struct(Event)1220_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Event)1220_storage": {
								"encoding": "inplace",
								"label": "struct Event_Org.Event",
								"members": [
									{
										"astId": 1215,
										"contract": "event.sol:Event_Org",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 1217,
										"contract": "event.sol:Event_Org",
										"label": "date",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1219,
										"contract": "event.sol:Event_Org",
										"label": "price",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> event.sol:33:20:\n   |\n33 | function BuyTicket(uint id , uint cash) public view returns (string memory) {\n   |                    ^^^^^^^\nNote: The shadowed declaration is here:\n  --> event.sol:17:1:\n   |\n17 | uint id;\n   | ^^^^^^^\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 301,
						"file": "event.sol",
						"message": "The shadowed declaration is here:",
						"start": 294
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 662,
					"file": "event.sol",
					"start": 655
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n  --> event.sol:33:62:\n   |\n33 | function BuyTicket(uint id , uint cash) public view returns (string memory) {\n   |                                                              ^^^^^^^^^^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 710,
					"file": "event.sol",
					"start": 697
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1094
						],
						"SignedMath": [
							1199
						],
						"Strings": [
							228
						]
					},
					"id": 229,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 229,
							"sourceUnit": 1095,
							"src": "126:25:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 229,
							"sourceUnit": 1200,
							"src": "152:31:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "185:34:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 228,
							"linearizedBaseContracts": [
								228
							],
							"name": "Strings",
							"nameLocation": "228:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 7,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "267:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 228,
									"src": "242:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 5,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "278:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 10,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "325:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 228,
									"src": "302:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 8,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "302:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 9,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "343:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "518:625:0",
										"statements": [
											{
												"id": 56,
												"nodeType": "UncheckedBlock",
												"src": "528:609:0",
												"statements": [
													{
														"assignments": [
															19
														],
														"declarations": [
															{
																"constant": false,
																"id": 19,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "560:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 56,
																"src": "552:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 18,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "552:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 26,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 22,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 13,
																		"src": "580:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 20,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1094,
																		"src": "569:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1094_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 21,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "574:5:0",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 931,
																	"src": "569:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "569:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "589:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "569:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "552:38:0"
													},
													{
														"assignments": [
															28
														],
														"declarations": [
															{
																"constant": false,
																"id": 28,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "618:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 56,
																"src": "604:20:0",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 27,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "604:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 33,
														"initialValue": {
															"arguments": [
																{
																	"id": 31,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "638:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "627:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 29,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "631:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "627:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "604:41:0"
													},
													{
														"assignments": [
															35
														],
														"declarations": [
															{
																"constant": false,
																"id": 35,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "667:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 56,
																"src": "659:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 34,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "659:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 36,
														"nodeType": "VariableDeclarationStatement",
														"src": "659:11:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "740:67:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "758:35:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "781:2:0",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "785:6:0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "777:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "777:15:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "765:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "765:28:0"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "758:3:0"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 28,
																"isOffset": false,
																"isSlot": false,
																"src": "769:6:0",
																"valueSize": 1
															},
															{
																"declaration": 19,
																"isOffset": false,
																"isSlot": false,
																"src": "785:6:0",
																"valueSize": 1
															},
															{
																"declaration": 35,
																"isOffset": false,
																"isSlot": false,
																"src": "758:3:0",
																"valueSize": 1
															}
														],
														"id": 37,
														"nodeType": "InlineAssembly",
														"src": "731:76:0"
													},
													{
														"body": {
															"id": 52,
															"nodeType": "Block",
															"src": "833:267:0",
															"statements": [
																{
																	"expression": {
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "851:5:0",
																		"subExpression": {
																			"id": 39,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 35,
																			"src": "851:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 41,
																	"nodeType": "ExpressionStatement",
																	"src": "851:5:0"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "934:84:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "964:3:0"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "978:5:0"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "985:2:0",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "974:3:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "974:14:0"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "990:8:0"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "969:4:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "969:30:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "956:7:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "956:44:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "956:44:0"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "paris",
																	"externalReferences": [
																		{
																			"declaration": 7,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "990:8:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 35,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "964:3:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 13,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "978:5:0",
																			"valueSize": 1
																		}
																	],
																	"id": 42,
																	"nodeType": "InlineAssembly",
																	"src": "925:93:0"
																},
																{
																	"expression": {
																		"id": 45,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 43,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 13,
																			"src": "1035:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 44,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1044:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1035:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 46,
																	"nodeType": "ExpressionStatement",
																	"src": "1035:11:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 47,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 13,
																			"src": "1068:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 48,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1077:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1068:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 51,
																	"nodeType": "IfStatement",
																	"src": "1064:21:0",
																	"trueBody": {
																		"id": 50,
																		"nodeType": "Break",
																		"src": "1080:5:0"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "827:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 53,
														"nodeType": "WhileStatement",
														"src": "820:280:0"
													},
													{
														"expression": {
															"id": 54,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "1120:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 17,
														"id": 55,
														"nodeType": "Return",
														"src": "1113:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "352:90:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 58,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "456:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 12,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:15:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "503:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 15,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:15:0"
									},
									"scope": 228,
									"src": "447:696:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "1313:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 70,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 61,
																			"src": "1354:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 71,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1362:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1354:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 74,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1372:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 75,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1354:20:0",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 73,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1366:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 79,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 61,
																					"src": "1400:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 77,
																					"name": "SignedMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1199,
																					"src": "1385:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMath_$1199_$",
																						"typeString": "type(library SignedMath)"
																					}
																				},
																				"id": 78,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1396:3:0",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1198,
																				"src": "1385:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 80,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1385:21:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 76,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			58,
																			86
																		],
																		"referencedDeclaration": 58,
																		"src": "1376:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 81,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1376:31:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 68,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1337:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 69,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1341:12:0",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1337:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1337:71:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1330:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 66,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1330:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1330:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 65,
												"id": 84,
												"nodeType": "Return",
												"src": "1323:86:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1149:89:0",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 86,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1252:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1268:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "1261:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 60,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:14:0"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "1298:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 63,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1298:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:15:0"
									},
									"scope": 228,
									"src": "1243:173:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "1595:100:0",
										"statements": [
											{
												"id": 104,
												"nodeType": "UncheckedBlock",
												"src": "1605:84:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 95,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 89,
																	"src": "1648:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 98,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 89,
																				"src": "1667:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 96,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1094,
																				"src": "1655:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1094_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 97,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1660:6:0",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1054,
																			"src": "1655:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 99,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1655:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1676:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1655:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 94,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	106,
																	182,
																	202
																],
																"referencedDeclaration": 182,
																"src": "1636:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1636:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 93,
														"id": 103,
														"nodeType": "Return",
														"src": "1629:49:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 87,
										"nodeType": "StructuredDocumentation",
										"src": "1422:94:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1530:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1550:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1542:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1541:15:0"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1580:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 91,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1580:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:15:0"
									},
									"scope": 228,
									"src": "1521:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "1908:347:0",
										"statements": [
											{
												"assignments": [
													117
												],
												"declarations": [
													{
														"constant": false,
														"id": 117,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1931:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 181,
														"src": "1918:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 116,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1918:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 126,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1950:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 121,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "1954:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1950:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1963:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1950:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1940:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 118,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1944:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1940:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1918:47:0"
											},
											{
												"expression": {
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 127,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "1975:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 129,
														"indexExpression": {
															"hexValue": "30",
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1982:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1975:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 130,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1987:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1975:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "1975:15:0"
											},
											{
												"expression": {
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 133,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "2000:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 135,
														"indexExpression": {
															"hexValue": "31",
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2007:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2000:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 136,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2012:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2000:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "2000:15:0"
											},
											{
												"body": {
													"id": 167,
													"nodeType": "Block",
													"src": "2070:83:0",
													"statements": [
														{
															"expression": {
																"id": 161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 153,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 117,
																		"src": "2084:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 155,
																	"indexExpression": {
																		"id": 154,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 140,
																		"src": "2091:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2084:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 156,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 7,
																		"src": "2096:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 160,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 157,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 109,
																			"src": "2105:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2113:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2105:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2096:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2084:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 162,
															"nodeType": "ExpressionStatement",
															"src": "2084:33:0"
														},
														{
															"expression": {
																"id": 165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 163,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 109,
																	"src": "2131:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2141:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2131:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 166,
															"nodeType": "ExpressionStatement",
															"src": "2131:11:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 147,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "2058:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2062:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2058:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 168,
												"initializationExpression": {
													"assignments": [
														140
													],
													"declarations": [
														{
															"constant": false,
															"id": 140,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2038:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 168,
															"src": "2030:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 139,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2030:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 146,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 141,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2042:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 142,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "2046:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2042:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2055:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2042:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2030:26:0"
												},
												"loopExpression": {
													"expression": {
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2065:3:0",
														"subExpression": {
															"id": 150,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "2067:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 152,
													"nodeType": "ExpressionStatement",
													"src": "2065:3:0"
												},
												"nodeType": "ForStatement",
												"src": "2025:128:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 170,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2170:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 171,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2179:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2170:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2182:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 169,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2162:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2162:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "2162:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 178,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "2241:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 177,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2234:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 176,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2234:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2234:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 115,
												"id": 180,
												"nodeType": "Return",
												"src": "2227:21:0"
											}
										]
									},
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "1701:112:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1827:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1847:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1839:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1893:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 113,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1893:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:15:0"
									},
									"scope": 228,
									"src": "1818:437:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "2480:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 195,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 185,
																			"src": "2525:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2517:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 193,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2517:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2517:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2509:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 191,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2509:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2509:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 198,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "2533:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 190,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															106,
															182,
															202
														],
														"referencedDeclaration": 182,
														"src": "2497:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2497:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 189,
												"id": 200,
												"nodeType": "Return",
												"src": "2490:59:0"
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "2261:141:0",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2416:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2436:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "2428:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2428:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2427:14:0"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 187,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2465:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"scope": 228,
									"src": "2407:149:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "2711:66:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 215,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 205,
																		"src": "2744:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2738:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 213,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2738:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2738:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 212,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2728:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 221,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 207,
																		"src": "2767:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2761:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 219,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2761:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2761:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 218,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2751:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2751:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2728:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 211,
												"id": 225,
												"nodeType": "Return",
												"src": "2721:49:0"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "2562:66:0",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2642:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2662:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2648:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 204,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2648:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2679:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2665:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 206,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2665:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2647:34:0"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2705:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2705:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2704:6:0"
									},
									"scope": 228,
									"src": "2633:144:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 229,
							"src": "220:2559:0",
							"usedErrors": []
						}
					],
					"src": "101:2679:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1094
						]
					},
					"id": 1095,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 230,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 231,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:1",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1094,
							"linearizedBaseContracts": [
								1094
							],
							"name": "Math",
							"nameLocation": "210:4:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 235,
									"members": [
										{
											"id": 232,
											"name": "Down",
											"nameLocation": "245:4:1",
											"nodeType": "EnumValue",
											"src": "245:4:1"
										},
										{
											"id": 233,
											"name": "Up",
											"nameLocation": "287:2:1",
											"nodeType": "EnumValue",
											"src": "287:2:1"
										},
										{
											"id": 234,
											"name": "Zero",
											"nameLocation": "318:4:1",
											"nodeType": "EnumValue",
											"src": "318:4:1"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:1",
									"nodeType": "EnumDefinition",
									"src": "221:122:1"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "480:37:1",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 245,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "497:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 246,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "501:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 249,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "509:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:1",
													"trueExpression": {
														"id": 248,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 238,
														"src": "505:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 244,
												"id": 251,
												"nodeType": "Return",
												"src": "490:20:1"
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:1",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "426:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "437:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:1"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "471:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:1"
									},
									"scope": 1094,
									"src": "413:104:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "655:37:1",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 263,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "672:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 264,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "676:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 267,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "684:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:1",
													"trueExpression": {
														"id": 266,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "680:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 262,
												"id": 269,
												"nodeType": "Return",
												"src": "665:20:1"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:1",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "601:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "612:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:1"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "646:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:1"
									},
									"scope": 1094,
									"src": "588:104:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "876:82:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 281,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 274,
																	"src": "931:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 282,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "935:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 284,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 285,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 274,
																		"src": "941:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 286,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 276,
																		"src": "945:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 288,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 280,
												"id": 292,
												"nodeType": "Return",
												"src": "923:28:1"
											}
										]
									},
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:1",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "822:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "833:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:1"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "867:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:1"
									},
									"scope": 1094,
									"src": "805:153:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "1228:123:1",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 304,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "1316:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 308,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 297,
																			"src": "1330:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 311,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 312,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 299,
																"src": "1339:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:1",
													"trueExpression": {
														"hexValue": "30",
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 303,
												"id": 317,
												"nodeType": "Return",
												"src": "1309:35:1"
											}
										]
									},
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:1",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "1174:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "1185:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:1"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "1219:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:1"
									},
									"scope": 1094,
									"src": "1157:194:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "1765:4115:1",
										"statements": [
											{
												"id": 440,
												"nodeType": "UncheckedBlock",
												"src": "1775:4099:1",
												"statements": [
													{
														"assignments": [
															332
														],
														"declarations": [
															{
																"constant": false,
																"id": 332,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2104:5:1",
																"nodeType": "VariableDeclaration",
																"scope": 440,
																"src": "2096:13:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 331,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2096:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 333,
														"nodeType": "VariableDeclarationStatement",
														"src": "2096:13:1"
													},
													{
														"assignments": [
															335
														],
														"declarations": [
															{
																"constant": false,
																"id": 335,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2176:5:1",
																"nodeType": "VariableDeclaration",
																"scope": 440,
																"src": "2168:13:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 334,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2168:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 336,
														"nodeType": "VariableDeclarationStatement",
														"src": "2168:13:1"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2248:157:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2266:30:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2283:1:1"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2286:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2293:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2289:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2289:6:1"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2276:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2276:20:1"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2270:2:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2313:18:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2326:1:1"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2329:1:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2322:9:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2313:5:1"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2348:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2365:2:1"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2369:5:1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2361:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2361:14:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2380:2:1"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2384:5:1"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2377:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2377:13:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2357:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2357:34:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2348:5:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 332,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:5:1",
																"valueSize": 1
															},
															{
																"declaration": 332,
																"isOffset": false,
																"isSlot": false,
																"src": "2369:5:1",
																"valueSize": 1
															},
															{
																"declaration": 332,
																"isOffset": false,
																"isSlot": false,
																"src": "2384:5:1",
																"valueSize": 1
															},
															{
																"declaration": 335,
																"isOffset": false,
																"isSlot": false,
																"src": "2348:5:1",
																"valueSize": 1
															},
															{
																"declaration": 322,
																"isOffset": false,
																"isSlot": false,
																"src": "2283:1:1",
																"valueSize": 1
															},
															{
																"declaration": 322,
																"isOffset": false,
																"isSlot": false,
																"src": "2326:1:1",
																"valueSize": 1
															},
															{
																"declaration": 324,
																"isOffset": false,
																"isSlot": false,
																"src": "2286:1:1",
																"valueSize": 1
															},
															{
																"declaration": 324,
																"isOffset": false,
																"isSlot": false,
																"src": "2329:1:1",
																"valueSize": 1
															}
														],
														"id": 337,
														"nodeType": "InlineAssembly",
														"src": "2239:166:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 338,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "2486:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2486:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 346,
														"nodeType": "IfStatement",
														"src": "2482:368:1",
														"trueBody": {
															"id": 345,
															"nodeType": "Block",
															"src": "2498:352:1",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 341,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 332,
																			"src": "2816:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 342,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 326,
																			"src": "2824:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2816:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 330,
																	"id": 344,
																	"nodeType": "Return",
																	"src": "2809:26:1"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 348,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 326,
																		"src": "2960:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 349,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 335,
																		"src": "2974:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2960:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2981:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 347,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2952:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2952:53:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 353,
														"nodeType": "ExpressionStatement",
														"src": "2952:53:1"
													},
													{
														"assignments": [
															355
														],
														"declarations": [
															{
																"constant": false,
																"id": 355,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3269:9:1",
																"nodeType": "VariableDeclaration",
																"scope": 440,
																"src": "3261:17:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 354,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3261:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 356,
														"nodeType": "VariableDeclarationStatement",
														"src": "3261:17:1"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3301:291:1",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3370:38:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3390:1:1"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3393:1:1"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3396:11:1"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3383:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3383:25:1"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3370:9:1"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3490:41:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3503:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3513:9:1"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3524:5:1"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3510:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3510:20:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3499:32:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3490:5:1"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3548:30:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3561:5:1"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3568:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3557:21:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3548:5:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 326,
																"isOffset": false,
																"isSlot": false,
																"src": "3396:11:1",
																"valueSize": 1
															},
															{
																"declaration": 332,
																"isOffset": false,
																"isSlot": false,
																"src": "3524:5:1",
																"valueSize": 1
															},
															{
																"declaration": 332,
																"isOffset": false,
																"isSlot": false,
																"src": "3548:5:1",
																"valueSize": 1
															},
															{
																"declaration": 332,
																"isOffset": false,
																"isSlot": false,
																"src": "3561:5:1",
																"valueSize": 1
															},
															{
																"declaration": 335,
																"isOffset": false,
																"isSlot": false,
																"src": "3490:5:1",
																"valueSize": 1
															},
															{
																"declaration": 335,
																"isOffset": false,
																"isSlot": false,
																"src": "3503:5:1",
																"valueSize": 1
															},
															{
																"declaration": 355,
																"isOffset": false,
																"isSlot": false,
																"src": "3370:9:1",
																"valueSize": 1
															},
															{
																"declaration": 355,
																"isOffset": false,
																"isSlot": false,
																"src": "3513:9:1",
																"valueSize": 1
															},
															{
																"declaration": 355,
																"isOffset": false,
																"isSlot": false,
																"src": "3568:9:1",
																"valueSize": 1
															},
															{
																"declaration": 322,
																"isOffset": false,
																"isSlot": false,
																"src": "3390:1:1",
																"valueSize": 1
															},
															{
																"declaration": 324,
																"isOffset": false,
																"isSlot": false,
																"src": "3393:1:1",
																"valueSize": 1
															}
														],
														"id": 357,
														"nodeType": "InlineAssembly",
														"src": "3292:300:1"
													},
													{
														"assignments": [
															359
														],
														"declarations": [
															{
																"constant": false,
																"id": 359,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3907:4:1",
																"nodeType": "VariableDeclaration",
																"scope": 440,
																"src": "3899:12:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 358,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3899:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 367,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 360,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "3914:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 364,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 362,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3929:12:1",
																			"subExpression": {
																				"id": 361,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 326,
																				"src": "3930:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 363,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3944:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3929:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 365,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3928:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3914:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3899:47:1"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3969:362:1",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "4034:37:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "4053:11:1"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4066:4:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4049:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4049:22:1"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "4034:11:1"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4138:25:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "4151:5:1"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4158:4:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4147:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4147:16:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "4138:5:1"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4278:39:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4298:1:1",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4301:4:1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4294:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4294:12:1"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4308:4:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4290:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4290:23:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4315:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4286:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4286:31:1"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "4278:4:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 326,
																"isOffset": false,
																"isSlot": false,
																"src": "4034:11:1",
																"valueSize": 1
															},
															{
																"declaration": 326,
																"isOffset": false,
																"isSlot": false,
																"src": "4053:11:1",
																"valueSize": 1
															},
															{
																"declaration": 332,
																"isOffset": false,
																"isSlot": false,
																"src": "4138:5:1",
																"valueSize": 1
															},
															{
																"declaration": 332,
																"isOffset": false,
																"isSlot": false,
																"src": "4151:5:1",
																"valueSize": 1
															},
															{
																"declaration": 359,
																"isOffset": false,
																"isSlot": false,
																"src": "4066:4:1",
																"valueSize": 1
															},
															{
																"declaration": 359,
																"isOffset": false,
																"isSlot": false,
																"src": "4158:4:1",
																"valueSize": 1
															},
															{
																"declaration": 359,
																"isOffset": false,
																"isSlot": false,
																"src": "4278:4:1",
																"valueSize": 1
															},
															{
																"declaration": 359,
																"isOffset": false,
																"isSlot": false,
																"src": "4301:4:1",
																"valueSize": 1
															},
															{
																"declaration": 359,
																"isOffset": false,
																"isSlot": false,
																"src": "4308:4:1",
																"valueSize": 1
															}
														],
														"id": 368,
														"nodeType": "InlineAssembly",
														"src": "3960:371:1"
													},
													{
														"expression": {
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 369,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "4397:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 370,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "4406:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 371,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "4414:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4406:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4397:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 374,
														"nodeType": "ExpressionStatement",
														"src": "4397:21:1"
													},
													{
														"assignments": [
															376
														],
														"declarations": [
															{
																"constant": false,
																"id": 376,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4744:7:1",
																"nodeType": "VariableDeclaration",
																"scope": 440,
																"src": "4736:15:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 375,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4736:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 383,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4755:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 378,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 326,
																			"src": "4759:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4755:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 380,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4754:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 381,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4774:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4754:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4736:39:1"
													},
													{
														"expression": {
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 384,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 376,
																"src": "4992:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5003:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 386,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 326,
																		"src": "5007:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 387,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "5021:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5007:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5003:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4992:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 391,
														"nodeType": "ExpressionStatement",
														"src": "4992:36:1"
													},
													{
														"expression": {
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 392,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 376,
																"src": "5061:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5072:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 394,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 326,
																		"src": "5076:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 395,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "5090:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5076:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5072:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5061:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 399,
														"nodeType": "ExpressionStatement",
														"src": "5061:36:1"
													},
													{
														"expression": {
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 400,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 376,
																"src": "5131:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5142:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 402,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 326,
																		"src": "5146:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 403,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "5160:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5146:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5142:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5131:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 407,
														"nodeType": "ExpressionStatement",
														"src": "5131:36:1"
													},
													{
														"expression": {
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 408,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 376,
																"src": "5201:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5212:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 410,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 326,
																		"src": "5216:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 411,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "5230:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5216:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5212:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5201:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 415,
														"nodeType": "ExpressionStatement",
														"src": "5201:36:1"
													},
													{
														"expression": {
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 416,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 376,
																"src": "5271:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5282:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 418,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 326,
																		"src": "5286:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 419,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "5300:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5286:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5282:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5271:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 423,
														"nodeType": "ExpressionStatement",
														"src": "5271:36:1"
													},
													{
														"expression": {
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 424,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 376,
																"src": "5342:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5353:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 426,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 326,
																		"src": "5357:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 427,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "5371:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5357:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5353:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5342:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 431,
														"nodeType": "ExpressionStatement",
														"src": "5342:36:1"
													},
													{
														"expression": {
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 432,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 329,
																"src": "5812:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 433,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 332,
																	"src": "5821:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 434,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 376,
																	"src": "5829:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5821:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5812:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 437,
														"nodeType": "ExpressionStatement",
														"src": "5812:24:1"
													},
													{
														"expression": {
															"id": 438,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "5857:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 330,
														"id": 439,
														"nodeType": "Return",
														"src": "5850:13:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:1",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1691:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "1683:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1702:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "1694:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1713:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "1705:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:43:1"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1757:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "1749:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:16:1"
									},
									"scope": 1094,
									"src": "1667:4213:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 485,
										"nodeType": "Block",
										"src": "6122:189:1",
										"statements": [
											{
												"assignments": [
													458
												],
												"declarations": [
													{
														"constant": false,
														"id": 458,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6140:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 485,
														"src": "6132:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 457,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6132:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 464,
												"initialValue": {
													"arguments": [
														{
															"id": 460,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "6156:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 461,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "6159:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 462,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "6162:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 459,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															442,
															486
														],
														"referencedDeclaration": 442,
														"src": "6149:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6149:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:42:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$235",
															"typeString": "enum Math.Rounding"
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 465,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "6188:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$235",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 466,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "6200:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$235_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6209:2:1",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 233,
															"src": "6200:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$235",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "6188:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 470,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "6222:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 471,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 447,
																	"src": "6225:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 472,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "6228:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 469,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6215:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6215:25:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6243:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6215:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6188:56:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 482,
												"nodeType": "IfStatement",
												"src": "6184:98:1",
												"trueBody": {
													"id": 481,
													"nodeType": "Block",
													"src": "6246:36:1",
													"statements": [
														{
															"expression": {
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 477,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 458,
																	"src": "6260:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6270:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6260:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 480,
															"nodeType": "ExpressionStatement",
															"src": "6260:11:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 483,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 458,
													"src": "6298:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 456,
												"id": 484,
												"nodeType": "Return",
												"src": "6291:13:1"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "5886:121:1",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "6021:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6036:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "6028:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6047:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "6039:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6058:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "6050:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "6080:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "6071:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$235",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 451,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 450,
														"name": "Rounding",
														"nameLocations": [
															"6071:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 235,
														"src": "6071:8:1"
													},
													"referencedDeclaration": 235,
													"src": "6071:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$235",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6027:62:1"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "6113:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6113:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6112:9:1"
									},
									"scope": 1094,
									"src": "6012:299:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 597,
										"nodeType": "Block",
										"src": "6587:1585:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 494,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "6601:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6606:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6601:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 500,
												"nodeType": "IfStatement",
												"src": "6597:45:1",
												"trueBody": {
													"id": 499,
													"nodeType": "Block",
													"src": "6609:33:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6630:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 493,
															"id": 498,
															"nodeType": "Return",
															"src": "6623:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													502
												],
												"declarations": [
													{
														"constant": false,
														"id": 502,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7329:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 597,
														"src": "7321:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 501,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7321:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 511,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7338:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 505,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 489,
																			"src": "7349:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 504,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			766,
																			802
																		],
																		"referencedDeclaration": 766,
																		"src": "7344:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7344:7:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7355:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7344:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 509,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7343:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7338:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7321:36:1"
											},
											{
												"id": 596,
												"nodeType": "UncheckedBlock",
												"src": "7758:408:1",
												"statements": [
													{
														"expression": {
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 512,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 502,
																"src": "7782:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 517,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 513,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 502,
																				"src": "7792:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 514,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 489,
																					"src": "7801:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 515,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 502,
																					"src": "7805:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7801:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7792:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 518,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7791:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7816:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7791:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7782:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 522,
														"nodeType": "ExpressionStatement",
														"src": "7782:35:1"
													},
													{
														"expression": {
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 523,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 502,
																"src": "7831:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 524,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 502,
																				"src": "7841:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 527,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 525,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 489,
																					"src": "7850:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 526,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 502,
																					"src": "7854:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7850:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7841:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 529,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7840:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7865:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7840:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7831:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 533,
														"nodeType": "ExpressionStatement",
														"src": "7831:35:1"
													},
													{
														"expression": {
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 534,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 502,
																"src": "7880:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 535,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 502,
																				"src": "7890:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 538,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 536,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 489,
																					"src": "7899:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 537,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 502,
																					"src": "7903:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7899:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7890:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 540,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7889:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7914:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7889:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7880:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 544,
														"nodeType": "ExpressionStatement",
														"src": "7880:35:1"
													},
													{
														"expression": {
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 545,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 502,
																"src": "7929:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 550,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 546,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 502,
																				"src": "7939:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 549,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 547,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 489,
																					"src": "7948:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 548,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 502,
																					"src": "7952:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7948:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7939:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 551,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7963:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7938:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7929:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 555,
														"nodeType": "ExpressionStatement",
														"src": "7929:35:1"
													},
													{
														"expression": {
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 556,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 502,
																"src": "7978:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 561,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 557,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 502,
																				"src": "7988:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 560,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 558,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 489,
																					"src": "7997:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 559,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 502,
																					"src": "8001:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7997:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7988:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 562,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7987:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7987:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7978:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 566,
														"nodeType": "ExpressionStatement",
														"src": "7978:35:1"
													},
													{
														"expression": {
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 567,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 502,
																"src": "8027:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 568,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 502,
																				"src": "8037:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 571,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 569,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 489,
																					"src": "8046:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 570,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 502,
																					"src": "8050:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8046:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8037:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 573,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8036:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8061:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8036:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8027:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 577,
														"nodeType": "ExpressionStatement",
														"src": "8027:35:1"
													},
													{
														"expression": {
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 578,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 502,
																"src": "8076:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 583,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 579,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 502,
																				"src": "8086:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 582,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 580,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 489,
																					"src": "8095:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 581,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 502,
																					"src": "8099:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8095:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8086:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 584,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8085:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8110:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8085:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8076:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 588,
														"nodeType": "ExpressionStatement",
														"src": "8076:35:1"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 590,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 502,
																	"src": "8136:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 591,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 489,
																		"src": "8144:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 592,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 502,
																		"src": "8148:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8144:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 589,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "8132:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8132:23:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 493,
														"id": 595,
														"nodeType": "Return",
														"src": "8125:30:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "6317:208:1",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6539:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6552:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "6544:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6544:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6543:11:1"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "6578:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6578:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6577:9:1"
									},
									"scope": 1094,
									"src": "6530:1642:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 633,
										"nodeType": "Block",
										"src": "8348:161:1",
										"statements": [
											{
												"id": 632,
												"nodeType": "UncheckedBlock",
												"src": "8358:145:1",
												"statements": [
													{
														"assignments": [
															610
														],
														"declarations": [
															{
																"constant": false,
																"id": 610,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8390:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 632,
																"src": "8382:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 609,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8382:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 614,
														"initialValue": {
															"arguments": [
																{
																	"id": 612,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "8404:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 611,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	598,
																	634
																],
																"referencedDeclaration": 598,
																"src": "8399:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8399:7:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8382:24:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 615,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 610,
																"src": "8427:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$235",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 619,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 616,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 604,
																					"src": "8437:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$235",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 617,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 235,
																						"src": "8449:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$235_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 618,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8458:2:1",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 233,
																					"src": "8449:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$235",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8437:23:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 624,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 622,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 620,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 610,
																						"src": "8464:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 621,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 610,
																						"src": "8473:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8464:15:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 623,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 601,
																					"src": "8482:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8464:19:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8437:46:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8490:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8437:54:1",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 626,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8486:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 629,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8436:56:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8427:65:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 608,
														"id": 631,
														"nodeType": "Return",
														"src": "8420:72:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "8178:89:1",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 634,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8281:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8294:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "8286:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8286:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8306:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "8297:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$235",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 603,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 602,
														"name": "Rounding",
														"nameLocations": [
															"8297:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 235,
														"src": "8297:8:1"
													},
													"referencedDeclaration": 235,
													"src": "8297:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$235",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8285:30:1"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "8339:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8339:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8338:9:1"
									},
									"scope": 1094,
									"src": "8272:237:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 765,
										"nodeType": "Block",
										"src": "8694:922:1",
										"statements": [
											{
												"assignments": [
													643
												],
												"declarations": [
													{
														"constant": false,
														"id": 643,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8712:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 765,
														"src": "8704:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 642,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8704:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 645,
												"initialValue": {
													"hexValue": "30",
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8721:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8704:18:1"
											},
											{
												"id": 762,
												"nodeType": "UncheckedBlock",
												"src": "8732:855:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 646,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "8760:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8769:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8760:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8775:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8760:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 660,
														"nodeType": "IfStatement",
														"src": "8756:99:1",
														"trueBody": {
															"id": 659,
															"nodeType": "Block",
															"src": "8778:77:1",
															"statements": [
																{
																	"expression": {
																		"id": 653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 651,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 637,
																			"src": "8796:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8796:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 654,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:13:1"
																},
																{
																	"expression": {
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 655,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 643,
																			"src": "8827:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8837:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8827:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 658,
																	"nodeType": "ExpressionStatement",
																	"src": "8827:13:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 661,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "8872:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8881:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8872:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8886:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8872:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 675,
														"nodeType": "IfStatement",
														"src": "8868:96:1",
														"trueBody": {
															"id": 674,
															"nodeType": "Block",
															"src": "8889:75:1",
															"statements": [
																{
																	"expression": {
																		"id": 668,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 666,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 637,
																			"src": "8907:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 667,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8917:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8907:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 669,
																	"nodeType": "ExpressionStatement",
																	"src": "8907:12:1"
																},
																{
																	"expression": {
																		"id": 672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 670,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 643,
																			"src": "8937:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8947:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8937:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 673,
																	"nodeType": "ExpressionStatement",
																	"src": "8937:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 676,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "8981:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8990:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8981:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8995:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8981:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 690,
														"nodeType": "IfStatement",
														"src": "8977:96:1",
														"trueBody": {
															"id": 689,
															"nodeType": "Block",
															"src": "8998:75:1",
															"statements": [
																{
																	"expression": {
																		"id": 683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 681,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 637,
																			"src": "9016:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9026:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9016:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 684,
																	"nodeType": "ExpressionStatement",
																	"src": "9016:12:1"
																},
																{
																	"expression": {
																		"id": 687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 685,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 643,
																			"src": "9046:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 686,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9056:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9046:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 688,
																	"nodeType": "ExpressionStatement",
																	"src": "9046:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 691,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "9090:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9099:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9090:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9104:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9090:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 705,
														"nodeType": "IfStatement",
														"src": "9086:96:1",
														"trueBody": {
															"id": 704,
															"nodeType": "Block",
															"src": "9107:75:1",
															"statements": [
																{
																	"expression": {
																		"id": 698,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 696,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 637,
																			"src": "9125:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9135:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9125:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 699,
																	"nodeType": "ExpressionStatement",
																	"src": "9125:12:1"
																},
																{
																	"expression": {
																		"id": 702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 700,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 643,
																			"src": "9155:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 701,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9165:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9155:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 703,
																	"nodeType": "ExpressionStatement",
																	"src": "9155:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 708,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 706,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "9199:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9208:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9199:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9212:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9199:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 720,
														"nodeType": "IfStatement",
														"src": "9195:93:1",
														"trueBody": {
															"id": 719,
															"nodeType": "Block",
															"src": "9215:73:1",
															"statements": [
																{
																	"expression": {
																		"id": 713,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 711,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 637,
																			"src": "9233:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 712,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9243:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9233:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 714,
																	"nodeType": "ExpressionStatement",
																	"src": "9233:11:1"
																},
																{
																	"expression": {
																		"id": 717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 715,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 643,
																			"src": "9262:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 716,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9272:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9262:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 718,
																	"nodeType": "ExpressionStatement",
																	"src": "9262:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 721,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "9305:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9314:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9305:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 724,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9318:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9305:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 735,
														"nodeType": "IfStatement",
														"src": "9301:93:1",
														"trueBody": {
															"id": 734,
															"nodeType": "Block",
															"src": "9321:73:1",
															"statements": [
																{
																	"expression": {
																		"id": 728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 726,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 637,
																			"src": "9339:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 727,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9349:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9339:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 729,
																	"nodeType": "ExpressionStatement",
																	"src": "9339:11:1"
																},
																{
																	"expression": {
																		"id": 732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 730,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 643,
																			"src": "9368:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9378:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9368:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 733,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 738,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 736,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "9411:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9420:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9411:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9424:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9411:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 750,
														"nodeType": "IfStatement",
														"src": "9407:93:1",
														"trueBody": {
															"id": 749,
															"nodeType": "Block",
															"src": "9427:73:1",
															"statements": [
																{
																	"expression": {
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 741,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 637,
																			"src": "9445:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 742,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9455:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9445:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 744,
																	"nodeType": "ExpressionStatement",
																	"src": "9445:11:1"
																},
																{
																	"expression": {
																		"id": 747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 745,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 643,
																			"src": "9474:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9484:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9474:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 748,
																	"nodeType": "ExpressionStatement",
																	"src": "9474:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 751,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "9517:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9526:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9517:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 754,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9530:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9517:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 761,
														"nodeType": "IfStatement",
														"src": "9513:64:1",
														"trueBody": {
															"id": 760,
															"nodeType": "Block",
															"src": "9533:44:1",
															"statements": [
																{
																	"expression": {
																		"id": 758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 756,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 643,
																			"src": "9551:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 757,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9561:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9551:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 759,
																	"nodeType": "ExpressionStatement",
																	"src": "9551:11:1"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 763,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 643,
													"src": "9603:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 641,
												"id": 764,
												"nodeType": "Return",
												"src": "9596:13:1"
											}
										]
									},
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "8515:113:1",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 766,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8642:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8655:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "8647:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8647:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8646:15:1"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "8685:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8684:9:1"
									},
									"scope": 1094,
									"src": "8633:983:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "9849:165:1",
										"statements": [
											{
												"id": 800,
												"nodeType": "UncheckedBlock",
												"src": "9859:149:1",
												"statements": [
													{
														"assignments": [
															778
														],
														"declarations": [
															{
																"constant": false,
																"id": 778,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9891:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 800,
																"src": "9883:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 777,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9883:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 782,
														"initialValue": {
															"arguments": [
																{
																	"id": 780,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 769,
																	"src": "9905:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 779,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	766,
																	802
																],
																"referencedDeclaration": 766,
																"src": "9900:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9900:11:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9883:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 783,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 778,
																"src": "9932:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$235",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 787,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 784,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 772,
																					"src": "9942:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$235",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 785,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 235,
																						"src": "9954:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$235_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 786,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9963:2:1",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 233,
																					"src": "9954:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$235",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9942:23:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 792,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 790,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 788,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9969:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 789,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 778,
																						"src": "9974:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9969:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 791,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 769,
																					"src": "9983:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9969:19:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9942:46:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9995:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9942:54:1",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9991:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 797,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9941:56:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9932:65:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 776,
														"id": 799,
														"nodeType": "Return",
														"src": "9925:72:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 767,
										"nodeType": "StructuredDocumentation",
										"src": "9622:142:1",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9778:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9791:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "9783:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9783:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9807:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "9798:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$235",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 771,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 770,
														"name": "Rounding",
														"nameLocations": [
															"9798:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 235,
														"src": "9798:8:1"
													},
													"referencedDeclaration": 235,
													"src": "9798:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$235",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9782:34:1"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "9840:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9840:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9839:9:1"
									},
									"scope": 1094,
									"src": "9769:245:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 930,
										"nodeType": "Block",
										"src": "10201:854:1",
										"statements": [
											{
												"assignments": [
													811
												],
												"declarations": [
													{
														"constant": false,
														"id": 811,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10219:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 930,
														"src": "10211:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 810,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10211:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 813,
												"initialValue": {
													"hexValue": "30",
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10228:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10211:18:1"
											},
											{
												"id": 927,
												"nodeType": "UncheckedBlock",
												"src": "10239:787:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 814,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "10267:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10276:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10282:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10276:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10267:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 830,
														"nodeType": "IfStatement",
														"src": "10263:103:1",
														"trueBody": {
															"id": 829,
															"nodeType": "Block",
															"src": "10286:80:1",
															"statements": [
																{
																	"expression": {
																		"id": 823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 819,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 805,
																			"src": "10304:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 822,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 820,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10313:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 821,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10319:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10313:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10304:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 824,
																	"nodeType": "ExpressionStatement",
																	"src": "10304:17:1"
																},
																{
																	"expression": {
																		"id": 827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 825,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 811,
																			"src": "10339:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 826,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10349:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10339:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 828,
																	"nodeType": "ExpressionStatement",
																	"src": "10339:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 831,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "10383:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10392:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10398:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10392:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10383:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 847,
														"nodeType": "IfStatement",
														"src": "10379:103:1",
														"trueBody": {
															"id": 846,
															"nodeType": "Block",
															"src": "10402:80:1",
															"statements": [
																{
																	"expression": {
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 836,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 805,
																			"src": "10420:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 837,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10429:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 838,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10435:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10429:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10420:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 841,
																	"nodeType": "ExpressionStatement",
																	"src": "10420:17:1"
																},
																{
																	"expression": {
																		"id": 844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 842,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 811,
																			"src": "10455:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 843,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10465:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10455:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 845,
																	"nodeType": "ExpressionStatement",
																	"src": "10455:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 848,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "10499:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10508:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10514:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10508:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10499:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 864,
														"nodeType": "IfStatement",
														"src": "10495:103:1",
														"trueBody": {
															"id": 863,
															"nodeType": "Block",
															"src": "10518:80:1",
															"statements": [
																{
																	"expression": {
																		"id": 857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 853,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 805,
																			"src": "10536:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 854,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10545:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 855,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10551:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10545:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10536:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 858,
																	"nodeType": "ExpressionStatement",
																	"src": "10536:17:1"
																},
																{
																	"expression": {
																		"id": 861,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 859,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 811,
																			"src": "10571:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 860,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10581:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10571:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 862,
																	"nodeType": "ExpressionStatement",
																	"src": "10571:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 865,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "10615:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10624:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10630:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10624:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10615:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 881,
														"nodeType": "IfStatement",
														"src": "10611:100:1",
														"trueBody": {
															"id": 880,
															"nodeType": "Block",
															"src": "10633:78:1",
															"statements": [
																{
																	"expression": {
																		"id": 874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 870,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 805,
																			"src": "10651:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 871,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10660:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 872,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10666:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10660:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10651:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 875,
																	"nodeType": "ExpressionStatement",
																	"src": "10651:16:1"
																},
																{
																	"expression": {
																		"id": 878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 876,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 811,
																			"src": "10685:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 877,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10695:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10685:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 879,
																	"nodeType": "ExpressionStatement",
																	"src": "10685:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 882,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "10728:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10737:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10743:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10737:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10728:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 898,
														"nodeType": "IfStatement",
														"src": "10724:100:1",
														"trueBody": {
															"id": 897,
															"nodeType": "Block",
															"src": "10746:78:1",
															"statements": [
																{
																	"expression": {
																		"id": 891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 887,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 805,
																			"src": "10764:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 888,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10773:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 889,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10779:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10773:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10764:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 892,
																	"nodeType": "ExpressionStatement",
																	"src": "10764:16:1"
																},
																{
																	"expression": {
																		"id": 895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 893,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 811,
																			"src": "10798:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 894,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10808:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10798:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 896,
																	"nodeType": "ExpressionStatement",
																	"src": "10798:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 899,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "10841:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10850:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10856:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10850:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10841:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 915,
														"nodeType": "IfStatement",
														"src": "10837:100:1",
														"trueBody": {
															"id": 914,
															"nodeType": "Block",
															"src": "10859:78:1",
															"statements": [
																{
																	"expression": {
																		"id": 908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 904,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 805,
																			"src": "10877:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 907,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 905,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10886:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 906,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10892:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10886:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10877:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 909,
																	"nodeType": "ExpressionStatement",
																	"src": "10877:16:1"
																},
																{
																	"expression": {
																		"id": 912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 910,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 811,
																			"src": "10911:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 911,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10921:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10911:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 913,
																	"nodeType": "ExpressionStatement",
																	"src": "10911:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 916,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "10954:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10963:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10969:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10963:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10954:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 926,
														"nodeType": "IfStatement",
														"src": "10950:66:1",
														"trueBody": {
															"id": 925,
															"nodeType": "Block",
															"src": "10972:44:1",
															"statements": [
																{
																	"expression": {
																		"id": 923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 921,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 811,
																			"src": "10990:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 922,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11000:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10990:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 924,
																	"nodeType": "ExpressionStatement",
																	"src": "10990:11:1"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 928,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 811,
													"src": "11042:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 809,
												"id": 929,
												"nodeType": "Return",
												"src": "11035:13:1"
											}
										]
									},
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "10020:114:1",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10148:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10162:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "10154:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10154:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10153:15:1"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "10192:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10192:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10191:9:1"
									},
									"scope": 1094,
									"src": "10139:916:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "11290:167:1",
										"statements": [
											{
												"id": 965,
												"nodeType": "UncheckedBlock",
												"src": "11300:151:1",
												"statements": [
													{
														"assignments": [
															943
														],
														"declarations": [
															{
																"constant": false,
																"id": 943,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11332:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 965,
																"src": "11324:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 942,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11324:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 947,
														"initialValue": {
															"arguments": [
																{
																	"id": 945,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 934,
																	"src": "11347:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 944,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	931,
																	967
																],
																"referencedDeclaration": 931,
																"src": "11341:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11341:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11324:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 948,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "11374:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 958,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$235",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 952,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 949,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 937,
																					"src": "11384:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$235",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 950,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 235,
																						"src": "11396:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$235_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 951,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11405:2:1",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 233,
																					"src": "11396:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$235",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11384:23:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 957,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 955,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 953,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11411:2:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 954,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 943,
																						"src": "11417:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11411:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 956,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 934,
																					"src": "11426:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11411:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11384:47:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 960,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11438:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11384:55:1",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 959,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11434:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 962,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11383:57:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11374:66:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 941,
														"id": 964,
														"nodeType": "Return",
														"src": "11367:73:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 932,
										"nodeType": "StructuredDocumentation",
										"src": "11061:143:1",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11218:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11232:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "11224:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11224:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11248:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "11239:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$235",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 936,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 935,
														"name": "Rounding",
														"nameLocations": [
															"11239:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 235,
														"src": "11239:8:1"
													},
													"referencedDeclaration": 235,
													"src": "11239:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$235",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11223:34:1"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "11281:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11281:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11280:9:1"
									},
									"scope": 1094,
									"src": "11209:248:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1053,
										"nodeType": "Block",
										"src": "11771:600:1",
										"statements": [
											{
												"assignments": [
													976
												],
												"declarations": [
													{
														"constant": false,
														"id": 976,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11789:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 1053,
														"src": "11781:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 975,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11781:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 978,
												"initialValue": {
													"hexValue": "30",
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11798:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11781:18:1"
											},
											{
												"id": 1050,
												"nodeType": "UncheckedBlock",
												"src": "11809:533:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 979,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "11837:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 980,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11846:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11837:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11852:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11837:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 993,
														"nodeType": "IfStatement",
														"src": "11833:98:1",
														"trueBody": {
															"id": 992,
															"nodeType": "Block",
															"src": "11855:76:1",
															"statements": [
																{
																	"expression": {
																		"id": 986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 984,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 970,
																			"src": "11873:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 985,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11883:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11873:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 987,
																	"nodeType": "ExpressionStatement",
																	"src": "11873:13:1"
																},
																{
																	"expression": {
																		"id": 990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 988,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 976,
																			"src": "11904:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 989,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11914:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11904:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 991,
																	"nodeType": "ExpressionStatement",
																	"src": "11904:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 994,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "11948:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 995,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11957:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11948:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11962:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11948:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1008,
														"nodeType": "IfStatement",
														"src": "11944:95:1",
														"trueBody": {
															"id": 1007,
															"nodeType": "Block",
															"src": "11965:74:1",
															"statements": [
																{
																	"expression": {
																		"id": 1001,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 999,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 970,
																			"src": "11983:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1000,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11993:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11983:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1002,
																	"nodeType": "ExpressionStatement",
																	"src": "11983:12:1"
																},
																{
																	"expression": {
																		"id": 1005,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1003,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 976,
																			"src": "12013:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1004,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12023:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12013:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1006,
																	"nodeType": "ExpressionStatement",
																	"src": "12013:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1011,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1009,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "12056:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1010,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12065:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12056:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12070:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12056:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1023,
														"nodeType": "IfStatement",
														"src": "12052:95:1",
														"trueBody": {
															"id": 1022,
															"nodeType": "Block",
															"src": "12073:74:1",
															"statements": [
																{
																	"expression": {
																		"id": 1016,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1014,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 970,
																			"src": "12091:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1015,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12101:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12091:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1017,
																	"nodeType": "ExpressionStatement",
																	"src": "12091:12:1"
																},
																{
																	"expression": {
																		"id": 1020,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1018,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 976,
																			"src": "12121:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1019,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12131:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12121:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1021,
																	"nodeType": "ExpressionStatement",
																	"src": "12121:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1024,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "12164:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12173:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12164:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12178:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12164:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1038,
														"nodeType": "IfStatement",
														"src": "12160:95:1",
														"trueBody": {
															"id": 1037,
															"nodeType": "Block",
															"src": "12181:74:1",
															"statements": [
																{
																	"expression": {
																		"id": 1031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1029,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 970,
																			"src": "12199:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1030,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12209:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12199:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1032,
																	"nodeType": "ExpressionStatement",
																	"src": "12199:12:1"
																},
																{
																	"expression": {
																		"id": 1035,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1033,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 976,
																			"src": "12229:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1034,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12239:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12229:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1036,
																	"nodeType": "ExpressionStatement",
																	"src": "12229:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1039,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "12272:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12281:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12272:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1042,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12272:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1049,
														"nodeType": "IfStatement",
														"src": "12268:64:1",
														"trueBody": {
															"id": 1048,
															"nodeType": "Block",
															"src": "12288:44:1",
															"statements": [
																{
																	"expression": {
																		"id": 1046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1044,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 976,
																			"src": "12306:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1045,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12316:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12306:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1047,
																	"nodeType": "ExpressionStatement",
																	"src": "12306:11:1"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1051,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 976,
													"src": "12358:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 974,
												"id": 1052,
												"nodeType": "Return",
												"src": "12351:13:1"
											}
										]
									},
									"documentation": {
										"id": 968,
										"nodeType": "StructuredDocumentation",
										"src": "11463:240:1",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1054,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11717:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11732:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "11724:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11724:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11723:15:1"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "11762:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11762:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11761:9:1"
									},
									"scope": 1094,
									"src": "11708:663:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1092,
										"nodeType": "Block",
										"src": "12608:174:1",
										"statements": [
											{
												"id": 1091,
												"nodeType": "UncheckedBlock",
												"src": "12618:158:1",
												"statements": [
													{
														"assignments": [
															1066
														],
														"declarations": [
															{
																"constant": false,
																"id": 1066,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12650:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 1091,
																"src": "12642:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1065,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12642:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1070,
														"initialValue": {
															"arguments": [
																{
																	"id": 1068,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "12666:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1067,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1054,
																	1093
																],
																"referencedDeclaration": 1054,
																"src": "12659:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12659:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12642:30:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1071,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1066,
																"src": "12693:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1084,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$235",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1075,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1072,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1060,
																					"src": "12703:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$235",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1073,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 235,
																						"src": "12715:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$235_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1074,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12724:2:1",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 233,
																					"src": "12715:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$235",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12703:23:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1083,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1081,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1076,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12730:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1079,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1077,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1066,
																									"src": "12736:6:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1078,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12746:1:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12736:11:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1080,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12735:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12730:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1082,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1057,
																					"src": "12751:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12730:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12703:53:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1086,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12763:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12703:61:1",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1085,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12759:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1088,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12702:63:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12693:72:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1064,
														"id": 1090,
														"nodeType": "Return",
														"src": "12686:79:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1055,
										"nodeType": "StructuredDocumentation",
										"src": "12377:144:1",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1093,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12535:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12550:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "12542:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12542:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12566:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "12557:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$235",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1059,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1058,
														"name": "Rounding",
														"nameLocations": [
															"12557:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 235,
														"src": "12557:8:1"
													},
													"referencedDeclaration": 235,
													"src": "12557:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$235",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12541:34:1"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "12599:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12599:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12598:9:1"
									},
									"scope": 1094,
									"src": "12526:256:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1095,
							"src": "202:12582:1",
							"usedErrors": []
						}
					],
					"src": "103:12682:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							1199
						]
					},
					"id": 1200,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1096,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1097,
								"nodeType": "StructuredDocumentation",
								"src": "134:80:2",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1199,
							"linearizedBaseContracts": [
								1199
							],
							"name": "SignedMath",
							"nameLocation": "223:10:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1114,
										"nodeType": "Block",
										"src": "375:37:2",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1107,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "392:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1108,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "396:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "392:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1111,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1102,
														"src": "404:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "392:13:2",
													"trueExpression": {
														"id": 1110,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "400:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1106,
												"id": 1113,
												"nodeType": "Return",
												"src": "385:20:2"
											}
										]
									},
									"documentation": {
										"id": 1098,
										"nodeType": "StructuredDocumentation",
										"src": "240:66:2",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 1115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "320:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "331:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "324:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1099,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "324:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "341:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "334:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1101,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "334:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:20:2"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "367:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1104,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "367:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:8:2"
									},
									"scope": 1199,
									"src": "311:101:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1132,
										"nodeType": "Block",
										"src": "554:37:2",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1125,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "571:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1126,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "575:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "571:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1129,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "583:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "571:13:2",
													"trueExpression": {
														"id": 1128,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1118,
														"src": "579:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1124,
												"id": 1131,
												"nodeType": "Return",
												"src": "564:20:2"
											}
										]
									},
									"documentation": {
										"id": 1116,
										"nodeType": "StructuredDocumentation",
										"src": "418:67:2",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 1133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "499:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "510:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "503:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1117,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "520:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "513:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1119,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "513:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:20:2"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "546:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1122,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "546:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:8:2"
									},
									"scope": 1199,
									"src": "490:101:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1176,
										"nodeType": "Block",
										"src": "796:162:2",
										"statements": [
											{
												"assignments": [
													1144
												],
												"declarations": [
													{
														"constant": false,
														"id": 1144,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "865:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 1176,
														"src": "858:8:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1143,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "858:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1157,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1145,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1136,
																	"src": "870:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1146,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1138,
																	"src": "874:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "870:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1148,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "869:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1151,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1149,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1136,
																				"src": "881:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1150,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1138,
																				"src": "885:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "881:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1152,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "880:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "891:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "880:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1155,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "879:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "869:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "858:35:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1158,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "910:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1166,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1163,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1144,
																						"src": "930:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1162,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "922:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1161,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "922:7:2",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1164,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "922:10:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 1165,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "936:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "922:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "915:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1159,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "915:6:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "915:25:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1170,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1168,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1136,
																				"src": "944:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1169,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1138,
																				"src": "948:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "944:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1171,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "943:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "915:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1173,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "914:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "910:41:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1142,
												"id": 1175,
												"nodeType": "Return",
												"src": "903:48:2"
											}
										]
									},
									"documentation": {
										"id": 1134,
										"nodeType": "StructuredDocumentation",
										"src": "597:126:2",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 1177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "737:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "752:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "745:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1135,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "745:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "762:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "755:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1137,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "755:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:20:2"
									},
									"returnParameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "788:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1140,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "788:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:8:2"
									},
									"scope": 1199,
									"src": "728:230:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1197,
										"nodeType": "Block",
										"src": "1102:158:2",
										"statements": [
											{
												"id": 1196,
												"nodeType": "UncheckedBlock",
												"src": "1112:142:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1187,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1180,
																			"src": "1227:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1232:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1227:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1240:2:2",
																		"subExpression": {
																			"id": 1191,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1180,
																			"src": "1241:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1227:15:2",
																	"trueExpression": {
																		"id": 1190,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1180,
																		"src": "1236:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1219:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1185,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1219:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1219:24:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1184,
														"id": 1195,
														"nodeType": "Return",
														"src": "1212:31:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1178,
										"nodeType": "StructuredDocumentation",
										"src": "964:78:2",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 1198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1056:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1067:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "1060:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1179,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:10:2"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "1093:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:9:2"
									},
									"scope": 1199,
									"src": "1047:213:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1200,
							"src": "215:1047:2",
							"usedErrors": []
						}
					],
					"src": "109:1154:2"
				},
				"id": 2
			},
			"event.sol": {
				"ast": {
					"absolutePath": "event.sol",
					"exportedSymbols": {
						"Event_Org": [
							1316
						],
						"Math": [
							1094
						],
						"SignedMath": [
							1199
						],
						"Strings": [
							228
						]
					},
					"id": 1317,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1201,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:33:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 1202,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1317,
							"sourceUnit": 229,
							"src": "72:51:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Event_Org",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1316,
							"linearizedBaseContracts": [
								1316
							],
							"name": "Event_Org",
							"nameLocation": "136:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1204,
									"mutability": "mutable",
									"name": "manager",
									"nameLocation": "156:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1316,
									"src": "148:15:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1203,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "148:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1212,
										"nodeType": "Block",
										"src": "183:40:3",
										"statements": [
											{
												"expression": {
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1207,
														"name": "manager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "187:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1208,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "197:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "201:6:3",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "197:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "187:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1211,
												"nodeType": "ExpressionStatement",
												"src": "187:20:3"
											}
										]
									},
									"id": 1213,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "181:2:3"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "183:0:3"
									},
									"scope": 1316,
									"src": "170:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"canonicalName": "Event_Org.Event",
									"id": 1220,
									"members": [
										{
											"constant": false,
											"id": 1215,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "253:4:3",
											"nodeType": "VariableDeclaration",
											"scope": 1220,
											"src": "246:11:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1214,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "246:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1217,
											"mutability": "mutable",
											"name": "date",
											"nameLocation": "265:4:3",
											"nodeType": "VariableDeclaration",
											"scope": 1220,
											"src": "260:9:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1216,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "260:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1219,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "277:5:3",
											"nodeType": "VariableDeclaration",
											"scope": 1220,
											"src": "272:10:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1218,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "272:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Event",
									"nameLocation": "238:5:3",
									"nodeType": "StructDefinition",
									"scope": 1316,
									"src": "231:61:3",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1222,
									"mutability": "mutable",
									"name": "id",
									"nameLocation": "299:2:3",
									"nodeType": "VariableDeclaration",
									"scope": 1316,
									"src": "294:7:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1221,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "294:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1227,
									"mutability": "mutable",
									"name": "noname",
									"nameLocation": "329:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 1316,
									"src": "307:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$1220_storage_$",
										"typeString": "mapping(uint256 => struct Event_Org.Event)"
									},
									"typeName": {
										"id": 1226,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1223,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "316:4:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "307:21:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$1220_storage_$",
											"typeString": "mapping(uint256 => struct Event_Org.Event)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1225,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1224,
												"name": "Event",
												"nameLocations": [
													"322:5:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1220,
												"src": "322:5:3"
											},
											"referencedDeclaration": 1220,
											"src": "322:5:3",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Event_$1220_storage_ptr",
												"typeString": "struct Event_Org.Event"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1256,
										"nodeType": "Block",
										"src": "413:87:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1237,
																"name": "manager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1204,
																"src": "424:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1238,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "435:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "439:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "435:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "424:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1236,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "416:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "416:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1242,
												"nodeType": "ExpressionStatement",
												"src": "416:30:3"
											},
											{
												"expression": {
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1243,
															"name": "noname",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1227,
															"src": "449:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$1220_storage_$",
																"typeString": "mapping(uint256 => struct Event_Org.Event storage ref)"
															}
														},
														"id": 1245,
														"indexExpression": {
															"id": 1244,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1222,
															"src": "456:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "449:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Event_$1220_storage",
															"typeString": "struct Event_Org.Event storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1247,
																"name": "name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1229,
																"src": "468:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"id": 1248,
																"name": "date",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1231,
																"src": "475:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1249,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1233,
																"src": "481:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1246,
															"name": "Event",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "462:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Event_$1220_storage_ptr_$",
																"typeString": "type(struct Event_Org.Event storage pointer)"
															}
														},
														"id": 1250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "462:25:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Event_$1220_memory_ptr",
															"typeString": "struct Event_Org.Event memory"
														}
													},
													"src": "449:38:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Event_$1220_storage",
														"typeString": "struct Event_Org.Event storage ref"
													}
												},
												"id": 1252,
												"nodeType": "ExpressionStatement",
												"src": "449:38:3"
											},
											{
												"expression": {
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "490:4:3",
													"subExpression": {
														"id": 1253,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1222,
														"src": "490:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1255,
												"nodeType": "ExpressionStatement",
												"src": "490:4:3"
											}
										]
									},
									"functionSelector": "163f41af",
									"id": 1257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "CreateEvent",
									"nameLocation": "349:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "375:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "361:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1228,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "361:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "date",
												"nameLocation": "387:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "382:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1230,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "382:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "399:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "394:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1232,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "394:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "360:45:3"
									},
									"returnParameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "413:0:3"
									},
									"scope": 1316,
									"src": "340:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1276,
										"nodeType": "Block",
										"src": "576:56:3",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1266,
																	"name": "noname",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1227,
																	"src": "589:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$1220_storage_$",
																		"typeString": "mapping(uint256 => struct Event_Org.Event storage ref)"
																	}
																},
																"id": 1268,
																"indexExpression": {
																	"id": 1267,
																	"name": "id_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1259,
																	"src": "596:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "589:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Event_$1220_storage",
																	"typeString": "struct Event_Org.Event storage ref"
																}
															},
															"id": 1269,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "601:4:3",
															"memberName": "name",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1215,
															"src": "589:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1270,
																	"name": "noname",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1227,
																	"src": "608:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$1220_storage_$",
																		"typeString": "mapping(uint256 => struct Event_Org.Event storage ref)"
																	}
																},
																"id": 1272,
																"indexExpression": {
																	"id": 1271,
																	"name": "id_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1259,
																	"src": "615:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "608:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Event_$1220_storage",
																	"typeString": "struct Event_Org.Event storage ref"
																}
															},
															"id": 1273,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "620:5:3",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1219,
															"src": "608:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1274,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "587:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_string_storage_$_t_uint256_$",
														"typeString": "tuple(string storage ref,uint256)"
													}
												},
												"functionReturnParameters": 1265,
												"id": 1275,
												"nodeType": "Return",
												"src": "581:45:3"
											}
										]
									},
									"functionSelector": "dc8903a8",
									"id": 1277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Checkevent",
									"nameLocation": "513:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "id_",
												"nameLocation": "529:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "524:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "524:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "523:10:3"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "555:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1261,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "555:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "571:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1263,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "571:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:22:3"
									},
									"scope": 1316,
									"src": "504:128:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1314,
										"nodeType": "Block",
										"src": "712:227:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1286,
															"name": "cash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "795:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1287,
																	"name": "noname",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1227,
																	"src": "802:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$1220_storage_$",
																		"typeString": "mapping(uint256 => struct Event_Org.Event storage ref)"
																	}
																},
																"id": 1289,
																"indexExpression": {
																	"id": 1288,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1279,
																	"src": "809:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "802:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Event_$1220_storage",
																	"typeString": "struct Event_Org.Event storage ref"
																}
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "813:5:3",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1219,
															"src": "802:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "795:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1297,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1292,
															"name": "cash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "822:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1293,
																	"name": "noname",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1227,
																	"src": "829:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$1220_storage_$",
																		"typeString": "mapping(uint256 => struct Event_Org.Event storage ref)"
																	}
																},
																"id": 1295,
																"indexExpression": {
																	"id": 1294,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1279,
																	"src": "836:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "829:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Event_$1220_storage",
																	"typeString": "struct Event_Org.Event storage ref"
																}
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "840:5:3",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1219,
															"src": "829:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "822:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "795:50:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1313,
												"nodeType": "IfStatement",
												"src": "792:140:3",
												"trueBody": {
													"id": 1312,
													"nodeType": "Block",
													"src": "846:86:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "5469636b657420707269636520697320",
																		"id": 1302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "874:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_7b44d63f8640588bdc53652e1f9235a404b86d08f60e9227e7285853fb3c56bb",
																			"typeString": "literal_string \"Ticket price is \""
																		},
																		"value": "Ticket price is "
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"baseExpression": {
																						"id": 1305,
																						"name": "noname",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1227,
																						"src": "910:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$1220_storage_$",
																							"typeString": "mapping(uint256 => struct Event_Org.Event storage ref)"
																						}
																					},
																					"id": 1307,
																					"indexExpression": {
																						"id": 1306,
																						"name": "id",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1279,
																						"src": "917:2:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "910:10:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Event_$1220_storage",
																						"typeString": "struct Event_Org.Event storage ref"
																					}
																				},
																				"id": 1308,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "921:5:3",
																				"memberName": "price",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1219,
																				"src": "910:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1303,
																				"name": "Strings",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 228,
																				"src": "893:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Strings_$228_$",
																					"typeString": "type(library Strings)"
																				}
																			},
																			"id": 1304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "901:8:3",
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 58,
																			"src": "893:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 1309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "893:34:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_7b44d63f8640588bdc53652e1f9235a404b86d08f60e9227e7285853fb3c56bb",
																			"typeString": "literal_string \"Ticket price is \""
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "860:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 1299,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "860:6:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "867:6:3",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "860:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "860:68:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1285,
															"id": 1311,
															"nodeType": "Return",
															"src": "853:75:3"
														}
													]
												}
											}
										]
									},
									"functionSelector": "a8445a1e",
									"id": 1315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "BuyTicket",
									"nameLocation": "645:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "660:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "655:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1278,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "655:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "cash",
												"nameLocation": "670:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "665:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1280,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "665:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:21:3"
									},
									"returnParameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "697:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1283,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "697:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "696:15:3"
									},
									"scope": 1316,
									"src": "636:303:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1317,
							"src": "127:815:3",
							"usedErrors": []
						}
					],
					"src": "37:909:3"
				},
				"id": 3
			}
		}
	}
}